import e from"lodash";import t from"elliptic";import r from"bn.js";import i from"bs58";import o from"cashaddrjs";import n from"hash.js";import a from"assert";import s from"randombytes";import u from"buffer-compare";import c from"unorm";import l from"url";var h=[{name:"InvalidB58Char",message:"Invalid Base58 character: {0} in {1}"},{name:"InvalidB58Checksum",message:"Invalid Base58 checksum for {0}"},{name:"InvalidNetwork",message:"Invalid version for network: got {0}"},{name:"InvalidState",message:"Invalid state: {0}"},{name:"NotImplemented",message:"Function {0} was not implemented yet"},{name:"InvalidNetworkArgument",message:'Invalid network: must be "livenet" or "testnet", got {0}'},{name:"InvalidArgument",message(){return"Invalid Argument".concat((0>=arguments.length?void 0:arguments[0])?": ".concat(0>=arguments.length?void 0:arguments[0]):"").concat((1>=arguments.length?void 0:arguments[1])?" Documentation: ".concat("http://bitcore.io/").concat(1>=arguments.length?void 0:arguments[1]):"")}},{name:"AbstractMethodInvoked",message:"Abstract Method Invocation: {0}"},{name:"InvalidArgumentType",message(){return"Invalid Argument for ".concat(2>=arguments.length?void 0:arguments[2],", expected ").concat(1>=arguments.length?void 0:arguments[1]," but got ").concat(typeof(0>=arguments.length?void 0:arguments[0]))}},{name:"Unit",message:"Internal Error on Unit {0}",errors:[{name:"UnknownCode",message:"Unrecognized unit code: {0}"},{name:"InvalidRate",message:"Invalid exchange rate: {0}"}]},{name:"Transaction",message:"Internal Error on Transaction {0}",errors:[{name:"Input",message:"Internal Error on Input {0}",errors:[{name:"MissingScript",message:"Need a script to create an input"},{name:"UnsupportedScript",message:"Unsupported input script type: {0}"},{name:"MissingPreviousOutput",message:"No previous output information."}]},{name:"NeedMoreInfo",message:"{0}"},{name:"InvalidSorting",message:"The sorting function provided did not return the change output as one of the array elements"},{name:"InvalidOutputAmountSum",message:"{0}"},{name:"MissingSignatures",message:"Some inputs have not been fully signed"},{name:"InvalidIndex",message:"Invalid index: {0} is not between 0, {1}"},{name:"UnableToVerifySignature",message:"Unable to verify signature: {0}"},{name:"DustOutputs",message:"Dust amount detected in one output"},{name:"InvalidSatoshis",message:"Output satoshis are invalid"},{name:"FeeError",message:"Internal Error on Fee {0}",errors:[{name:"TooSmall",message:"Fee is too small: {0}"},{name:"TooLarge",message:"Fee is too large: {0}"},{name:"Different",message:"Unspent value is different from specified fee: {0}"}]},{name:"ChangeAddressMissing",message:"Change address is missing"},{name:"BlockHeightTooHigh",message:"Block Height can be at most 2^32 -1"},{name:"NLockTimeOutOfRange",message:"Block Height can only be between 0 and 499 999 999"},{name:"LockTimeTooEarly",message:"Lock Time can't be earlier than UNIX date 500 000 000"}]},{name:"Script",message:"Internal Error on Script {0}",errors:[{name:"UnrecognizedAddress",message:"Expected argument {0} to be an address"},{name:"CantDeriveAddress",message:"Can't derive address associated with script {0}, needs to be p2pkh in, p2pkh out, p2sh in, or p2sh out."},{name:"InvalidBuffer",message:"Invalid script buffer: can't parse valid script from given buffer {0}"}]},{name:"HDPrivateKey",message:"Internal Error on HDPrivateKey {0}",errors:[{name:"InvalidDerivationArgument",message:"Invalid derivation argument {0}, expected string, or number and boolean"},{name:"InvalidEntropyArgument",message:"Invalid entropy: must be an hexa string or binary buffer, got {0}",errors:[{name:"TooMuchEntropy",message:'Invalid entropy: more than 512 bits is non standard, got "{0}"'},{name:"NotEnoughEntropy",message:'Invalid entropy: at least 128 bits needed, got "{0}"'}]},{name:"InvalidLength",message:"Invalid length for xprivkey string in {0}"},{name:"InvalidPath",message:"Invalid derivation path: {0}"},{name:"UnrecognizedArgument",message:'Invalid argument: creating a HDPrivateKey requires a string, buffer, json or object, got "{0}"'}]},{name:"HDPublicKey",message:"Internal Error on HDPublicKey {0}",errors:[{name:"ArgumentIsPrivateExtended",message:"Argument is an extended private key: {0}"},{name:"InvalidDerivationArgument",message:"Invalid derivation argument: got {0}"},{name:"InvalidLength",message:'Invalid length for xpubkey: got "{0}"'},{name:"InvalidPath",message:'Invalid derivation path, it should look like: "m/1/100", got "{0}"'},{name:"InvalidIndexCantDeriveHardened",message:"Invalid argument: creating a hardened path requires an HDPrivateKey"},{name:"MustSupplyArgument",message:"Must supply an argument to create a HDPublicKey"},{name:"UnrecognizedArgument",message:"Invalid argument for creation, must be string, json, buffer, or object"}]},{name:"Mnemonic",message:"Internal Error on bitcore-mnemonic module {0}",errors:[{name:"InvalidEntropy",message:"Entropy length must be an even multiple of 11 bits: {0}"},{name:"UnknownWordlist",message:"Could not detect the used word list: {0}"},{name:"InvalidMnemonic",message:"Mnemonic string is invalid: {0}"}]}];const f=function(t,r){const i=function(){for(var t=arguments.length,i=Array(t),o=0;o<t;o++)i[o]=arguments[o];if(e.isString(r.message))this.message=function(e,t){return e.replace("{0}",t[0]).replace("{1}",t[1]).replace("{2}",t[2])}(r.message,i);else{if(!e.isFunction(r.message))throw new Error("Invalid error definition for ".concat(r.name));this.message=r.message.apply(null,i)}this.stack="".concat(this.message,"\n").concat((new Error).stack)};return(i.prototype=Object.create(t.prototype)).name=t.prototype.name+r.name,t[r.name]=i,r.errors&&p(i,r.errors),i},p=function(t,r){e.each(r,e=>f(t,e))},d={};var m;d.Error=function(){this.message="Internal error",this.stack="".concat(this.message,"\n").concat((new Error).stack)},d.Error.prototype=Object.create(Error.prototype),d.Error.prototype.name="bitcore.Error",m=d.Error,p(m,h),d.Error.extend=function(e){return f(d.Error,e)};var g=d.Error,b={checkState(e,t){if(!e)throw new g.InvalidState(t)},checkArgument(e,t,r,i){if(!e)throw new g.InvalidArgument(t,r,i)},checkArgumentType(t,r,i){if(i=i||"(unknown name)",e.isString(r)){if("Buffer"===r){if(!Buffer.isBuffer(t))throw new g.InvalidArgumentType(t,r,i)}else if(typeof t!==r)throw new g.InvalidArgumentType(t,r,i)}else if(!(t instanceof r))throw new g.InvalidArgumentType(t,r.name,i)}};const y=["1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","G","H","J","K","L","M","N","P","Q","R","S","T","U","V","W","X","Y","Z","a","b","c","d","e","f","g","h","i","j","k","m","n","o","p","q","r","s","t","u","v","w","x","y","z"],v=function e(t){if(!(this instanceof e))return new e(t);Buffer.isBuffer(t)?this.fromBuffer(t):"string"==typeof t?this.fromString(t):t&&this.set(t)};v.validCharacters=function(t){return Buffer.isBuffer(t)&&(t=t.toString()),e.every(e.map(t,t=>e.includes(y,t)))},v.prototype.set=function(e){return this.buf=e.buf||this.buf||void 0,this},v.encode=function(e){if(!Buffer.isBuffer(e))throw new Error("Input should be a buffer");return i.encode(e)},v.decode=function(e){if("string"!=typeof e)throw new Error("Input should be a string");return Buffer.from(i.decode(e))},v.prototype.fromBuffer=function(e){return this.buf=e,this},v.prototype.fromString=function(e){const t=v.decode(e);return this.buf=t,this},v.prototype.toBuffer=function(){return this.buf},v.prototype.toString=function(){return v.encode(this.buf)};const _=function(t){return!!e.isString(t)&&/^[0-9a-fA-F]+$/.test(t)};var S={isValidJSON:function(t){let r;if(!e.isString(t))return!1;try{r=JSON.parse(t)}catch(e){return!1}return!("object"!=typeof r)},isHexa:_,isHexaString:_,cloneArray:e=>[].concat(e),defineImmutable:function(e,t){return Object.keys(t).forEach(r=>{Object.defineProperty(e,r,{configurable:!1,enumerable:!0,value:t[r]})}),e},isNaturalNumber:function(e){return"number"==typeof e&&Number.isFinite(e)&&Math.floor(e)===e&&0<=e}};function I(e,t){if(e.length!==t.length)return!1;const r=e.length;for(let i=0;i<r;i+=1)if(e[i]!==t[i])return!1;return!0}const k={fill:function(e,t){b.checkArgumentType(e,"Buffer","buffer"),b.checkArgumentType(t,"number","value");const r=e.length;for(let i=0;i<r;i+=1)e[i]=t;return e},copy(e){const t=Buffer.alloc(e.length);return e.copy(t),t},isBuffer:function(e){return Buffer.isBuffer(e)||e instanceof Uint8Array},emptyBuffer:function(e){b.checkArgumentType(e,"number","bytes");const t=Buffer.alloc(e);for(let r=0;r<e;r+=1)t.write("\0",r);return t},concat:Buffer.concat,equals:I,equal:I,integerAsSingleByteBuffer:function(e){return b.checkArgumentType(e,"number","integer"),Buffer.from([255&e])},integerAsBuffer:function(e){return b.checkArgumentType(e,"number","integer"),Buffer.from([255&e>>24,255&e>>16,255&e>>8,255&e])},integerFromBuffer:function(e){return b.checkArgumentType(e,"Buffer","buffer"),e[0]<<24|e[1]<<16|e[2]<<8|e[3]},integerFromSingleByteBuffer:function(e){return b.checkArgumentType(e,"Buffer","buffer"),e[0]},bufferToHex:function(e){return b.checkArgumentType(e,"Buffer","buffer"),e.toString("hex")},reverse:function(e){const t=Buffer.alloc(e.length);for(let r=0;r<e.length;r+=1)t[r]=e[e.length-r-1];return t},hexToBuffer:function(e){return a(S.isHexa(e)),Buffer.from(e,"hex")}};k.NULL_HASH=k.fill(Buffer.alloc(32),0),k.EMPTY_BUFFER=Buffer.alloc(0);const w={sha1:function(e){b.checkArgument(k.isBuffer(e));const t=n.sha1().update(e).digest("hex");return Buffer.from(t,"hex")}};w.sha1.blocksize=512,w.sha256=function(e){b.checkArgument(k.isBuffer(e));const t=n.sha256().update(e).digest("hex");return Buffer.from(t,"hex")},w.sha256.blocksize=512,w.sha256sha256=function(e){return b.checkArgument(k.isBuffer(e)),w.sha256(w.sha256(e))},w.ripemd160=function(e){b.checkArgument(k.isBuffer(e));const t=n.ripemd160().update(e).digest("hex");return Buffer.from(t,"hex")},w.sha256ripemd160=function(e){return b.checkArgument(k.isBuffer(e)),w.ripemd160(w.sha256(e))},w.sha512=function(e){b.checkArgument(k.isBuffer(e));const t=n.sha512().update(e).digest("hex");return Buffer.from(t,"hex")},w.sha512.blocksize=1024,w.hmac=function(e,t,r){b.checkArgument(k.isBuffer(t)),b.checkArgument(k.isBuffer(r)),b.checkArgument(e.blocksize);const i=e.blocksize/8;if(r.length>i)r=e(r);else if(r<i){const e=Buffer.alloc(i);e.fill(0),r.copy(e),r=e}const o=Buffer.alloc(i);o.fill(92);const n=Buffer.alloc(i);n.fill(54);const a=Buffer.alloc(i),s=Buffer.alloc(i);for(let e=0;e<i;e+=1)a[e]=o[e]^r[e],s[e]=n[e]^r[e];return e(Buffer.concat([a,e(Buffer.concat([s,t]))]))},w.sha256hmac=function(e,t){return w.hmac(w.sha256,e,t)},w.sha512hmac=function(e,t){return w.hmac(w.sha512,e,t)};const O=function e(t){if(!(this instanceof e))return new e(t);Buffer.isBuffer(t)?this.fromBuffer(t):"string"==typeof t?this.fromString(t):t&&this.set(t)};O.prototype.set=function(e){return this.buf=e.buf||this.buf||void 0,this},O.validChecksum=function(t,r){return e.isString(t)&&(t=Buffer.from(v.decode(t))),e.isString(r)&&(r=Buffer.from(v.decode(r))),r||(r=t.slice(-4),t=t.slice(0,-4)),O.checksum(t).toString("hex")===r.toString("hex")},O.decode=function(e){if("string"!=typeof e)throw new Error("Input must be a string");const t=Buffer.from(v.decode(e));if(4>t.length)throw new Error("Input string too short");const r=t.slice(0,-4),i=t.slice(-4),o=w.sha256sha256(r).slice(0,4);if(i.toString("hex")!==o.toString("hex"))throw new Error("Checksum mismatch");return r},O.checksum=function(e){return w.sha256sha256(e).slice(0,4)},O.encode=function(e){if(!Buffer.isBuffer(e))throw new Error("Input must be a buffer");const t=Buffer.alloc(e.length+4),r=O.checksum(e);return e.copy(t),r.copy(t,e.length),v.encode(t)},O.prototype.fromBuffer=function(e){return this.buf=e,this},O.prototype.fromString=function(e){const t=O.decode(e);return this.buf=t,this},O.prototype.toBuffer=function(){return this.buf},O.prototype.toString=function(){return O.encode(this.buf)};const P=[],E={};function B(){}function A(t,r){if(~P.indexOf(t))return t;if(r){e.isArray(r)||(r=[r]);const i=P.findIndex(i=>e.some(r,e=>i[e]===t));return-1===i?void 0:P[i]}return E[t]}function T(t){const r=new B;return S.defineImmutable(r,{name:t.name,alias:t.alias,pubkeyhash:t.pubkeyhash,privatekey:t.privatekey,scripthash:t.scripthash,xpubkey:t.xpubkey,xprivkey:t.xprivkey}),t.networkMagic&&S.defineImmutable(r,{networkMagic:k.integerAsBuffer(t.networkMagic)}),t.port&&S.defineImmutable(r,{port:t.port}),t.dnsSeeds&&S.defineImmutable(r,{dnsSeeds:t.dnsSeeds}),e.each(r,t=>{e.isUndefined(t)||e.isObject(t)||(E[t]=r)}),P.push(r),r}B.prototype.toString=function(){return this.name},T({name:"livenet",alias:"mainnet",pubkeyhash:0,privatekey:128,scripthash:5,xpubkey:76067358,xprivkey:76066276,networkMagic:4190024921,port:8333,dnsSeeds:["seed.bitcoin.sipa.be","dnsseed.bluematt.me","dnsseed.bitcoin.dashjr.org","seed.bitcoinstats.com","seed.bitnodes.io","bitseed.xf2.org"]});const x=A("livenet");T({name:"testnet",alias:"regtest",pubkeyhash:111,privatekey:239,scripthash:196,xpubkey:70617039,xprivkey:70615956});const N=A("testnet"),R={PORT:18333,NETWORK_MAGIC:k.integerAsBuffer(185665799),DNS_SEEDS:["testnet-seed.bitcoin.petertodd.org","testnet-seed.bluematt.me","testnet-seed.alexykot.me","testnet-seed.bitcoin.schildbach.de"]};Object.keys(R).forEach(t=>{e.isObject(R[t])||(E[R[t]]=N)});const C={PORT:18444,NETWORK_MAGIC:k.integerAsBuffer(4206867930),DNS_SEEDS:[]};Object.keys(C).forEach(t=>{e.isObject(C[t])||(E[C[t]]=N)}),Object.defineProperty(N,"port",{enumerable:!0,configurable:!1,get(){return this.regtestEnabled?C.PORT:R.PORT}}),Object.defineProperty(N,"networkMagic",{enumerable:!0,configurable:!1,get(){return this.regtestEnabled?C.NETWORK_MAGIC:R.NETWORK_MAGIC}}),Object.defineProperty(N,"dnsSeeds",{enumerable:!0,configurable:!1,get(){return this.regtestEnabled?C.DNS_SEEDS:R.DNS_SEEDS}});var z={add:T,remove:function(e){for(let t=0;t<P.length;t+=1)P[t]===e&&P.splice(t,1);Object.keys(E).forEach(t=>{E[t]===e&&delete E[t]})},defaultNetwork:x,livenet:x,mainnet:x,testnet:N,get:A,enableRegtest:function(){N.regtestEnabled=!0},disableRegtest:function(){N.regtestEnabled=!1}};const U=function(e){const t=Buffer.alloc(e.length);for(let r=0;r<e.length;r+=1)t[r]=e[e.length-1-r];return t};r.Zero=new r(0),r.One=new r(1),r.Minus1=new r(-1),r.fromNumber=function(t){return b.checkArgument(e.isNumber(t)),new r(t)},r.fromString=function(t,i){return b.checkArgument(e.isString(t)),new r(t,i)},r.fromBuffer=function(e,t){void 0!==t&&"little"===t.endian&&(e=U(e));const i=e.toString("hex");return new r(i,16)},r.fromSM=function(e,t){let i;if(0===e.length)return r.fromBuffer(Buffer.from([0]));let o="big";return t&&(o=t.endian),"little"===o&&(e=U(e)),128&e[0]?(e[0]&=127,(i=r.fromBuffer(e)).neg().copy(i)):i=r.fromBuffer(e),i},r.prototype.toNumber=function(){return parseInt(this.toString(10),10)},r.prototype.toBuffer=function(e){let t,i;if(e&&e.size){const o=(i=this.toString(16,2)).length/2;t=Buffer.from(i,"hex"),o>e.size?t=r.trim(t,o):o<e.size&&(t=r.pad(t,o,e.size))}else i=this.toString(16,2),t=Buffer.from(i,"hex");return void 0!==e&&"little"===e.endian&&(t=U(t)),t},r.prototype.toSMBigEndian=function(){let e;return-1===this.cmp(r.Zero)?128&(e=this.neg().toBuffer())[0]?e=Buffer.concat([Buffer.from([128]),e]):e[0]|=128:128&(e=this.toBuffer())[0]&&(e=Buffer.concat([Buffer.from([0]),e])),1===e.length&0===e[0]&&(e=Buffer.from([])),e},r.prototype.toSM=function(e){const t=e?e.endian:"big";let r=this.toSMBigEndian();return"little"===t&&(r=U(r)),r},r.fromScriptNumBuffer=function(e,t,i){if(b.checkArgument(e.length<=(i||4),new Error("script number overflow")),t&&0<e.length&&0==(127&e[e.length-1])&&(1>=e.length||0==(128&e[e.length-2])))throw new Error("non-minimally encoded script number");return r.fromSM(e,{endian:"little"})},r.prototype.toScriptNumBuffer=function(){return this.toSM({endian:"little"})},r.trim=function(e,t){return e.slice(t-e.length,e.length)},r.pad=function(e,t,r){const i=Buffer.alloc(r);for(let t=0;t<e.length;t+=1)i[i.length-1-t]=e[e.length-1-t];for(let e=0;e<r-t;e+=1)i[e]=0;return i};const H=t.curves.secp256k1,K=H.curve.point.bind(H.curve),F=H.curve.pointFromX.bind(H.curve),L=function(e,t,r){let i;try{i=K(e,t,r)}catch(e){throw new Error("Invalid point on curve")}return i.validate(),i};L.prototype=Object.getPrototypeOf(H.curve.point()),L.fromX=function(e,t){let r;try{r=F(t,e)}catch(e){throw new Error("Invalid x value for curve.")}return r.validate(),r},L.getG=function(){return H.curve.g},L.getN=function(){return new r(H.curve.n.toArray())},L.prototype._getX=L.prototype.getX,L.prototype.getX=function(){return new r(this._getX().toArray())},L.prototype._getY=L.prototype.getY,L.prototype.getY=function(){return new r(this._getY().toArray())},L.prototype.validate=function(){if(this.isInfinity())throw new Error("Point cannot be equal to Infinity");let e;try{e=F(this.getX(),this.getY().isOdd())}catch(e){throw new Error("Point does not lie on the curve.")}if(0!==e.y.cmp(this.y))throw new Error("Invalid y value for curve.");if(!this.mul(L.getN()).isInfinity())throw new Error("Point times N must be infinity");return this},L.pointToCompressed=function(e){const t=e.getX().toBuffer({size:32}),r=e.getY().toBuffer({size:32});let i;return i=r[r.length-1]%2?Buffer.from([3]):Buffer.from([2]),k.concat([i,t])};const D={};function j(e,t){if(!(this instanceof j))return new j(e,t);if(e instanceof j)return e;const i=this._classifyArguments(e,t);if(!i.bn||0===i.bn.cmp(new r(0)))throw new TypeError("Number can not be equal to zero, undefined, null or false");if(!i.bn.lt(L.getN()))throw new TypeError("Number must be less than N");if(void 0===i.network)throw new TypeError('Must specify the network ("livenet" or "testnet")');return S.defineImmutable(this,{bn:i.bn,compressed:i.compressed,network:i.network}),Object.defineProperty(this,"publicKey",{configurable:!1,enumerable:!0,get:this.toPublicKey.bind(this)}),this}function M(e,t){if(!(this instanceof M))return new M(e,t);if(b.checkArgument(e,"First argument is required, please include public key data."),e instanceof M)return e;t=t||{};const r=this._classifyArgs(e,t);return r.point.validate(),S.defineImmutable(this,{point:r.point,compressed:r.compressed,network:r.network||z.defaultNetwork}),this}D.getRandomBufferNode=function(e){return s(e)},D.getRandomBufferBrowser=function(e){let t;if(window.crypto&&window.crypto.getRandomValues)t=window.crypto;else{if(!window.msCrypto||!window.msCrypto.getRandomValues)throw new Error("window crypto.getRandomValues not available");t=window.msCrypto}const r=new Uint8Array(e);return t.getRandomValues(r),Buffer.from(r)},D.getRandomBuffer=function(e){return"undefined"==typeof window||void 0===window.crypto&&void 0===window.msCrypto?D.getRandomBufferNode(e):D.getRandomBufferBrowser(e)},D.getPseudoRandomBuffer=function(e){const t=Buffer.alloc(e);let r=0;for(let i=0;i<=e;i+=1){0===i-4*Math.floor(i/4)?(r=4294967296*Math.random(),t[i]=255&r):t[i]=255&(r>>>=8)}return t},j.prototype._classifyArguments=function(t,i){let o={compressed:!0,network:i?z.get(i):z.defaultNetwork};if(e.isUndefined(t)||e.isNull(t))o.bn=j._getRandomBN();else if(t instanceof r)o.bn=t;else if(t instanceof Buffer||t instanceof Uint8Array)o=j._transformBuffer(t,i);else if(t.bn&&t.network)o=j._transformObject(t);else if(!i&&z.get(t))o.bn=j._getRandomBN(),o.network=z.get(t);else{if("string"!=typeof t)throw new TypeError("First argument is an unrecognized data type.");S.isHexa(t)?o.bn=new r(Buffer.from(t,"hex")):o=j._transformWIF(t,i)}return o},j._getRandomBN=function(){let e,t;do{const i=D.getRandomBuffer(32);e=(t=r.fromBuffer(i)).lt(L.getN())}while(!e);return t},j._transformBuffer=function(e,t){const i={};if(32===e.length)return j._transformBNBuffer(e,t);if(i.network=z.get(e[0],"privatekey"),!i.network)throw new Error("Invalid network");if(t&&i.network!==z.get(t))throw new TypeError("Private key network mismatch");if(34===e.length&&1===e[33])i.compressed=!0;else{if(33!==e.length)throw new Error("Length of buffer must be 33 (uncompressed) or 34 (compressed)");i.compressed=!1}return i.bn=r.fromBuffer(e.slice(1,33)),i},j._transformBNBuffer=function(e,t){return{network:z.get(t)||z.defaultNetwork,bn:r.fromBuffer(e),compressed:!1}},j._transformWIF=function(e,t){return j._transformBuffer(O.decode(e),t)},j.fromBuffer=function(e,t){return new j(e,t)},j._transformObject=function(e){return{bn:new r(e.bn,"hex"),network:z.get(e.network),compressed:e.compressed}},j.fromWIF=function(t){return b.checkArgument(e.isString(t),"First argument is expected to be a string."),new j(t)},j.fromString=j.fromWIF,j.fromObject=function(t){return b.checkArgument(e.isObject(t),"First argument is expected to be an object."),new j(t)},j.fromRandom=function(e){const t=j._getRandomBN();return new j(t,e)},j.getValidationError=function(e,t){let r;try{new j(e,t)}catch(e){r=e}return r},j.isValid=function(e,t){return!!e&&!j.getValidationError(e,t)},j.prototype.toString=function(){return this.toBuffer().toString("hex")},j.prototype.toWIF=function(){let e;return e=this.compressed?Buffer.concat([Buffer.from([this.network.privatekey]),this.bn.toBuffer({size:32}),Buffer.from([1])]):Buffer.concat([Buffer.from([this.network.privatekey]),this.bn.toBuffer({size:32})]),O.encode(e)},j.prototype.toBigNumber=function(){return this.bn},j.prototype.toBuffer=function(){return this.bn.toBuffer()},j.prototype.toBufferNoPadding=function(){return this.bn.toBuffer()},j.prototype.toPublicKey=function(){return this._pubkey||(this._pubkey=M.fromPrivateKey(this)),this._pubkey},j.prototype.toAddress=function(e){const t=this.toPublicKey();return J.fromPublicKey(t,e||this.network)},j.prototype.toJSON=function(){return{bn:this.bn.toString("hex"),compressed:this.compressed,network:this.network.toString()}},j.prototype.toObject=j.prototype.toJSON,j.prototype.inspect=function(){const e=this.compressed?"":", uncompressed";return"<PrivateKey: ".concat(this.toString(),", network: ").concat(this.network).concat(e,">")},M.prototype._classifyArgs=function(t,r){let i={compressed:e.isUndefined(r.compressed)||r.compressed};if(t instanceof L)i.point=t;else if(t.x&&t.y)i=M._transformObject(t);else if("string"==typeof t)i=M._transformDER(Buffer.from(t,"hex"));else if(M._isBuffer(t))i=M._transformDER(t);else{if(!M._isPrivateKey(t))throw new TypeError("First argument is an unrecognized data format.");i=M._transformPrivateKey(t)}return i.network||(i.network=e.isUndefined(r.network)?void 0:z.get(r.network)),i},M._isPrivateKey=function(e){return e instanceof j},M._isBuffer=function(e){return e instanceof Buffer||e instanceof Uint8Array},M._transformPrivateKey=function(e){return b.checkArgument(M._isPrivateKey(e),"Must be an instance of PrivateKey"),{point:L.getG().mul(e.bn),compressed:e.compressed,network:e.network}},M._transformDER=function(t,i){b.checkArgument(M._isBuffer(t),"Must be a hex buffer of DER encoded public key");let o,n,a,s,u={};if(i=!!e.isUndefined(i)||i,4!==t[0]&&(i||6!==t[0]&&7!==t[0]))if(3===t[0])a=t.slice(1),o=new r(a),(u=M._transformX(!0,o)).compressed=!0;else{if(2!==t[0])throw new TypeError("Invalid DER format public key");a=t.slice(1),o=new r(a),(u=M._transformX(!1,o)).compressed=!0}else{if(a=t.slice(1,33),s=t.slice(33,65),32!==a.length||32!==s.length||65!==t.length)throw new TypeError("Length of x and y must be 32 bytes");o=new r(a),n=new r(s),u.point=new L(o,n),u.compressed=!1}return u},M._transformX=function(e,t){return b.checkArgument("boolean"==typeof e,"Must specify whether y is odd or not (true or false)"),{point:L.fromX(e,t)}},M._transformObject=function(e){const t=new r(e.x,"hex"),i=new r(e.y,"hex");return new M(new L(t,i),{compressed:e.compressed})},M.fromPrivateKey=function(e){b.checkArgument(M._isPrivateKey(e),"Must be an instance of PrivateKey");const t=M._transformPrivateKey(e);return new M(t.point,{compressed:t.compressed,network:t.network})},M.fromBuffer=function(e,t){b.checkArgument(M._isBuffer(e),"Must be a hex buffer of DER encoded public key");const r=M._transformDER(e,t);return new M(r.point,{compressed:r.compressed})},M.fromDER=M.fromBuffer,M.fromPoint=function(e,t){return b.checkArgument(e instanceof L,"First argument must be an instance of Point."),new M(e,{compressed:t})},M.fromString=function(e,t){const r=Buffer.from(e,t||"hex"),i=M._transformDER(r);return new M(i.point,{compressed:i.compressed})},M.fromX=function(e,t){const r=M._transformX(e,t);return new M(r.point,{compressed:r.compressed})},M.getValidationError=function(e){let t;try{new M(e)}catch(e){t=e}return t},M.isValid=function(e){return!M.getValidationError(e)},M.prototype.toJSON=function(){return{x:this.point.getX().toString("hex",2),y:this.point.getY().toString("hex",2),compressed:this.compressed}},M.prototype.toObject=M.prototype.toJSON,M.prototype.toDER=function(){const e=this.point.getX(),t=this.point.getY(),r=e.toBuffer({size:32}),i=t.toBuffer({size:32});let o;if(!this.compressed)return o=Buffer.from([4]),Buffer.concat([o,r,i]);return o=i[i.length-1]%2?Buffer.from([3]):Buffer.from([2]),Buffer.concat([o,r])},M.prototype.toBuffer=M.prototype.toDER,M.prototype._getID=function(){return w.sha256ripemd160(this.toBuffer())},M.prototype.toAddress=function(e){return J.fromPublicKey(this,e||this.network)},M.prototype.toString=function(){return this.toDER().toString("hex")},M.prototype.inspect=function(){return"<PublicKey: ".concat(this.toString()).concat(this.compressed?"":", uncompressed",">")};const V=function t(r){if(!(this instanceof t))return new t(r);if(!e.isUndefined(r))if(Buffer.isBuffer(r))this.set({buf:r});else if(e.isString(r)){const e=Buffer.from(r,"hex");if(2*e.length!==r.length)throw new TypeError("Invalid hex string");this.set({buf:e})}else{if(!e.isObject(r))throw new TypeError("Unrecognized argument for BufferReader");this.set(r)}};V.prototype.set=function(e){return this.buf=e.buf||this.buf||void 0,this.pos=e.pos||this.pos||0,this},V.prototype.eof=function(){return this.pos>=this.buf.length},V.prototype.finished=V.prototype.eof,V.prototype.read=function(t){b.checkArgument(!e.isUndefined(t),"Must specify a length");const r=this.buf.slice(this.pos,this.pos+t);return this.pos+=t,r},V.prototype.readAll=function(){const e=this.buf.slice(this.pos,this.buf.length);return this.pos=this.buf.length,e},V.prototype.readUInt8=function(){const e=this.buf.readUInt8(this.pos);return++this.pos,e},V.prototype.readUInt16BE=function(){const e=this.buf.readUInt16BE(this.pos);return this.pos+=2,e},V.prototype.readUInt16LE=function(){const e=this.buf.readUInt16LE(this.pos);return this.pos+=2,e},V.prototype.readUInt32BE=function(){const e=this.buf.readUInt32BE(this.pos);return this.pos+=4,e},V.prototype.readUInt32LE=function(){const e=this.buf.readUInt32LE(this.pos);return this.pos+=4,e},V.prototype.readInt32LE=function(){const e=this.buf.readInt32LE(this.pos);return this.pos+=4,e},V.prototype.readUInt64BEBN=function(){const e=this.buf.slice(this.pos,this.pos+8),t=r.fromBuffer(e);return this.pos+=8,t},V.prototype.readUInt64LEBN=function(){const e=this.buf.readUInt32LE(this.pos),t=4294967296*this.buf.readUInt32LE(this.pos+4)+e;let i;if(9007199254740991>=t)i=new r(t);else{const e=Array.prototype.slice.call(this.buf,this.pos,this.pos+8);i=new r(e,10,"le")}return this.pos+=8,i},V.prototype.readVarintNum=function(){const e=this.readUInt8();switch(e){case 253:return this.readUInt16LE();case 254:return this.readUInt32LE();case 255:{const e=this.readUInt64LEBN().toNumber();if(e<=9007199254740992)return e;throw new Error("number too large to retain precision - use readVarintBN")}default:return e}},V.prototype.readVarLengthBuffer=function(){const e=this.readVarintNum(),t=this.read(e);return b.checkState(t.length===e,"Invalid length while reading varlength buffer. Expected: ".concat(e,", Received: ").concat(t.length)),t},V.prototype.readVarintBuf=function(){const e=this.buf.readUInt8(this.pos);return 253===e?this.read(3):254===e?this.read(5):255===e?this.read(9):this.read(1)},V.prototype.readVarintBN=function(){const e=this.readUInt8();return 253===e?new r(this.readUInt16LE()):254===e?new r(this.readUInt32LE()):255===e?this.readUInt64LEBN():new r(e)},V.prototype.reverse=function(){const e=Buffer.alloc(this.buf.length);for(let t=0;t<e.length;t+=1)e[t]=this.buf[this.buf.length-1-t];return this.buf=e,this},V.prototype.readReverse=function(t){e.isUndefined(t)&&(t=this.buf.length);const r=this.buf.slice(this.pos,this.pos+t);return this.pos+=t,k.reverse(r)};const q=function e(t){return this instanceof e?void(t?this.set(t):this.bufs=[]):new e(t)};function G(t){if(!(this instanceof G))return new G(t);let r;if(e.isNumber(t))r=t;else{if(!e.isString(t))throw new TypeError('Unrecognized num type: "'.concat(typeof t,'" for Opcode'));r=G.map[t]}return S.defineImmutable(this,{num:r}),this}q.prototype.set=function(e){return this.bufs=e.bufs||this.bufs||[],this},q.prototype.toBuffer=function(){return this.concat()},q.prototype.concat=function(){return Buffer.concat(this.bufs)},q.prototype.write=function(e){return a(k.isBuffer(e)),this.bufs.push(e),this},q.prototype.writeReverse=function(e){return a(k.isBuffer(e)),this.bufs.push(k.reverse(e)),this},q.prototype.writeUInt8=function(e){const t=Buffer.alloc(1);return t.writeUInt8(e,0),this.write(t),this},q.prototype.writeUInt16BE=function(e){const t=Buffer.alloc(2);return t.writeUInt16BE(e,0),this.write(t),this},q.prototype.writeUInt16LE=function(e){const t=Buffer.alloc(2);return t.writeUInt16LE(e,0),this.write(t),this},q.prototype.writeUInt32BE=function(e){const t=Buffer.alloc(4);return t.writeUInt32BE(e,0),this.write(t),this},q.prototype.writeInt32LE=function(e){const t=Buffer.alloc(4);return t.writeInt32LE(e,0),this.write(t),this},q.prototype.writeUInt32LE=function(e){const t=Buffer.alloc(4);return t.writeUInt32LE(e,0),this.write(t),this},q.prototype.writeUInt64BEBN=function(e){const t=e.toBuffer({size:8});return this.write(t),this},q.prototype.writeUInt64LEBN=function(e){const t=e.toBuffer({size:8});return this.writeReverse(t),this},q.prototype.writeVarintNum=function(e){const t=q.varintBufNum(e);return this.write(t),this},q.prototype.writeVarintBN=function(e){const t=q.varintBufBN(e);return this.write(t),this},q.varintBufNum=function(e){let t;return 253>e?(t=Buffer.alloc(1)).writeUInt8(e,0):65536>e?((t=Buffer.alloc(3)).writeUInt8(253,0),t.writeUInt16LE(e,1)):4294967296>e?((t=Buffer.alloc(5)).writeUInt8(254,0),t.writeUInt32LE(e,1)):((t=Buffer.alloc(9)).writeUInt8(255,0),t.writeInt32LE(-1&e,1),t.writeUInt32LE(Math.floor(e/4294967296),5)),t},q.varintBufBN=function(e){let t;const r=e.toNumber();if(253>r)(t=Buffer.alloc(1)).writeUInt8(r,0);else if(65536>r)(t=Buffer.alloc(3)).writeUInt8(253,0),t.writeUInt16LE(r,1);else if(4294967296>r)(t=Buffer.alloc(5)).writeUInt8(254,0),t.writeUInt32LE(r,1);else{const r=new q;r.writeUInt8(255),r.writeUInt64LEBN(e),t=r.concat()}return t},G.fromBuffer=function(e){return b.checkArgument(k.isBuffer(e)),new G(+"0x".concat(e.toString("hex")))},G.fromNumber=function(t){return b.checkArgument(e.isNumber(t)),new G(t)},G.fromString=function(t){b.checkArgument(e.isString(t));const r=G.map[t];if(void 0===r)throw new TypeError("Invalid opcodestr");return new G(r)},G.prototype.toHex=function(){return this.num.toString(16)},G.prototype.toBuffer=function(){return Buffer.from(this.toHex(),"hex")},G.prototype.toNumber=function(){return this.num},G.prototype.toString=function(){const e=G.reverseMap[this.num];if(void 0===e)throw new Error("Opcode does not have a string representation");return e},G.smallInt=function(t){return b.checkArgument(e.isNumber(t),"Invalid Argument: n should be number"),b.checkArgument(0<=t&&16>=t,"Invalid Argument: n must be between 0 and 16"),0===t?G("OP_0"):new G(G.map.OP_1+t-1)},G.map={OP_FALSE:0,OP_0:0,OP_PUSHDATA1:76,OP_PUSHDATA2:77,OP_PUSHDATA4:78,OP_1NEGATE:79,OP_RESERVED:80,OP_TRUE:81,OP_1:81,OP_2:82,OP_3:83,OP_4:84,OP_5:85,OP_6:86,OP_7:87,OP_8:88,OP_9:89,OP_10:90,OP_11:91,OP_12:92,OP_13:93,OP_14:94,OP_15:95,OP_16:96,OP_NOP:97,OP_VER:98,OP_IF:99,OP_NOTIF:100,OP_VERIF:101,OP_VERNOTIF:102,OP_ELSE:103,OP_ENDIF:104,OP_VERIFY:105,OP_RETURN:106,OP_TOALTSTACK:107,OP_FROMALTSTACK:108,OP_2DROP:109,OP_2DUP:110,OP_3DUP:111,OP_2OVER:112,OP_2ROT:113,OP_2SWAP:114,OP_IFDUP:115,OP_DEPTH:116,OP_DROP:117,OP_DUP:118,OP_NIP:119,OP_OVER:120,OP_PICK:121,OP_ROLL:122,OP_ROT:123,OP_SWAP:124,OP_TUCK:125,OP_CAT:126,OP_SUBSTR:127,OP_LEFT:128,OP_RIGHT:129,OP_SIZE:130,OP_INVERT:131,OP_AND:132,OP_OR:133,OP_XOR:134,OP_EQUAL:135,OP_EQUALVERIFY:136,OP_RESERVED1:137,OP_RESERVED2:138,OP_1ADD:139,OP_1SUB:140,OP_2MUL:141,OP_2DIV:142,OP_NEGATE:143,OP_ABS:144,OP_NOT:145,OP_0NOTEQUAL:146,OP_ADD:147,OP_SUB:148,OP_MUL:149,OP_DIV:150,OP_MOD:151,OP_LSHIFT:152,OP_RSHIFT:153,OP_BOOLAND:154,OP_BOOLOR:155,OP_NUMEQUAL:156,OP_NUMEQUALVERIFY:157,OP_NUMNOTEQUAL:158,OP_LESSTHAN:159,OP_GREATERTHAN:160,OP_LESSTHANOREQUAL:161,OP_GREATERTHANOREQUAL:162,OP_MIN:163,OP_MAX:164,OP_WITHIN:165,OP_RIPEMD160:166,OP_SHA1:167,OP_SHA256:168,OP_HASH160:169,OP_HASH256:170,OP_CODESEPARATOR:171,OP_CHECKSIG:172,OP_CHECKSIGVERIFY:173,OP_CHECKMULTISIG:174,OP_CHECKMULTISIGVERIFY:175,OP_CHECKLOCKTIMEVERIFY:177,OP_NOP1:176,OP_NOP2:177,OP_NOP3:178,OP_NOP4:179,OP_NOP5:180,OP_NOP6:181,OP_NOP7:182,OP_NOP8:183,OP_NOP9:184,OP_NOP10:185,OP_PUBKEYHASH:253,OP_PUBKEY:254,OP_INVALIDOPCODE:255},G.reverseMap=[],Object.keys(G.map).forEach(e=>{G.reverseMap[G.map[e]]=e}),e.extend(G,G.map),G.isSmallIntOp=function(e){return e instanceof G&&(e=e.toNumber()),e===G.map.OP_0||e>=G.map.OP_1&&e<=G.map.OP_16},G.prototype.inspect=function(){return"<Opcode: ".concat(this.toString(),", hex: ").concat(this.toHex(),", decimal: ").concat(this.num,">")};const Y=function e(t,i){if(!(this instanceof e))return new e(t,i);t instanceof r?this.set({r:t,s:i}):t&&this.set(t)};Y.prototype.set=function(e){return this.r=e.r||this.r||void 0,this.s=e.s||this.s||void 0,this.i=void 0===e.i?this.i:e.i,this.compressed=void 0===e.compressed?this.compressed:e.compressed,this.nhashtype=e.nhashtype||this.nhashtype||void 0,this},Y.fromCompact=function(e){b.checkArgument(k.isBuffer(e),"Argument is expected to be a Buffer");const t=new Y;let i=!0,o=e.slice(0,1)[0]-27-4;0>o&&(i=!1,o+=4);const n=e.slice(1,33),a=e.slice(33,65);return b.checkArgument(0===o||1===o||2===o||3===o,new Error("i must be 0, 1, 2, or 3")),b.checkArgument(32===n.length,new Error("r must be 32 bytes")),b.checkArgument(32===a.length,new Error("s must be 32 bytes")),t.compressed=i,t.i=o,t.r=r.fromBuffer(n),t.s=r.fromBuffer(a),t},Y.fromDER=function(e,t){const r=Y.parseDER(e,t),i=new Y;return i.r=r.r,i.s=r.s,i},Y.fromBuffer=Y.fromDER,Y.fromTxFormat=function(e){const t=e.readUInt8(e.length-1),r=e.slice(0,e.length-1),i=Y.fromDER(r,!1);return i.nhashtype=t,i},Y.fromString=function(e){const t=Buffer.from(e,"hex");return Y.fromDER(t)},Y.parseDER=function(t,i){b.checkArgument(k.isBuffer(t),"DER formatted signature should be a buffer"),e.isUndefined(i)&&(i=!0);const o=t[0];b.checkArgument(48===o,"Header byte should be 0x30");let n=t[1];const a=t.slice(2).length;b.checkArgument(!i||n===a,"Length byte should length of what follows"),n=n<a?n:a;const s=t[2];b.checkArgument(2===s,"Integer byte for r should be 0x02");const u=t[3],c=t.slice(4,4+u),l=r.fromBuffer(c),h=0===t[4];b.checkArgument(u===c.length,"Length of r incorrect");const f=t[4+u+0];b.checkArgument(2===f,"Integer byte for s should be 0x02");const p=t[4+u+1],d=t.slice(4+u+2,4+u+2+p),m=r.fromBuffer(d),g=0===t[4+u+2+2];return b.checkArgument(p===d.length,"Length of s incorrect"),b.checkArgument(n===4+u+2+p-2,"Length of signature incorrect"),{header:o,length:n,rheader:s,rlength:u,rneg:h,rbuf:c,r:l,sheader:f,slength:p,sneg:g,sbuf:d,s:m}},Y.prototype.toCompact=function(e,t){if(e="number"==typeof e?e:this.i,t="boolean"==typeof t?t:this.compressed,0!==e&&1!==e&&2!==e&&3!==e)throw new Error("i must be equal to 0, 1, 2, or 3");let r=e+27+4;!1===t&&(r-=4);const i=Buffer.from([r]),o=this.r.toBuffer({size:32}),n=this.s.toBuffer({size:32});return Buffer.concat([i,o,n])},Y.prototype.toBuffer=function(){const e=this.r.toBuffer(),t=this.s.toBuffer(),r=!!(128&e[0]),i=!!(128&t[0]),o=r?Buffer.concat([Buffer.from([0]),e]):e,n=i?Buffer.concat([Buffer.from([0]),t]):t,a=o.length,s=n.length;return Buffer.concat([Buffer.from([48,2+a+2+s,2,a]),o,Buffer.from([2,s]),n])},Y.prototype.toDER=Y.prototype.toBuffer,Y.prototype.toString=function(){return this.toDER().toString("hex")},Y.isTxDER=function(e){if(9>e.length)return!1;if(73<e.length)return!1;if(48!==e[0])return!1;if(e[1]!==e.length-3)return!1;const t=e[3];if(5+t>=e.length)return!1;const r=e[5+t];if(t+r+7!==e.length)return!1;const i=e.slice(4);if(2!==e[2])return!1;if(0===t)return!1;if(128&i[0])return!1;if(1<t&&0===i[0]&&!(128&i[1]))return!1;const o=e.slice(6+t);return!(2!==e[6+t-2])&&0!==r&&!(128&o[0])&&(!(1<r)||0!==o[0]||128&o[1])},Y.prototype.hasLowS=function(){return!(this.s.lt(new r(1))||this.s.gt(new r("7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0","hex")))},Y.prototype.hasDefinedHashtype=function(){if(!S.isNaturalNumber(this.nhashtype))return!1;const e=this.nhashtype&~Y.SIGHASH_ANYONECANPAY;return!(e<Y.SIGHASH_ALL||e>Y.SIGHASH_SINGLE)},Y.prototype.toTxFormat=function(){const e=this.toDER(),t=Buffer.alloc(1);return t.writeUInt8(this.nhashtype,0),Buffer.concat([e,t])},Y.SIGHASH_ALL=1,Y.SIGHASH_NONE=2,Y.SIGHASH_SINGLE=3,Y.SIGHASH_FORKID=64,Y.SIGHASH_ANYONECANPAY=128;const W=function e(t){return this instanceof e?(this.chunks=[],k.isBuffer(t)?e.fromBuffer(t):t instanceof J?e.fromAddress(t):t instanceof e?e.fromBuffer(t.toBuffer()):"string"==typeof t?e.fromString(t):void(void 0!==t&&this.set(t))):new e(t)};W.prototype.set=function(e){return this.chunks=e.chunks||this.chunks,this},W.fromBuffer=function(e){const t=new W;t.chunks=[];for(const r=new V(e);!r.finished();)try{const i=r.readUInt8();let o,n;0<i&&i<G.OP_PUSHDATA1?(o=i,t.chunks.push({buf:r.read(o),len:o,opcodenum:i})):i===G.OP_PUSHDATA1?(o=r.readUInt8(),n=r.read(o),t.chunks.push({buf:n,len:o,opcodenum:i})):i===G.OP_PUSHDATA2?(o=r.readUInt16LE(),n=r.read(o),t.chunks.push({buf:n,len:o,opcodenum:i})):i===G.OP_PUSHDATA4?(o=r.readUInt32LE(),n=r.read(o),t.chunks.push({buf:n,len:o,opcodenum:i})):t.chunks.push({opcodenum:i})}catch(t){if(t instanceof RangeError)throw new g.Script.InvalidBuffer(e.toString("hex"));throw t}return t},W.prototype.toBuffer=function(){return this.chunks.reduce((e,t)=>(e.writeUInt8(t.opcodenum),t.buf&&(t.opcodenum<G.OP_PUSHDATA1?e.write(t.buf):t.opcodenum===G.OP_PUSHDATA1?(e.writeUInt8(t.len),e.write(t.buf)):t.opcodenum===G.OP_PUSHDATA2?(e.writeUInt16LE(t.len),e.write(t.buf)):t.opcodenum===G.OP_PUSHDATA4&&(e.writeUInt32LE(t.len),e.write(t.buf))),e),new q).concat()},W.fromASM=function(e){const t=new W;t.chunks=[];const r=e.split(" ");for(let e=0;e<r.length;){const i=G(r[e]).toNumber();if(void 0===i){const i=Buffer.from(r[e],"hex");t.chunks.push({buf:i,len:i.length,opcodenum:i.length}),e+=1}else i===G.OP_PUSHDATA1||i===G.OP_PUSHDATA2||i===G.OP_PUSHDATA4?(t.chunks.push({buf:Buffer.from(r[e+2],"hex"),len:parseInt(r[e+1],16),opcodenum:i}),e+=3):(t.chunks.push({opcodenum:i}),e+=1)}return t},W.fromHex=function(e){return new this(Buffer.from(e,"hex"))},W.fromString=function(t){if(S.isHexa(t)||0===t.length)return new this(Buffer.from(t,"hex"));const r=new this;r.chunks=[];const i=t.split(" ");for(let o=0;o<i.length;){const n=i[o];let a=G(n).toNumber();if(e.isUndefined(a)){if(!(0<(a=n.startsWith("0x")?parseInt(n,16):parseInt(n,10))&&a<G.OP_PUSHDATA1))throw new Error("Invalid script: ".concat(JSON.stringify(t)));r.chunks.push({buf:Buffer.from(i[o+1].slice(2),"hex"),len:a,opcodenum:a}),o+=2}else if(a===G.OP_PUSHDATA1||a===G.OP_PUSHDATA2||a===G.OP_PUSHDATA4){if("0x"!==i[o+2].slice(0,2))throw new Error("Pushdata data must start with 0x");r.chunks.push({buf:Buffer.from(i[o+2].slice(2),"hex"),len:parseInt(i[o+1],10),opcodenum:a}),o+=3}else r.chunks.push({opcodenum:a}),o+=1}return r},W.prototype._chunkToString=function(e,t){const r=e.opcodenum,i="asm"===t;let o="";if(e.buf)(r===G.OP_PUSHDATA1||r===G.OP_PUSHDATA2||r===G.OP_PUSHDATA4)&&(o="".concat(o," ").concat(G(r).toString())),0<e.len&&(o=i?"".concat(o," ").concat(e.buf.toString("hex")):"".concat(o," ").concat(e.len," 0x").concat(e.buf.toString("hex")));else if(void 0!==G.reverseMap[r])o="".concat(o," ").concat(G(r).toString());else{let e=r.toString(16);0!=e.length%2&&(e="0".concat(e)),o=i?"".concat(o," ").concat(e):"".concat(o," 0x").concat(e)}return o},W.prototype.toASM=function(){return this.chunks.reduce((e,t)=>e+this._chunkToString(t,"asm"),"").substr(1)},W.prototype.toString=function(){return this.chunks.reduce((e,t)=>e+this._chunkToString(t),"").substr(1)},W.prototype.toHex=function(){return this.toBuffer().toString("hex")},W.prototype.inspect=function(){return"<Script: ".concat(this.toString(),">")},W.prototype.isPublicKeyHashOut=function(){return!(5!==this.chunks.length||this.chunks[0].opcodenum!==G.OP_DUP||this.chunks[1].opcodenum!==G.OP_HASH160||!this.chunks[2].buf||20!==this.chunks[2].buf.length||this.chunks[3].opcodenum!==G.OP_EQUALVERIFY||this.chunks[4].opcodenum!==G.OP_CHECKSIG)},W.prototype.isPublicKeyHashIn=function(){if(2===this.chunks.length){const e=this.chunks[0].buf,t=this.chunks[1].buf;if(e&&e.length&&48===e[0]&&t&&t.length){const e=t[0];if((4===e||6===e||7===e)&&65===t.length)return!0;if((3===e||2===e)&&33===t.length)return!0}}return!1},W.prototype.getPublicKey=function(){return b.checkState(this.isPublicKeyOut(),"Can't retrieve PublicKey from a non-PublicKey output"),this.chunks[0].buf},W.prototype.getPublicKeyHash=function(){return b.checkState(this.isPublicKeyHashOut(),"Can't retrieve PublicKeyHash from a non-PublicKeyHash output"),this.chunks[2].buf},W.prototype.isPublicKeyOut=function(){if(2===this.chunks.length&&this.chunks[0].buf&&this.chunks[0].buf.length&&this.chunks[1].opcodenum===G.OP_CHECKSIG){const e=this.chunks[0].buf,t=e[0];let r=!1;if(4!==t&&6!==t&&7!==t||65!==e.length?(3===t||2===t)&&33===e.length&&(r=!0):r=!0,r)return M.isValid(e)}return!1},W.prototype.isPublicKeyIn=function(){if(1===this.chunks.length){const e=this.chunks[0].buf;if(e&&e.length&&48===e[0])return!0}return!1},W.prototype.isScriptHashOut=function(){const e=this.toBuffer();return 23===e.length&&e[0]===G.OP_HASH160&&20===e[1]&&e[e.length-1]===G.OP_EQUAL},W.prototype.isScriptHashIn=function(){if(1>=this.chunks.length)return!1;const e=this.chunks[this.chunks.length-1].buf;if(!e)return!1;let t;try{t=W.fromBuffer(e)}catch(e){if(e instanceof g.Script.InvalidBuffer)return!1;throw e}return t.classify()!==W.types.UNKNOWN},W.prototype.isMultisigOut=function(){return 3<this.chunks.length&&G.isSmallIntOp(this.chunks[0].opcodenum)&&this.chunks.slice(1,this.chunks.length-2).every(e=>e.buf&&k.isBuffer(e.buf))&&G.isSmallIntOp(this.chunks[this.chunks.length-2].opcodenum)&&this.chunks[this.chunks.length-1].opcodenum===G.OP_CHECKMULTISIG},W.prototype.isMultisigIn=function(){return 2<=this.chunks.length&&0===this.chunks[0].opcodenum&&this.chunks.slice(1,this.chunks.length).every(e=>e.buf&&k.isBuffer(e.buf)&&Y.isTxDER(e.buf))},W.prototype.isDataOut=function(){return 1<=this.chunks.length&&this.chunks[0].opcodenum===G.OP_RETURN&&(1===this.chunks.length||2===this.chunks.length&&this.chunks[1].buf&&this.chunks[1].buf.length<=W.OP_RETURN_STANDARD_SIZE&&this.chunks[1].length===this.chunks.len)},W.prototype.getData=function(){if(this.isDataOut()||this.isScriptHashOut())return void 0===this.chunks[1]?Buffer.alloc(0):Buffer.from(this.chunks[1].buf);if(this.isPublicKeyHashOut())return Buffer.from(this.chunks[2].buf);throw new Error("Unrecognized script type to get data from")},W.prototype.isPushOnly=function(){return this.chunks.every(e=>e.opcodenum<=G.OP_16)},W.types={},W.types.UNKNOWN="Unknown",W.types.PUBKEY_OUT="Pay to public key",W.types.PUBKEY_IN="Spend from public key",W.types.PUBKEYHASH_OUT="Pay to public key hash",W.types.PUBKEYHASH_IN="Spend from public key hash",W.types.SCRIPTHASH_OUT="Pay to script hash",W.types.SCRIPTHASH_IN="Spend from script hash",W.types.MULTISIG_OUT="Pay to multisig",W.types.MULTISIG_IN="Spend from multisig",W.types.DATA_OUT="Data push",W.OP_RETURN_STANDARD_SIZE=80,W.prototype.classify=function(){if(this._isInput)return this.classifyInput();if(this._isOutput)return this.classifyOutput();const e=this.classifyOutput();return e===W.types.UNKNOWN?this.classifyInput():e},W.outputIdentifiers={},W.outputIdentifiers.PUBKEY_OUT=W.prototype.isPublicKeyOut,W.outputIdentifiers.PUBKEYHASH_OUT=W.prototype.isPublicKeyHashOut,W.outputIdentifiers.MULTISIG_OUT=W.prototype.isMultisigOut,W.outputIdentifiers.SCRIPTHASH_OUT=W.prototype.isScriptHashOut,W.outputIdentifiers.DATA_OUT=W.prototype.isDataOut,W.prototype.classifyOutput=function(){const e=Object.keys(W.outputIdentifiers);for(let t=0;t<e.length;t+=1)if(W.outputIdentifiers[e[t]].bind(this)())return W.types[e[t]];return W.types.UNKNOWN},W.inputIdentifiers={},W.inputIdentifiers.PUBKEY_IN=W.prototype.isPublicKeyIn,W.inputIdentifiers.PUBKEYHASH_IN=W.prototype.isPublicKeyHashIn,W.inputIdentifiers.MULTISIG_IN=W.prototype.isMultisigIn,W.inputIdentifiers.SCRIPTHASH_IN=W.prototype.isScriptHashIn,W.prototype.classifyInput=function(){const e=Object.keys(W.inputIdentifiers);for(let t=0;t<e.length;t+=1)if(W.inputIdentifiers[e[t]].bind(this)())return W.types[e[t]];return W.types.UNKNOWN},W.prototype.isStandard=function(){return this.classify()!==W.types.UNKNOWN},W.prototype.prepend=function(e){return this._addByType(e,!0),this},W.prototype.equals=function(e){if(b.checkState(e instanceof W,"Must provide another script"),this.chunks.length!==e.chunks.length)return!1;let t;for(t=0;t<this.chunks.length;t+=1){if(k.isBuffer(this.chunks[t].buf)&&!k.isBuffer(e.chunks[t].buf))return!1;if(k.isBuffer(this.chunks[t].buf)&&!k.equals(this.chunks[t].buf,e.chunks[t].buf))return!1;if(this.chunks[t].opcodenum!==e.chunks[t].opcodenum)return!1}return!0},W.prototype.add=function(e){return this._addByType(e,!1),this},W.prototype._addByType=function(e,t){if("string"==typeof e)this._addOpcode(e,t);else if("number"==typeof e)this._addOpcode(e,t);else if(e instanceof G)this._addOpcode(e,t);else if(k.isBuffer(e))this._addBuffer(e,t);else if(e instanceof W)this.chunks=this.chunks.concat(e.chunks);else{if("object"!=typeof e)throw new Error("Invalid script chunk");this._insertAtPosition(e,t)}},W.prototype._insertAtPosition=function(e,t){t?this.chunks.unshift(e):this.chunks.push(e)},W.prototype._addOpcode=function(e,t){let r;return r="number"==typeof e?e:e instanceof G?e.toNumber():G(e).toNumber(),this._insertAtPosition({opcodenum:r},t),this},W.prototype._addBuffer=function(e,t){let r;const i=e.length;if(0<=i&&i<G.OP_PUSHDATA1)r=i;else if(256>i)r=G.OP_PUSHDATA1;else if(65536>i)r=G.OP_PUSHDATA2;else{if(!(4294967296>i))throw new Error("You can't push that much data");r=G.OP_PUSHDATA4}return this._insertAtPosition({buf:e,len:i,opcodenum:r},t),this},W.prototype.removeCodeseparators=function(){return this.chunks=this.chunks.filter(e=>e.opcodenum!==G.OP_CODESEPARATOR),this},W.buildMultisigOut=function(t,r,i){b.checkArgument(r<=t.length,"Number of required signatures must be less than or equal to the number of public keys"),i=i||{};const o=new this;o.add(G.smallInt(r));let n=t=t.map(M);return i.noSorting||(n=e.sortBy(t,e=>e.toString("hex"))),n.forEach(e=>o.add(e.toBuffer())),o.add(G.smallInt(t.length)),o.add(G.OP_CHECKMULTISIG),o},W.buildMultisigIn=function(t,r,i,o){b.checkArgument(e.isArray(t)),b.checkArgument(e.isNumber(r)),b.checkArgument(e.isArray(i)),o=o||{};const n=new this;return n.add(G.OP_0),i.forEach(e=>{b.checkArgument(k.isBuffer(e),"Signatures must be an array of Buffers"),n.add(e)}),n},W.buildP2SHMultisigIn=function(t,r,i,o){b.checkArgument(e.isArray(t)),b.checkArgument(e.isNumber(r)),b.checkArgument(e.isArray(i)),o=o||{};const n=new this;return n.add(G.OP_0),i.forEach(e=>{b.checkArgument(k.isBuffer(e),"Signatures must be an array of Buffers"),n.add(e)}),n.add((o.cachedMultisig||W.buildMultisigOut(t,r,o)).toBuffer()),n},W.buildPublicKeyHashOut=function(t){b.checkArgument(!e.isUndefined(t)),b.checkArgument(t instanceof M||t instanceof J||e.isString(t)),t instanceof M?t=t.toAddress():e.isString(t)&&(t=new J(t));const r=new this;return r.add(G.OP_DUP).add(G.OP_HASH160).add(t.hashBuffer).add(G.OP_EQUALVERIFY).add(G.OP_CHECKSIG),r._network=t.network,r},W.buildPublicKeyOut=function(e){b.checkArgument(e instanceof M);const t=new this;return t.add(e.toBuffer()).add(G.OP_CHECKSIG),t},W.buildDataOut=function(t,r){b.checkArgument(e.isUndefined(t)||e.isString(t)||k.isBuffer(t)),e.isString(t)&&(t=Buffer.from(t,r));const i=new this;return i.add(G.OP_RETURN),e.isUndefined(t)||i.add(t),i},W.buildScriptHashOut=function(e){b.checkArgument(e instanceof W||e instanceof J&&e.isPayToScriptHash());const t=(new this).add(G.OP_HASH160).add(e instanceof J?e.hashBuffer:w.sha256ripemd160(e.toBuffer())).add(G.OP_EQUAL);return t._network=e._network||e.network,t},W.buildPublicKeyIn=function(t,r){b.checkArgument(t instanceof Y||k.isBuffer(t)),b.checkArgument(e.isUndefined(r)||e.isNumber(r)),t instanceof Y&&(t=t.toBuffer());const i=new this;return i.add(k.concat([t,k.integerAsSingleByteBuffer(r||Y.SIGHASH_ALL)])),i},W.buildPublicKeyHashIn=function(t,r,i){return b.checkArgument(r instanceof Y||k.isBuffer(r)),b.checkArgument(e.isUndefined(i)||e.isNumber(i)),r instanceof Y&&(r=r.toBuffer()),(new this).add(k.concat([r,k.integerAsSingleByteBuffer(i||Y.SIGHASH_ALL)])).add(new M(t).toBuffer())},W.empty=function(){return new this},W.prototype.toScriptHashOut=function(){return W.buildScriptHashOut(this)},W.fromAddress=function(e){if((e=new J(e)).isPayToScriptHash())return W.buildScriptHashOut(e);if(e.isPayToPublicKeyHash())return W.buildPublicKeyHashOut(e);throw new g.Script.UnrecognizedAddress(e)},W.prototype.getAddressInfo=function(){if(this._isInput)return this._getInputAddressInfo();if(this._isOutput)return this._getOutputAddressInfo();const e=this._getOutputAddressInfo();return e||this._getInputAddressInfo()},W.prototype._getOutputAddressInfo=function(){const e={};if(this.isScriptHashOut())e.hashBuffer=this.getData(),e.type=J.PayToScriptHash;else{if(!this.isPublicKeyHashOut())return!1;e.hashBuffer=this.getData(),e.type=J.PayToPublicKeyHash}return e},W.prototype._getInputAddressInfo=function(){const e={};if(this.isPublicKeyHashIn())e.hashBuffer=w.sha256ripemd160(this.chunks[1].buf),e.type=J.PayToPublicKeyHash;else{if(!this.isScriptHashIn())return!1;e.hashBuffer=w.sha256ripemd160(this.chunks[this.chunks.length-1].buf),e.type=J.PayToScriptHash}return e},W.prototype.toAddress=function(e){const t=this.getAddressInfo();return!!t&&(t.network=z.get(e)||this._network||z.defaultNetwork,new J(t))},W.prototype.findAndDelete=function(e){const t=e.toBuffer().toString("hex");for(let e=0;e<this.chunks.length;e+=1){t===W({chunks:[this.chunks[e]]}).toBuffer().toString("hex")&&this.chunks.splice(e,1)}return this},W.prototype.checkMinimalPush=function(e){const t=this.chunks[e],r=t.buf,i=t.opcodenum;return!(r&&(0===r.length?i!==G.OP_0:1===r.length&&1<=r[0]&&16>=r[0]?i!==G.OP_1+(r[0]-1):1===r.length&&129===r[0]?i!==G.OP_1NEGATE:75>=r.length?i!==r.length:255>=r.length?i!==G.OP_PUSHDATA1:65535>=r.length&&i!==G.OP_PUSHDATA2))},W.prototype._decodeOP_N=function(e){if(e===G.OP_0)return 0;if(e>=G.OP_1&&e<=G.OP_16)return e-(G.OP_1-1);throw new Error("Invalid opcode: ".concat(JSON.stringify(e)))},W.prototype.getSignatureOperationsCount=function(t){t=!!e.isUndefined(t)||t;const r=this;let i=0,o=G.OP_INVALIDOPCODE;return r.chunks.forEach(e=>{const n=e.opcodenum;n===G.OP_CHECKSIG||n===G.OP_CHECKSIGVERIFY?i+=1:(n===G.OP_CHECKMULTISIG||n===G.OP_CHECKMULTISIGVERIFY)&&(t&&o>=G.OP_1&&o<=G.OP_16?i+=r._decodeOP_N(o):i+=20),o=n}),i};const Z=28,X=40;class J{constructor(t,r,i){if(!(this instanceof J))return new J(t,r,i);if(e.isArray(t)&&e.isNumber(r))return J.createMultisig(t,r,i);if(t instanceof J)return t;if(b.checkArgument(t,"Address data required in first argument.","guide/address.html"),r&&!z.get(r))throw new TypeError('Second argument must be "livenet" or "testnet".');if(i&&i!==J.PayToPublicKeyHash&&i!==J.PayToScriptHash)throw new TypeError('Third argument must be "pubkeyhash" or "scripthash".');const o=J._classifyArguments(t,r,i);o.network=o.network||z.get(r)||z.defaultNetwork,o.type=o.type||i||J.PayToPublicKeyHash,S.defineImmutable(this,{hashBuffer:o.hashBuffer,network:o.network,type:o.type})}static _classifyArguments(t,r,i){if((t instanceof Buffer||t instanceof Uint8Array)&&20===t.length)return J._transformHash(t);if((t instanceof Buffer||t instanceof Uint8Array)&&21===t.length)return J._transformBuffer(t,r,i);if(t instanceof M)return J._transformPublicKey(t);if(t instanceof W)return J._transformScript(t,r);if("string"==typeof t)return J._transformString(t,r,i,J.DefaultFormat);if(e.isObject(t))return J._transformObject(t);throw new TypeError("First argument is an unrecognized data format.")}static _transformHash(e){const t={};if(!(e instanceof Buffer||e instanceof Uint8Array))throw new TypeError("Address supplied is not a buffer.");if(20!==e.length)throw new TypeError("Address hashbuffers must be exactly 20 bytes.");return t.hashBuffer=e,t}static _transformObject(e){return b.checkArgument(e.hash||e.hashBuffer,"Must provide a `hash` or `hashBuffer` property"),b.checkArgument(e.type,"Must provide a `type` property"),{hashBuffer:e.hash?Buffer.from(e.hash,"hex"):e.hashBuffer,network:z.get(e.network)||z.defaultNetwork,type:e.type}}static _classifyFromVersion(e){const t={},r=z.get(e[0],"pubkeyhash"),i=z.get(e[0],"scripthash");return r?(t.network=r,t.type=this.PayToPublicKeyHash):i&&(t.network=i,t.type=this.PayToScriptHash),t}static _transformBuffer(e,t,r){const i={};if(!(e instanceof Buffer||e instanceof Uint8Array))throw new TypeError("Address supplied is not a buffer.");if(21!==e.length)throw new TypeError("Address buffers must be exactly 21 bytes.");t=z.get(t);const o=J._classifyFromVersion(e);if(!o.network||t&&t!==o.network)throw new TypeError("Address has mismatched network type.");if(!o.type||r&&r!==o.type)throw new TypeError("Address has mismatched type.");return i.hashBuffer=e.slice(1),i.network=o.network,i.type=o.type,i}static _transformPublicKey(e){const t={};if(!(e instanceof M))throw new TypeError("Address must be an instance of PublicKey.");return t.hashBuffer=w.sha256ripemd160(e.toBuffer()),t.type=this.PayToPublicKeyHash,t}static _transformScript(e,t){b.checkArgument(e instanceof W,"script must be a Script instance");const r=e.getAddressInfo(t);if(!r)throw new g.Script.CantDeriveAddress(e);return r}static createMultisig(e,t,r){return r=r||e[0].network||z.defaultNetwork,J.payingTo(W.buildMultisigOut(e,t),r)}static _transformString(e,t,r,i){if("string"!=typeof e)throw new TypeError("data parameter supplied is not a string.");if(e=e.trim(),i===this.LegacyFormat)return this._transformStringLegacy(e,t,r);if(i===this.BitpayFormat)return this._transformStringBitpay(e,t,r);if(i===this.CashAddrFormat)return this._transformStringCashAddr(e,t,r);throw new TypeError("Unrecognized address format.")}static _transformStringLegacy(e,t,r){const i=O.decode(e);return this._transformBuffer(i,t,r)}static _transformStringBitpay(e,t,r){const i=O.decode(e);return i[0]===Z?i[0]=0:i[0]===X&&(i[0]=5),this._transformBuffer(i,t,r)}static _transformStringCashAddr(e,t,r){"string"==typeof t||(t=t.toString());const i=o.decode(e);b.checkArgument(!t||"livenet"===t&&"bitcoincash"===i.prefix||"testnet"===t&&"bchtest"===i.prefix,"Invalid network."),b.checkArgument(!r||r===this.PayToPublicKeyHash&&"P2PKH"===i.type||r===this.PayToScriptHash&&"P2SH"===i.type,"Invalid type."),t=z.get(t||("bitcoincash"===i.prefix?"livenet":"testnet")),r=r||("P2PKH"===i.type?this.PayToPublicKeyHash:this.PayToScriptHash);const n=Buffer.from([t[r]]),a=Buffer.from(i.hash),s=Buffer.concat([n,a]);return this._transformBuffer(s,t,r)}static fromPublicKey(e,t){const r=this._transformPublicKey(e);return t=t||z.defaultNetwork,new J(r.hashBuffer,t,r.type)}static fromPublicKeyHash(e,t){const r=this._transformHash(e);return new J(r.hashBuffer,t,this.PayToPublicKeyHash)}static fromScriptHash(e,t){b.checkArgument(e,"hash parameter is required");const r=this._transformHash(e);return new J(r.hashBuffer,t,this.PayToScriptHash)}static payingTo(e,t){return b.checkArgument(e,"script is required"),b.checkArgument(e instanceof W,"script must be instance of Script"),this.fromScriptHash(w.sha256ripemd160(e.toBuffer()),t)}static fromScript(e,t){b.checkArgument(e instanceof W,"script must be a Script instance");const r=this._transformScript(e,t);return new J(r.hashBuffer,t,r.type)}static fromBuffer(e,t,r){const i=this._transformBuffer(e,t,r);return new J(i.hashBuffer,i.network,i.type)}static fromString(e,t,r,i){i=i||this.DefaultFormat;const o=this._transformString(e,t,r,i);return new J(o.hashBuffer,o.network,o.type)}static fromObject(e){b.checkState(S.isHexa(e.hash),'Unexpected hash, "'.concat(e.hash,'", expected to be hex.'));const t=Buffer.from(e.hash,"hex");return new J(t,e.network,e.type)}static getValidationError(e,t,r){let i;try{new J(e,t,r)}catch(e){i=e}return i}static isValid(e,t,r){return!this.getValidationError(e,t,r)}isPayToPublicKeyHash(){return this.type===J.PayToPublicKeyHash}isPayToScriptHash(){return this.type===J.PayToScriptHash}toBuffer(){const e=Buffer.from([this.network[this.type]]);return Buffer.concat([e,this.hashBuffer])}toObject(){return{hash:this.hashBuffer.toString("hex"),type:this.type,network:this.network.toString()}}toJSON(){return this.toObject()}toString(e){if((e=e||J.DefaultFormat)===J.LegacyFormat)return this._toStringLegacy();if(e===J.BitpayFormat)return this._toStringBitpay();if(e===J.CashAddrFormat)return this._toStringCashAddr();throw new TypeError("Unrecognized address format.")}_toStringLegacy(){return O.encode(this.toBuffer())}_toStringBitpay(){const e=this.toBuffer();return"livenet"===this.network.toString()&&(this.type===J.PayToPublicKeyHash?e[0]=Z:this.type===J.PayToScriptHash&&(e[0]=X)),O.encode(e)}_toStringCashAddr(){const e="livenet"===this.network.toString()?"bitcoincash":"bchtest",t=this.type===J.PayToPublicKeyHash?"P2PKH":"P2SH";return o.encode(e,t,this.hashBuffer)}inspect(){return"<Address: ".concat(this.toString(),", type: ").concat(this.type,", network: ").concat(this.network,">")}}J.LegacyFormat="legacy",J.BitpayFormat="bitpay",J.CashAddrFormat="cashaddr",J.DefaultFormat=J.LegacyFormat,J.PayToPublicKeyHash="pubkeyhash",J.PayToScriptHash="scripthash";const Q=486604799;class ${constructor(e){if(!(this instanceof $))return new $(e);const t=$._from(e);return this.version=t.version,this.prevHash=t.prevHash,this.merkleRoot=t.merkleRoot,this.time=t.time,this.timestamp=t.time,this.bits=t.bits,this.nonce=t.nonce,t.hash&&b.checkState(this.hash===t.hash,"Argument object hash does not match block hash."),this}static _from(t){let r={};if(k.isBuffer(t))r=$._fromBufferReader(V(t));else{if(!e.isObject(t))throw new TypeError("Unrecognized argument for BlockHeader");r=$._fromObject(t)}return r}static _fromObject(t){b.checkArgument(t,"data is required");let r=t.prevHash,i=t.merkleRoot;return e.isString(t.prevHash)&&(r=k.reverse(Buffer.from(t.prevHash,"hex"))),e.isString(t.merkleRoot)&&(i=k.reverse(Buffer.from(t.merkleRoot,"hex"))),{hash:t.hash,version:t.version,prevHash:r,merkleRoot:i,time:t.time,timestamp:t.time,bits:t.bits,nonce:t.nonce}}static fromObject(e){const t=this._fromObject(e);return new $(t)}static fromRawBlock(e){k.isBuffer(e)||(e=Buffer.from(e,"binary"));const t=V(e);t.pos=$.Constants.START_OF_HEADER;const r=this._fromBufferReader(t);return new $(r)}static fromBuffer(e){const t=this._fromBufferReader(V(e));return new $(t)}static fromString(e){const t=Buffer.from(e,"hex");return this.fromBuffer(t)}static _fromBufferReader(e){return{version:e.readInt32LE(),prevHash:e.read(32),merkleRoot:e.read(32),time:e.readUInt32LE(),bits:e.readUInt32LE(),nonce:e.readUInt32LE()}}static fromBufferReader(e){const t=this._fromBufferReader(e);return new $(t)}toJSON(){return{hash:this.hash,version:this.version,prevHash:k.reverse(this.prevHash).toString("hex"),merkleRoot:k.reverse(this.merkleRoot).toString("hex"),time:this.time,bits:this.bits,nonce:this.nonce}}toObject(){return this.toJSON()}toBuffer(){return this.toBufferWriter().concat()}toString(){return this.toBuffer().toString("hex")}toBufferWriter(e){return e||(e=new q),e.writeInt32LE(this.version),e.write(this.prevHash),e.write(this.merkleRoot),e.writeUInt32LE(this.time),e.writeUInt32LE(this.bits),e.writeUInt32LE(this.nonce),e}getTargetDifficulty(e){e=e||this.bits;let t=new r(16777215&e),i=8*((e>>>24)-3);for(;0<i;)t=t.mul(new r(2)),i-=1;return t}getDifficulty(){const e=this.getTargetDifficulty(Q).mul(new r(1e8)),t=this.getTargetDifficulty();let i=e.div(t).toString(10);const o=i.length-8,n="".concat(i.slice(0,o)),a="".concat(i.slice(o));return i="".concat(n,".").concat(a),parseFloat(i)}_getHash(){const e=this.toBuffer();return w.sha256sha256(e)}validTimestamp(){const e=Math.round((new Date).getTime()/1e3);return!(this.time>e+$.Constants.MAX_TIME_OFFSET)}validProofOfWork(){const e=new r(this.id,"hex"),t=this.getTargetDifficulty();return!(0<e.cmp(t))}inspect(){return"<BlockHeader ".concat(this.id,">")}}const ee={configurable:!1,enumerable:!0,get(){return this._id||(this._id=V(this._getHash()).readReverse().toString("hex")),this._id},set:e.noop};Object.defineProperty($.prototype,"id",ee),Object.defineProperty($.prototype,"hash",ee),$.Constants={START_OF_HEADER:8,MAX_TIME_OFFSET:7200,LARGEST_HASH:new r("10000000000000000000000000000000000000000000000000000000000000000","hex")};const te=9007199254740991;class re{constructor(t){if(!e.isObject(t))throw new TypeError("Unrecognized argument for Output");if(this.satoshis=t.satoshis,k.isBuffer(t.script))this._scriptBuffer=t.script;else{let r;r=e.isString(t.script)&&S.isHexa(t.script)?Buffer.from(t.script,"hex"):t.script,this.setScript(r)}}get script(){return this._script?this._script:(this.setScriptFromBuffer(this._scriptBuffer),this._script)}get satoshis(){return this._satoshis}set satoshis(t){t instanceof r?(this._satoshisBN=t,this._satoshis=t.toNumber()):e.isString(t)?(this._satoshis=parseInt(t,10),this._satoshisBN=r.fromNumber(this._satoshis)):(b.checkArgument(S.isNaturalNumber(t),"Output satoshis is not a natural number"),this._satoshisBN=r.fromNumber(t),this._satoshis=t),b.checkState(S.isNaturalNumber(this._satoshis),"Output satoshis is not a natural number")}get satoshisBN(){return this._satoshisBN}set satoshisBN(e){this._satoshisBN=e,this._satoshis=e.toNumber(),b.checkState(S.isNaturalNumber(this._satoshis),"Output satoshis is not a natural number")}static fromObject(e){return new re(e)}static fromBufferReader(e){const t={satoshis:e.readUInt64LEBN()},r=e.readVarintNum();return t.script=0===r?Buffer.from([]):e.read(r),new re(t)}invalidSatoshis(){return this._satoshis>te?"transaction txout satoshis greater than max safe integer":this._satoshis===this._satoshisBN.toNumber()?!!(0>this._satoshis)&&"transaction txout negative":"transaction txout satoshis has corrupted value"}toJSON(){return{satoshis:this.satoshis,script:this._scriptBuffer.toString("hex")}}toObject(){return this.toJSON()}setScriptFromBuffer(e){this._scriptBuffer=e;try{this._script=W.fromBuffer(this._scriptBuffer),this._script._isOutput=!0}catch(e){if(!(e instanceof g.Script.InvalidBuffer))throw e;this._script=null}}setScript(t){if(t instanceof W)this._scriptBuffer=t.toBuffer(),this._script=t,this._script._isOutput=!0;else if(e.isString(t))this._script=W.fromString(t),this._scriptBuffer=this._script.toBuffer(),this._script._isOutput=!0;else{if(!k.isBuffer(t))throw new TypeError("Invalid argument type: script");this.setScriptFromBuffer(t)}return this}inspect(){let e;return e=this.script?this.script.inspect():this._scriptBuffer.toString("hex"),"<Output (".concat(this.satoshis," sats) ").concat(e,">")}toBufferWriter(e){e||(e=new q),e.writeUInt64LEBN(this._satoshisBN);const t=this._scriptBuffer;return e.writeVarintNum(t.length),e.write(t),e}}const ie=function e(t){return this instanceof e?void(t&&this.set(t)):new e(t)};ie.prototype.set=function(e){return this.hashbuf=e.hashbuf||this.hashbuf,this.endian=e.endian||this.endian,this.privkey=e.privkey||this.privkey,this.pubkey=e.pubkey||(this.privkey?this.privkey.publicKey:this.pubkey),this.sig=e.sig||this.sig,this.k=e.k||this.k,this.verified=e.verified||this.verified,this},ie.prototype.privkey2pubkey=function(){this.pubkey=this.privkey.toPublicKey()},ie.prototype.calci=function(){for(let e=0;4>e;e+=1){let t;this.sig.i=e;try{if((t=this.toPublicKey()).point.eq(this.pubkey.point))return this.sig.compressed=this.pubkey.compressed,this}catch(e){console.error(e)}}throw this.sig.i=void 0,new Error("Unable to find valid recovery factor")},ie.fromString=function(e){const t=JSON.parse(e);return new ie(t)},ie.prototype.randomK=function(){const e=L.getN();let t;do{t=r.fromBuffer(D.getRandomBuffer(32))}while(!t.lt(e)||!t.gt(r.Zero));return this.k=t,this},ie.prototype.deterministicK=function(t){e.isUndefined(t)&&(t=0);let i=Buffer.alloc(32);i.fill(1);let o=Buffer.alloc(32);o.fill(0);const n=this.privkey.bn.toBuffer({size:32}),a="little"===this.endian?k.reverse(this.hashbuf):this.hashbuf;o=w.sha256hmac(Buffer.concat([i,Buffer.from([0]),n,a]),o),i=w.sha256hmac(i,o),o=w.sha256hmac(Buffer.concat([i,Buffer.from([1]),n,a]),o),i=w.sha256hmac(i,o),i=w.sha256hmac(i,o);let s=r.fromBuffer(i);const u=L.getN();for(let e=0;e<t||!s.lt(u)||!s.gt(r.Zero);e+=1)o=w.sha256hmac(Buffer.concat([i,Buffer.from([0])]),o),i=w.sha256hmac(i,o),i=w.sha256hmac(i,o),s=r.fromBuffer(i);return this.k=s,this},ie.prototype.toPublicKey=function(){const e=this.sig.i;b.checkArgument(0===e||1===e||2===e||3===e,"i must be equal to 0, 1, 2, or 3");const t=r.fromBuffer(this.hashbuf),i=this.sig.r,o=this.sig.s,n=L.getN(),a=L.getG(),s=e>>1?i.add(n):i,u=L.fromX(1&e,s);if(!u.mul(n).isInfinity())throw new Error("nR is not a valid curve point");const c=t.neg().umod(n),l=i.invm(n),h=u.mul(o).add(a.mul(c)).mul(l);return M.fromPoint(h,this.sig.compressed)},ie.prototype.sigError=function(){if(!k.isBuffer(this.hashbuf)||32!==this.hashbuf.length)return"hashbuf must be a 32 byte buffer";const e=this.sig.r,t=this.sig.s;if(!(e.gt(r.Zero)&&e.lt(L.getN())&&t.gt(r.Zero)&&t.lt(L.getN())))return"r and s not in range";const i=r.fromBuffer(this.hashbuf,this.endian?{endian:this.endian}:void 0),o=L.getN(),n=t.invm(o),a=n.mul(i).umod(o),s=n.mul(e).umod(o),u=L.getG().mulAdd(a,this.pubkey.point,s);return u.isInfinity()?"p is infinity":0!==u.getX().umod(o).cmp(e)&&"Invalid signature"},ie.toLowS=function(e){return e.gt(r.fromBuffer(Buffer.from("7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0","hex")))&&(e=L.getN().sub(e)),e},ie.prototype._findSignature=function(e,t){const i=L.getN(),o=L.getG();let n,a,s,u=0;do{(!this.k||0<u)&&this.deterministicK(u),u+=1;const r=this.k;a=(n=o.mul(r)).x.umod(i),s=r.invm(i).mul(t.add(e.mul(a))).umod(i)}while(0>=a.cmp(r.Zero)||0>=s.cmp(r.Zero));return{s:s=ie.toLowS(s),r:a}},ie.prototype.sign=function(){const e=this.hashbuf,t=this.privkey,i=t.bn;b.checkState(e&&t&&i,"invalid parameters"),b.checkState(k.isBuffer(e),"hashbuf must be a buffer"),b.checkState(32===e.length,"hashbuf must be 32 bytes");const o=r.fromBuffer(e,this.endian?{endian:this.endian}:void 0),n=this._findSignature(i,o);return n.compressed=this.pubkey.compressed,this.sig=new Y(n),this},ie.prototype.signRandomK=function(){return this.randomK(),this.sign()},ie.prototype.toString=function(){const e={};return this.hashbuf&&(e.hashbuf=this.hashbuf.toString("hex")),this.privkey&&(e.privkey=this.privkey.toString()),this.pubkey&&(e.pubkey=this.pubkey.toString()),this.sig&&(e.sig=this.sig.toString()),this.k&&(e.k=this.k.toString()),JSON.stringify(e)},ie.prototype.verify=function(){return this.verified=!this.sigError(),this},ie.sign=function(e,t,r){return ie().set({hashbuf:e,endian:r,privkey:t}).sign().sig},ie.verify=function(e,t,r,i){return ie().set({hashbuf:e,endian:i,sig:t,pubkey:r}).verify().verified};const oe="0000000000000000000000000000000000000000000000000000000000000001",ne="ffffffffffffffff",ae=!0;class se{static sighashForForkId(t,i,o,n,a){function s(t,r){const i=new q;e.isUndefined(r)?e.each(t.outputs,e=>{e.toBufferWriter(i)}):t.outputs[r].toBufferWriter(i);const o=i.toBuffer();return w.sha256sha256(o)}const u=t.inputs[o];b.checkArgument(a instanceof r,"For ForkId=0 signatures, satoshis or complete input must be provided");let c=k.emptyBuffer(32),l=k.emptyBuffer(32),h=k.emptyBuffer(32);i&Y.SIGHASH_ANYONECANPAY||(c=function(t){const r=new q;e.each(t.inputs,e=>{r.writeReverse(e.prevTxId),r.writeUInt32LE(e.outputIndex)});const i=r.toBuffer();return w.sha256sha256(i)}(t)),i&Y.SIGHASH_ANYONECANPAY||(31&i)===Y.SIGHASH_SINGLE||(31&i)===Y.SIGHASH_NONE||(l=function(t){const r=new q;e.each(t.inputs,e=>{r.writeUInt32LE(e.sequenceNumber)});const i=r.toBuffer();return w.sha256sha256(i)}(t)),(31&i)!==Y.SIGHASH_SINGLE&&(31&i)!==Y.SIGHASH_NONE?h=s(t):(31&i)===Y.SIGHASH_SINGLE&&o<t.outputs.length&&(h=s(t,o));const f=new q;f.writeInt32LE(t.version),f.write(c),f.write(l),f.writeReverse(u.prevTxId),f.writeUInt32LE(u.outputIndex),f.writeVarintNum(n.toBuffer().length),f.write(n.toBuffer()),f.writeUInt64LEBN(a);const p=u.sequenceNumber;f.writeUInt32LE(p),f.write(h),f.writeUInt32LE(t.nLockTime),f.writeUInt32LE(i>>>0);const d=f.toBuffer();let m=w.sha256sha256(d);return m=new V(m).readReverse()}static sighash(e,t,i,o,n){const a=Ie.shallowCopy(e);if(o=new W(o),t&Y.SIGHASH_FORKID&&ae)return se.sighashForForkId(a,t,i,o,n);let s;for(o.removeCodeseparators(),s=0;s<a.inputs.length;s+=1)a.inputs[s]=new ce(a.inputs[s]).setScript(W.empty());if(a.inputs[i]=new ce(a.inputs[i]).setScript(o),(31&t)===Y.SIGHASH_NONE||(31&t)===Y.SIGHASH_SINGLE)for(s=0;s<a.inputs.length;s+=1)s!==i&&(a.inputs[s].sequenceNumber=0);if((31&t)===Y.SIGHASH_NONE)a.outputs=[];else if((31&t)===Y.SIGHASH_SINGLE){if(i>=a.outputs.length)return Buffer.from(oe,"hex");for(a.outputs.length=i+1,s=0;s<i;s+=1)a.outputs[s]=new re({satoshis:r.fromBuffer(Buffer.from(ne,"hex")),script:W.empty()})}t&Y.SIGHASH_ANYONECANPAY&&(a.inputs=[a.inputs[i]]);const u=(new q).write(a.toBuffer()).writeInt32LE(t).toBuffer();let c=w.sha256sha256(u);return c=new V(c).readReverse()}static sign(e,t,r,i,o,n){const a=se.sighash(e,r,i,o,n);return ie.sign(a,t,"little").set({nhashtype:r})}static verify(t,r,i,o,n,a){b.checkArgument(!e.isUndefined(t)),b.checkArgument(!e.isUndefined(r)&&!e.isUndefined(r.nhashtype));const s=se.sighash(t,r.nhashtype,o,n,a);return ie.verify(s,r,i,"little")}}const ue=4294967295;class ce{constructor(e){return this instanceof ce?e?this._fromObject(e):void 0:new ce(e)}get script(){return this.isNull()?null:(this._script||(this._script=new W(this._scriptBuffer),this._script._isInput=!0),this._script)}static fromObject(e){return b.checkArgument(null!==e&&"object"==typeof e),(new ce)._fromObject(e)}_fromObject(e){if(void 0===e.script&&void 0===e.scriptBuffer)throw new g.Transaction.Input.MissingScript;return this.prevTxId="string"==typeof e.prevTxId&&S.isHexa(e.prevTxId)?Buffer.from(e.prevTxId,"hex"):e.prevTxId,e.output&&(this.output=e.output instanceof re?e.output:new re(e.output)),this.outputIndex=void 0===e.outputIndex?e.txoutnum:e.outputIndex,this.sequenceNumber=void 0===e.sequenceNumber?void 0===e.seqnum?ue:e.seqnum:e.sequenceNumber,this.setScript(e.scriptBuffer||e.script),this}toJSON(){const e={prevTxId:this.prevTxId.toString("hex"),outputIndex:this.outputIndex,sequenceNumber:this.sequenceNumber,script:this._scriptBuffer.toString("hex")};return this.script&&(e.scriptString=this.script.toString()),this.output&&(e.output=this.output.toObject()),e}toObject(){return this.toJSON()}static fromBufferReader(e){const t=new ce;return t.prevTxId=e.readReverse(32),t.outputIndex=e.readUInt32LE(),t._scriptBuffer=e.readVarLengthBuffer(),t.sequenceNumber=e.readUInt32LE(),t}toBufferWriter(e){(e=e||new q).writeReverse(this.prevTxId),e.writeUInt32LE(this.outputIndex);const t=this._scriptBuffer;return e.writeVarintNum(t.length),e.write(t),e.writeUInt32LE(this.sequenceNumber),e}setScript(e){if(this._script=null,e instanceof W)this._script=e,this._script._isInput=!0,this._scriptBuffer=e.toBuffer();else if(S.isHexa(e))this._scriptBuffer=Buffer.from(e,"hex");else if("string"==typeof e)this._script=new W(e),this._script._isInput=!0,this._scriptBuffer=this._script.toBuffer();else{if(!k.isBuffer(e))throw new TypeError("Invalid argument type: script");this._scriptBuffer=Buffer.from(e)}return this}getSignatures(){throw new g.AbstractMethodInvoked("".concat("Trying to sign unsupported output type (only P2PKH and P2SH multisig inputs are supported) for input: ").concat(JSON.stringify(this)))}isFullySigned(){throw new g.AbstractMethodInvoked("Input#isFullySigned")}isFinal(){return 4294967295!==this.sequenceNumber}addSignature(){throw new g.AbstractMethodInvoked("Input#addSignature")}clearSignatures(){throw new g.AbstractMethodInvoked("Input#clearSignatures")}isValidSignature(e,t){return t.signature.nhashtype=t.sigtype,se.verify(e,t.signature,t.publicKey,t.inputIndex,this.output.script,this.output.satoshisBN)}isNull(){return"0000000000000000000000000000000000000000000000000000000000000000"===this.prevTxId.toString("hex")&&4294967295===this.outputIndex}_estimateSize(){return this.toBufferWriter().toBuffer().length}}ce.MAXINT=4294967295,ce.DEFAULT_SEQNUMBER=ue,ce.DEFAULT_LOCKTIME_SEQNUMBER=4294967294,ce.DEFAULT_RBF_SEQNUMBER=4294967293;class le extends Y{constructor(t){if(super(t),t instanceof le)return t;if(e.isObject(t))return this._fromObject(t);throw new g.InvalidArgument("TransactionSignatures must be instantiated from an object")}_fromObject(e){return le._checkObjectArgs(e),this.publicKey=new M(e.publicKey),this.prevTxId=k.isBuffer(e.prevTxId)?e.prevTxId:Buffer.from(e.prevTxId,"hex"),this.outputIndex=e.outputIndex,this.inputIndex=e.inputIndex,this.signature=e.signature instanceof Y?e.signature:k.isBuffer(e.signature)?Y.fromBuffer(e.signature):Y.fromString(e.signature),this.sigtype=e.sigtype,this}static _checkObjectArgs(t){b.checkArgument(M(t.publicKey),"publicKey"),b.checkArgument(!e.isUndefined(t.inputIndex),"inputIndex"),b.checkArgument(!e.isUndefined(t.outputIndex),"outputIndex"),b.checkState(e.isNumber(t.inputIndex),"inputIndex must be a number"),b.checkState(e.isNumber(t.outputIndex),"outputIndex must be a number"),b.checkArgument(t.signature,"signature"),b.checkArgument(t.prevTxId,"prevTxId"),b.checkState(t.signature instanceof Y||k.isBuffer(t.signature)||S.isHexa(t.signature),"signature must be a buffer or hexa value"),b.checkState(k.isBuffer(t.prevTxId)||S.isHexa(t.prevTxId),"prevTxId must be a buffer or hexa value"),b.checkArgument(t.sigtype,"sigtype"),b.checkState(e.isNumber(t.sigtype),"sigtype must be a number")}toJSON(){return{publicKey:this.publicKey.toString(),prevTxId:this.prevTxId.toString("hex"),outputIndex:this.outputIndex,inputIndex:this.inputIndex,signature:this.signature.toString(),sigtype:this.sigtype}}toObject(){return this.toJSON()}static fromObject(e){return b.checkArgument(e),new le(e)}}class he extends ce{constructor(t,r,i,o,n){super(t,r,i,o,n);const a=this;r=r||t.publicKeys,this.threshold=i||t.threshold,o=o||t.signatures,this.publicKeys=e.sortBy(r,e=>e.toString("hex")),this.redeemScript=n||W.buildMultisigOut(this.publicKeys,this.threshold),b.checkState(W.buildScriptHashOut(this.redeemScript).equals(this.output.script),"RedeemScript does not hash to the provided output"),this.publicKeyIndex={},this.publicKeys.forEach((e,t)=>{a.publicKeyIndex[e.toString()]=t}),this.signatures=o?this._deserializeSignatures(o):Array(this.publicKeys.length)}toObject(){for(var e=arguments.length,t=Array(e),r=0;r<e;r++)t[r]=arguments[r];const i=ce.prototype.toObject.apply(this,t);return i.threshold=this.threshold,i.publicKeys=this.publicKeys.map(e=>e.toString()),i.signatures=this._serializeSignatures(),i}_deserializeSignatures(e){return e.map(e=>e?new le(e):void 0)}_serializeSignatures(){return this.signatures.map(e=>e?e.toObject():void 0)}getSignatures(e,t,r,i){return b.checkState(this.output instanceof re,"Malformed output found when signing transaction"),i=i||Y.SIGHASH_ALL|Y.SIGHASH_FORKID,this.publicKeys.filter(e=>e.toString()===t.publicKey.toString()).map(o=>new le({publicKey:o,prevTxId:this.prevTxId,outputIndex:this.outputIndex,inputIndex:r,signature:se.sign(e,t,i,r,this.redeemScript,this.output.satoshisBN),sigtype:i}))}addSignature(e,t){return b.checkState(!this.isFullySigned(),"All needed signatures have already been added"),b.checkArgument(void 0!==this.publicKeyIndex[t.publicKey.toString()],"Signature has no matching public key"),b.checkState(this.isValidSignature(e,t),"Signature invalid"),this.signatures[this.publicKeyIndex[t.publicKey.toString()]]=t,this._updateScript(),this}_updateScript(){return this.setScript(W.buildP2SHMultisigIn(this.publicKeys,this.threshold,this._createSignatures(),{cachedMultisig:this.redeemScript})),this}_createSignatures(){return this.signatures.filter(e=>void 0!==e).map(e=>k.concat([e.signature.toDER(),k.integerAsSingleByteBuffer(e.sigtype)]))}clearSignatures(){this.signatures=Array(this.publicKeys.length),this._updateScript()}isFullySigned(){return this.countSignatures()===this.threshold}countMissingSignatures(){return this.threshold-this.countSignatures()}countSignatures(){return this.signatures.reduce((e,t)=>e+!!t,0)}publicKeysWithoutSignature(){return this.publicKeys.filter(e=>!this.signatures[this.publicKeyIndex[e.toString()]])}isValidSignature(e,t){return t.signature.nhashtype=t.sigtype,se.verify(e,t.signature,t.publicKey,t.inputIndex,this.redeemScript,this.output.satoshisBN)}_estimateSize(){return he.OPCODES_SIZE+this.threshold*he.SIGNATURE_SIZE+this.publicKeys.length*he.PUBKEY_SIZE}}he.OPCODES_SIZE=7,he.SIGNATURE_SIZE=74,he.PUBKEY_SIZE=34;class fe extends ce{constructor(t,r,i,o){super(t,r,i,o),r=r||t.publicKeys,this.threshold=i||t.threshold,o=o||t.signatures,this.publicKeys=e.sortBy(r,e=>e.toString("hex")),b.checkState(W.buildMultisigOut(this.publicKeys,this.threshold).equals(this.output.script),"Provided public keys don't match to the provided output script"),this.publicKeyIndex={},this.publicKeys.forEach((e,t)=>{this.publicKeyIndex[e.toString()]=t}),this.signatures=o?this._deserializeSignatures(o):Array(this.publicKeys.length)}toObject(){for(var e=arguments.length,t=Array(e),r=0;r<e;r++)t[r]=arguments[r];const i=ce.prototype.toObject.apply(this,t);return i.threshold=this.threshold,i.publicKeys=this.publicKeys.map(e=>e.toString()),i.signatures=this._serializeSignatures(),i}_deserializeSignatures(e){return e.map(e=>e?new le(e):void 0)}_serializeSignatures(){return this.signatures.map(e=>e?e.toObject():void 0)}getSignatures(e,t,r,i){return b.checkState(this.output instanceof re,"Malformed output found when signing transaction"),i=i||Y.SIGHASH_ALL|Y.SIGHASH_FORKID,this.publicKeys.filter(e=>e.toString()===t.publicKey.toString()).map(o=>new le({publicKey:o,prevTxId:this.prevTxId,outputIndex:this.outputIndex,inputIndex:r,signature:se.sign(e,t,i,r,this.output.script,this.output.satoshisBN),sigtype:i}))}addSignature(e,t){return b.checkState(!this.isFullySigned(),"All needed signatures have already been added"),b.checkArgument(void 0!==this.publicKeyIndex[t.publicKey.toString()],"Signature has no matching public key"),b.checkState(this.isValidSignature(e,t),"Signature invalid"),this.signatures[this.publicKeyIndex[t.publicKey.toString()]]=t,this._updateScript(),this}_updateScript(){return this.setScript(W.buildMultisigIn(this.publicKeys,this.threshold,this._createSignatures())),this}_createSignatures(){return this.signatures.filter(e=>void 0!==e).map(e=>k.concat([e.signature.toDER(),k.integerAsSingleByteBuffer(e.sigtype)]))}clearSignatures(){this.signatures=Array(this.publicKeys.length),this._updateScript()}isFullySigned(){return this.countSignatures()===this.threshold}countMissingSignatures(){return this.threshold-this.countSignatures()}countSignatures(){return this.signatures.reduce((e,t)=>e+!!t,0)}publicKeysWithoutSignature(){return this.publicKeys.filter(e=>!this.signatures[this.publicKeyIndex[e.toString()]])}isValidSignature(e,t){return t.signature.nhashtype=t.sigtype,se.verify(e,t.signature,t.publicKey,t.inputIndex,this.output.script,this.output.satoshisBN)}static normalizeSignatures(e,t,r,i,o){return o.map(o=>{let n=null;return i=i.filter(i=>{if(n)return!0;const a=new le({signature:Y.fromTxFormat(i),publicKey:o,prevTxId:t.prevTxId,outputIndex:t.outputIndex,inputIndex:r,sigtype:Y.SIGHASH_ALL});return a.signature.nhashtype=a.sigtype,!se.verify(e,a.signature,a.publicKey,a.inputIndex,t.output.script)||(n=a,!1)}),n||null})}_estimateSize(){return fe.OPCODES_SIZE+this.threshold*fe.SIGNATURE_SIZE}}fe.OPCODES_SIZE=1,fe.SIGNATURE_SIZE=73;class pe extends ce{getSignatures(e,t,r,i){b.checkState(this.output instanceof re,"Malformed output found when signing transaction"),i=i||Y.SIGHASH_ALL|Y.SIGHASH_FORKID;const o=t.toPublicKey();return o.toString()===this.output.script.getPublicKey().toString("hex")?[new le({publicKey:o,prevTxId:this.prevTxId,outputIndex:this.outputIndex,inputIndex:r,signature:se.sign(e,t,i,r,this.output.script,this.output.satoshisBN),sigtype:i})]:[]}addSignature(e,t){return b.checkState(this.isValidSignature(e,t),"Signature invalid"),this.setScript(W.buildPublicKeyIn(t.signature.toDER(),t.sigtype)),this}clearSignatures(){return this.setScript(W.empty()),this}isFullySigned(){return this.script.isPublicKeyIn()}_estimateSize(){return pe.SCRIPT_MAX_SIZE}}pe.SCRIPT_MAX_SIZE=73;class de extends ce{getSignatures(e,t,r,i,o){return b.checkState(this.output instanceof re,"Malformed output found when signing transaction"),o=o||w.sha256ripemd160(t.publicKey.toBuffer()),i=i||Y.SIGHASH_ALL|Y.SIGHASH_FORKID,k.equals(o,this.output.script.getPublicKeyHash())?[new le({publicKey:t.toPublicKey(),prevTxId:this.prevTxId,outputIndex:this.outputIndex,inputIndex:r,signature:se.sign(e,t,i,r,this.output.script,this.output.satoshisBN),sigtype:i})]:[]}addSignature(e,t){b.checkState(this.isValidSignature(e,t),"Signature invalid");const r=W.buildPublicKeyHashIn(t.publicKey,t.signature.toDER(),t.sigtype);return this.setScript(r),this}clearSignatures(){return this.setScript(W.empty()),this}isFullySigned(){return this.script.isPublicKeyHashIn()}_estimateSize(){return de.SCRIPT_MAX_SIZE}}de.SCRIPT_MAX_SIZE=107;const me={BTC:[1e8,8],mBTC:[1e5,5],uBTC:[100,2],bits:[100,2],satoshis:[1,0]};function ge(t,r){if(!(this instanceof ge))return new ge(t,r);if(e.isNumber(r)){if(0>=r)throw new g.Unit.InvalidRate(r);t/=r,r=ge.BTC}this._value=this._from(t,r);const i=this;Object.keys(me).forEach(function(e){Object.defineProperty(i,e,{get:()=>i.to(e),enumerable:!0})})}Object.keys(me).forEach(e=>{ge[e]=e}),ge.fromObject=function(t){return b.checkArgument(e.isObject(t),"Argument is expected to be an object"),new ge(t.amount,t.code)},ge.fromBTC=function(e){return new ge(e,ge.BTC)},ge.fromMilis=function(e){return new ge(e,ge.mBTC)},ge.fromMillis=ge.fromMilis,ge.fromBits=function(e){return new ge(e,ge.bits)},ge.fromMicros=ge.fromBits,ge.fromSatoshis=function(e){return new ge(e,ge.satoshis)},ge.fromFiat=function(e,t){return new ge(e,t)},ge.prototype._from=function(e,t){if(!me[t])throw new g.Unit.UnknownCode(t);return parseInt((e*me[t][0]).toFixed(),10)},ge.prototype.to=function(t){if(e.isNumber(t)){if(0>=t)throw new g.Unit.InvalidRate(t);return parseFloat((this.BTC*t).toFixed(2))}if(!me[t])throw new g.Unit.UnknownCode(t);const r=this._value/me[t][0];return parseFloat(r.toFixed(me[t][1]))},ge.prototype.toBTC=function(){return this.to(ge.BTC)},ge.prototype.toMilis=function(){return this.to(ge.mBTC)},ge.prototype.toMillis=ge.prototype.toMilis,ge.prototype.toBits=function(){return this.to(ge.bits)},ge.prototype.toMicros=ge.prototype.toBits,ge.prototype.toSatoshis=function(){return this.to(ge.satoshis)},ge.prototype.atRate=function(e){return this.to(e)},ge.prototype.toString=function(){return"".concat(this.satoshis," satoshis")},ge.prototype.toJSON=function(){return{amount:this.BTC,code:ge.BTC}},ge.prototype.toObject=ge.prototype.toJSON,ge.prototype.inspect=function(){return"<Unit: ".concat(this.toString(),">")};class be{constructor(t){b.checkArgument(e.isObject(t),"Must provide an object from where to extract data");const r=t.address?new J(t.address):void 0,i=t.txid?t.txid:t.txId;if(!i||!S.isHexaString(i)||64<i.length)throw new Error("Invalid TXID in object",t);const o=e.isUndefined(t.vout)?t.outputIndex:t.vout;if(!e.isNumber(o))throw new Error("Invalid outputIndex, received ".concat(o));b.checkArgument(!e.isUndefined(t.scriptPubKey)||!e.isUndefined(t.script),"Must provide the scriptPubKey for that output!");const n=new W(t.scriptPubKey||t.script);b.checkArgument(!e.isUndefined(t.amount)||!e.isUndefined(t.satoshis),"Must provide an amount for the output");const a=e.isUndefined(t.amount)?t.satoshis:ge.fromBTC(t.amount).toSatoshis();b.checkArgument(e.isNumber(a),"Amount must be a number"),S.defineImmutable(this,{address:r,txId:i,outputIndex:o,script:n,satoshis:a})}inspect(){const e="UnspentOutput: ".concat(this.txId,":").concat(this.outputIndex),t="satoshis: ".concat(this.satoshis),r="address: ".concat(this.address);return"<".concat(e,", ").concat(t,", ").concat(r,">")}toString(){return"".concat(this.txId,":").concat(this.outputIndex)}static fromObject(e){return new be(e)}toJSON(){return{address:this.address?this.address.toString():void 0,txid:this.txId,vout:this.outputIndex,scriptPubKey:this.script.toBuffer().toString("hex"),amount:ge.fromSatoshis(this.satoshis).toBTC()}}toObject(){return this.toJSON()}}const ye=Buffer.compare||u,ve=1,_e=0,Se=1e6;class Ie{constructor(t){if(this.inputs=[],this.outputs=[],this._inputAmount=void 0,this._outputAmount=void 0,t){if(t instanceof Ie)return Ie.shallowCopy(t);if(S.isHexa(t))this.fromString(t);else if(k.isBuffer(t))this.fromBuffer(t);else{if(!e.isObject(t))throw new g.InvalidArgument("Must provide an object or string to deserialize a transaction");this.fromObject(t)}}else this._newTransaction()}get hash(){return new V(this._getHash()).readReverse().toString("hex")}get id(){return new V(this._getHash()).readReverse().toString("hex")}get inputAmount(){return this._getInputAmount()}get outputAmount(){return this._getOutputAmount()}_getHash(){return w.sha256sha256(this.toBuffer())}serialize(e){return!0===e||e&&e.disableAll?this.uncheckedSerialize():this.checkedSerialize(e)}toString(){return this.toBuffer().toString("hex")}uncheckedSerialize(){return this.toString()}checkedSerialize(e){const t=this.getSerializationError(e);if(t)throw t.message+=" - For more information please see: https://bitcore.io/api/lib/transaction#serialization-checks",t;return this.uncheckedSerialize()}invalidSatoshis(){return this.outputs.some(e=>e.invalidSatoshis())}getSerializationError(){let e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};if(this.invalidSatoshis())return new g.Transaction.InvalidSatoshis;const t=this._getUnspentValue();let r;return 0>t?!e.disableMoreOutputThanInput&&(r=new g.Transaction.InvalidOutputAmountSum):r=this._hasFeeError(e,t),r||this._hasDustOutputs(e)||this._isMissingSignatures(e)}_hasFeeError(e,t){if(void 0!==this._fee&&this._fee!==t)return new g.Transaction.FeeError.Different("Unspent value is ".concat(t," but specified fee is ").concat(this._fee));if(!e.disableLargeFees){const e=Math.floor(Ie.FEE_SECURITY_MARGIN*this._estimateFee());if(t>e)return this._missingChange()?new g.Transaction.ChangeAddressMissing("Fee is too large and no change address was provided"):new g.Transaction.FeeError.TooLarge("expected less than ".concat(e," but got ").concat(t))}if(!e.disableSmallFees){const e=Math.ceil(this._estimateFee()/Ie.FEE_SECURITY_MARGIN);if(t<e)return new g.Transaction.FeeError.TooSmall("expected more than ".concat(e," but got ").concat(t))}}_missingChange(){return!this._changeScript}_hasDustOutputs(e){if(!e.disableDustOutputs){if(0<this.outputs.filter(e=>e.satoshis<Ie.DUST_AMOUNT&&!e.script.isDataOut()).length)return new g.Transaction.DustOutputs}}_isMissingSignatures(e){return e.disableIsFullySigned||this.isFullySigned()?void 0:new g.Transaction.MissingSignatures}inspect(){return"<Transaction: ".concat(this.uncheckedSerialize(),">")}toBuffer(){const e=new q;return this.toBufferWriter(e).toBuffer()}toBufferWriter(e){return e.writeInt32LE(this.version),e.writeVarintNum(this.inputs.length),this.inputs.forEach(t=>t.toBufferWriter(e)),e.writeVarintNum(this.outputs.length),this.outputs.forEach(t=>t.toBufferWriter(e)),e.writeUInt32LE(this.nLockTime),e}fromBuffer(e){const t=new V(e);return this.fromBufferReader(t)}fromBufferReader(e){let t;b.checkArgument(!e.finished(),"No transaction data received when creating transaction from buffer"),this.version=e.readInt32LE();const r=e.readVarintNum();for(t=0;t<r;t+=1){const t=ce.fromBufferReader(e);this.inputs.push(t)}const i=e.readVarintNum();for(t=0;t<i;t+=1)this.outputs.push(re.fromBufferReader(e));return this.nLockTime=e.readUInt32LE(),this}toJSON(){const e=this.inputs.map(e=>e.toObject()),t=this.outputs.map(e=>e.toObject()),r={hash:this.hash,version:this.version,inputs:e,outputs:t,nLockTime:this.nLockTime};return this._changeScript&&(r.changeScript=this._changeScript.toString()),void 0!==this._changeIndex&&(r.changeIndex=this._changeIndex),void 0!==this._fee&&(r.fee=this._fee),void 0!==this._dataInputs&&(r.dataInputs=this._dataInputs),void 0!==this._dataOutputs&&(r.dataOutputs=this._dataOutputs),r}toObject(){return this.toJSON()}fromObject(t){b.checkArgument(e.isObject(t)||t instanceof Ie);const r=t instanceof Ie?t.toObject():t;return r.inputs.forEach(e=>{if(!e.output||!e.output.script)return void this.uncheckedAddInput(new ce(e));const t=new W(e.output.script);let r;if(t.isPublicKeyHashOut())r=new de(e);else if(t.isScriptHashOut()&&e.publicKeys&&e.threshold)r=new he(e,e.publicKeys,e.threshold,e.signatures);else{if(!t.isPublicKeyOut())throw new g.Transaction.Input.UnsupportedScript(e.output.script);r=new pe(e)}this.addInput(r)}),r.outputs.forEach(e=>this.addOutput(new re(e))),r.changeIndex&&(this._changeIndex=r.changeIndex),r.changeScript&&(this._changeScript=new W(r.changeScript)),r.fee&&(this._fee=r.fee),this.nLockTime=r.nLockTime,this.version=r.version,this._checkConsistency(t),this}_checkConsistency(e){void 0!==this._changeIndex&&(b.checkState(this._changeScript,"Change script missing"),b.checkState(this.outputs[this._changeIndex],"Change output missing"),b.checkState(this.outputs[this._changeIndex].script.toString()===this._changeScript.toString(),"Script in argument does not match script in transaction")),e&&e.hash&&b.checkState(e.hash===this.hash,"Hash in argument does not match transaction hash")}lockUntilDate(t){if(b.checkArgument(t),e.isNumber(t)&&t<Ie.NLOCKTIME_BLOCKHEIGHT_LIMIT)throw new g.Transaction.LockTimeTooEarly;return e.isDate(t)&&(t=t.getTime()/1e3),this.inputs.forEach(e=>{e.sequenceNumber===ce.DEFAULT_SEQNUMBER&&(e.sequenceNumber=ce.DEFAULT_LOCKTIME_SEQNUMBER)}),this.nLockTime=t,this}lockUntilBlockHeight(t){if(b.checkArgument(e.isNumber(t),"Block height must be a number"),t>=Ie.NLOCKTIME_BLOCKHEIGHT_LIMIT)throw new g.Transaction.BlockHeightTooHigh;if(0>t)throw new g.Transaction.NLockTimeOutOfRange;return this.inputs.forEach(e=>{e.sequenceNumber===ce.DEFAULT_SEQNUMBER&&(e.sequenceNumber=ce.DEFAULT_LOCKTIME_SEQNUMBER)}),this.nLockTime=t,this}getLockTime(){return this.nLockTime?this.nLockTime<Ie.NLOCKTIME_BLOCKHEIGHT_LIMIT?this.nLockTime:new Date(1e3*this.nLockTime):null}fromString(e){this.fromBuffer(Buffer.from(e,"hex"))}_newTransaction(){this.version=ve,this.nLockTime=_e}from(e,t,r){if(Array.isArray(e))return e.forEach(e=>this.from(e,t,r)),this;const i=this.inputs.some(t=>t.prevTxId.toString("hex")===e.txId&&t.outputIndex===e.outputIndex);let o;const n=new be(e);if(i)return this;if(t&&r)if(b.checkArgument(r<=t.length,"Number of signatures must be greater than the number of public keys"),n.script.isMultisigOut())o=fe;else{if(!n.script.isScriptHashOut())throw new Error("@TODO");o=he}else o=n.script.isPublicKeyHashOut()?de:n.script.isPublicKeyOut()?pe:ce;const a=new o({output:new re({script:n.script,satoshis:n.satoshis}),prevTxId:n.txId,outputIndex:n.outputIndex,script:W.empty()},t,r);return this.addInput(a),this}addInput(e,t,r){if(b.checkArgumentType(e,ce,"Trying to add input of type other than input"),!e.output&&(void 0===t||void 0===r))throw new g.Transaction.NeedMoreInfo("Need information about the UTXO script and satoshis");return!e.output&&t&&void 0!==r&&(t=t instanceof W?t:new W(t),b.checkArgumentType(r,"number","Satoshis must be a number when adding input"),e.output=new re({script:t,satoshis:r})),this.uncheckedAddInput(e)}uncheckedAddInput(e){return b.checkArgumentType(e,ce,"Trying to add input of type other than input"),this.inputs.push(e),this._inputAmount=void 0,this._updateChangeOutput(),this}hasAllUtxoInfo(){return this.inputs.map(e=>!!e.output)}fee(t){return b.checkArgument(e.isNumber(t),"Amount must be a number"),this._fee=t,this._updateChangeOutput(),this}feePerKb(t){return b.checkArgument(e.isNumber(t),"Amount must be a number"),this._feePerKb=t,this._updateChangeOutput(),this}change(e){return b.checkArgument(e,"Address is required"),this._changeScript=W.fromAddress(e),this._updateChangeOutput(),this}getChangeOutput(){return void 0===this._changeIndex?null:this.outputs[this._changeIndex]}to(e,t){if(Array.isArray(e)){const t=this;return e.forEach(e=>t.to(e.address,e.satoshis)),this}return b.checkArgument(S.isNaturalNumber(t),"Amount is expected to be a positive integer"),this.addOutput(new re({script:W(new J(e)),satoshis:t})),this}addData(e){return this.addOutput(new re({script:W.buildDataOut(e),satoshis:0})),this}addOutput(e){return b.checkArgumentType(e,re,"Output needs to be of type output"),this._addOutput(e),this._updateChangeOutput(),this}clearOutputs(){return this.outputs=[],this._clearSignatures(),this._outputAmount=void 0,this._changeIndex=void 0,this._updateChangeOutput(),this}_addOutput(e){this.outputs.push(e),this._outputAmount=void 0}_getOutputAmount(){return void 0===this._outputAmount&&(this._outputAmount=this.outputs.reduce((e,t)=>e+t.satoshis,0)),this._outputAmount}_getInputAmount(){if(void 0===this._inputAmount){const e=this;this._inputAmount=0,this.inputs.forEach(t=>{if(void 0===t.output)throw new g.Transaction.Input.MissingPreviousOutput;e._inputAmount+=t.output.satoshis})}return this._inputAmount}_updateChangeOutput(){if(!this._changeScript)return;this._clearSignatures(),void 0!==this._changeIndex&&this._removeOutput(this._changeIndex);const e=this._getUnspentValue()-this.getFee();0<e?(this._changeIndex=this.outputs.length,this._addOutput(new re({script:this._changeScript,satoshis:e}))):this._changeIndex=void 0}getFee(){return this.isCoinbase()?0:void 0===this._fee?this._changeScript?this._estimateFee():this._getUnspentValue():this._fee}_estimateFee(){const e=this._estimateSize(),t=this._getUnspentValue();return Ie._estimateFee(e,t,this._feePerKb)}_getUnspentValue(){return this._getInputAmount()-this._getOutputAmount()}_clearSignatures(){this.inputs.forEach(e=>e.clearSignatures())}_estimateSize(){let e=this.inputs.reduce((e,t)=>e+t._estimateSize(),Ie.MAXIMUM_EXTRA_SIZE);return e=this.outputs.reduce((e,t)=>e+t.script.toBuffer().length+9,e)}_removeOutput(e){const t=this.outputs[e];this.outputs=this.outputs.filter(e=>e!==t),this._outputAmount=void 0}removeOutput(e){this._removeOutput(e),this._updateChangeOutput()}sort(){return this.sortInputs(e=>{const t=Array.prototype.concat.apply([],e);return t.sort((e,t)=>ye(e.prevTxId,t.prevTxId)||e.outputIndex-t.outputIndex),t}),this.sortOutputs(e=>{const t=Array.prototype.concat.apply([],e);return t.sort((e,t)=>e.satoshis-t.satoshis||ye(e.script.toBuffer(),t.script.toBuffer())),t}),this}shuffleOutputs(){return this.sortOutputs(e.shuffle)}sortOutputs(e){const t=e(this.outputs);return this._newOutputOrder(t)}sortInputs(e){return this.inputs=e(this.inputs),this._clearSignatures(),this}_newOutputOrder(t){if(this.outputs.length!==t.length||0!==e.difference(this.outputs,t).length)throw new g.Transaction.InvalidSorting;if(void 0!==this._changeIndex){const r=this.outputs[this._changeIndex];this._changeIndex=e.findIndex(t,r)}return this.outputs=t,this}removeInput(t,r){let i;if(0>(i=!r&&e.isNumber(t)?t:e.findIndex(this.inputs,e=>e.prevTxId.toString("hex")===t&&e.outputIndex===r))||i>=this.inputs.length)throw new g.Transaction.InvalidIndex(i,this.inputs.length);const o=this.inputs[i];this.inputs=e.without(this.inputs,o),this._inputAmount=void 0,this._updateChangeOutput()}sign(e,t){b.checkState(this.hasAllUtxoInfo(),"Cannot sign because an input is not defined");const r=this;return Array.isArray(e)?(e.forEach(e=>r.sign(e,t)),this):(this.getSignatures(e,t).forEach(e=>r.applySignature(e)),this)}getSignatures(e,t){e=new j(e),t=t||Y.SIGHASH_ALL|Y.SIGHASH_FORKID;const r=this,i=[],o=w.sha256ripemd160(e.publicKey.toBuffer());return this.inputs.forEach((n,a)=>{n.getSignatures(r,e,a,t,o).forEach(e=>i.push(e))}),i}applySignature(e){return this.inputs[e.inputIndex].addSignature(this,e),this}isFullySigned(){return this.inputs.forEach(e=>{if(e.isFullySigned===ce.prototype.isFullySigned)throw new g.Transaction.UnableToVerifySignature("Unrecognized script kind, or not enough information to execute script.This usually happens when creating a transaction from a serialized transaction")}),this.inputs.map(e=>e.isFullySigned()).every(e=>e)}isValidSignature(e){if(this.inputs[e.inputIndex].isValidSignature===ce.prototype.isValidSignature)throw new g.Transaction.UnableToVerifySignature("Unrecognized script kind, or not enough information to execute script.This usually happens when creating a transaction from a serialized transaction");return this.inputs[e.inputIndex].isValidSignature(this,e)}verifySignature(e,t,r,i){return se.verify(this,e,t,r,i)}verify(){let e;if(0===this.inputs.length)return"transaction txins empty";if(0===this.outputs.length)return"transaction txouts empty";let t=new r(0);for(e=0;e<this.outputs.length;e+=1){if(this.outputs[e].invalidSatoshis())return"Transaction output contains invalid amount";if(this.outputs[e]._satoshisBN.gt(new r(Ie.MAX_MONEY,10)))return"Transaction output contains too high satoshi amount";if((t=t.add(this.outputs[e]._satoshisBN)).gt(new r(Ie.MAX_MONEY)))return"Transaction output contains too high satoshi amount"}if(this.toBuffer().length>Se)return"Transaction over the maximum block size";const i={};for(e=0;e<this.inputs.length;e+=1){const t="".concat(this.inputs[e].prevTxId,":").concat(this.inputs[e].outputIndex);if(void 0!==i[t])return"Transaction contains duplicate input";i[t]=!0}if(this.isCoinbase()){const e=this.inputs[0]._scriptBuffer;if(2>e.length||100<e.length)return"Coinbase transaction script size invalid"}else if(0<this.inputs.filter(e=>e.isNull()).length)return"Transaction has null input";return!0}isCoinbase(){return 1===this.inputs.length&&this.inputs[0].isNull()}isRBF(){return this.inputs.some(e=>e.sequenceNumber<ce.MAXINT-1)}enableRBF(){return this.inputs=this.inputs.map(e=>(e.sequenceNumber>=ce.MAXINT-1&&(e.sequenceNumber=ce.DEFAULT_RBF_SEQNUMBER),e)),this}static shallowCopy(e){return new Ie(e.toBuffer())}static _estimateFee(e,t,r){return t>Math.ceil(e/1e3)*(r||Ie.FEE_PER_KB)&&(e+=Ie.CHANGE_OUTPUT_MAX_SIZE),Math.ceil(e/1e3)*(r||Ie.FEE_PER_KB)}}Ie.DUST_AMOUNT=546,Ie.FEE_SECURITY_MARGIN=150,Ie.MAX_MONEY=21e14,Ie.NLOCKTIME_BLOCKHEIGHT_LIMIT=5e8,Ie.NLOCKTIME_MAX_VALUE=4294967295,Ie.FEE_PER_KB=2e4,Ie.CHANGE_OUTPUT_MAX_SIZE=62,Ie.MAXIMUM_EXTRA_SIZE=26;class ke{constructor(t){return this instanceof ke?(e.extend(this,ke._from(t)),this):new ke(t)}static _from(t){let r={};if(k.isBuffer(t))r=ke._fromBufferReader(V(t));else{if(!e.isObject(t))throw new TypeError("Unrecognized argument for Block");r=ke._fromObject(t)}return r}static _fromObject(e){const t=[];return e.transactions.forEach(e=>{e instanceof Ie?t.push(e):t.push((new Ie).fromObject(e))}),{header:$.fromObject(e.header),transactions:t}}static fromObject(e){const t=ke._fromObject(e);return new ke(t)}static _fromBufferReader(e){const t={};b.checkState(!e.finished(),"No block data received"),t.header=$.fromBufferReader(e);const r=e.readVarintNum();t.transactions=[];for(let i=0;i<r;i+=1)t.transactions.push((new Ie).fromBufferReader(e));return t}static fromBufferReader(e){b.checkArgument(e,"br is required");const t=ke._fromBufferReader(e);return new ke(t)}static fromBuffer(e){return ke.fromBufferReader(new V(e))}static fromString(e){const t=Buffer.from(e,"hex");return ke.fromBuffer(t)}static fromRawBlock(e){k.isBuffer(e)||(e=Buffer.from(e,"binary"));const t=V(e);t.pos=ke.Values.START_OF_BLOCK;const r=ke._fromBufferReader(t);return new ke(r)}toJSON(){const e=[];return this.transactions.forEach(t=>{e.push(t.toObject())}),{header:this.header.toObject(),transactions:e}}toObject(){return this.toJSON()}toBuffer(){return this.toBufferWriter().concat()}toString(){return this.toBuffer().toString("hex")}toBufferWriter(e){e||(e=new q),e.write(this.header.toBuffer()),e.writeVarintNum(this.transactions.length);for(let t=0;t<this.transactions.length;t+=1)this.transactions[t].toBufferWriter(e);return e}getTransactionHashes(){const e=[];if(0===this.transactions.length)return[ke.Values.NULL_HASH];for(let t=0;t<this.transactions.length;t+=1)e.push(this.transactions[t]._getHash());return e}getMerkleTree(){const e=this.getTransactionHashes();let t=0;for(let r=this.transactions.length;1<r;r=Math.floor((r+1)/2)){for(let i=0;i<r;i+=2){const o=Math.min(i+1,r-1),n=Buffer.concat([e[t+i],e[t+o]]);e.push(w.sha256sha256(n))}t+=r}return e}getMerkleRoot(){const e=this.getMerkleTree();return e[e.length-1]}validMerkleRoot(){const e=new r(this.header.merkleRoot.toString("hex"),"hex"),t=new r(this.getMerkleRoot().toString("hex"),"hex");return!(0!==e.cmp(t))}_getHash(){return this.header._getHash()}inspect(){return"<Block ".concat(this.id,">")}}ke.MAX_BLOCK_SIZE=1e6;const we={configurable:!1,enumerable:!0,get(){return this._id||(this._id=this.header.id),this._id},set:e.noop};Object.defineProperty(ke.prototype,"id",we),Object.defineProperty(ke.prototype,"hash",we),ke.Values={START_OF_BLOCK:8,NULL_HASH:Buffer.from("0000000000000000000000000000000000000000000000000000000000000000","hex")};const Oe=g.HDPublicKey;function Pe(t){if(t instanceof Pe)return t;if(!(this instanceof Pe))return new Pe(t);if(t){if(e.isString(t)||k.isBuffer(t)){const e=Pe.getSerializedError(t);if(!e)return this._buildFromSerialized(t);if(k.isBuffer(t)&&!Pe.getSerializedError(t.toString()))return this._buildFromSerialized(t.toString());if(e instanceof Oe.ArgumentIsPrivateExtended)return new Be(t).hdPublicKey;throw e}if(e.isObject(t))return t instanceof Be?this._buildFromPrivate(t):this._buildFromObject(t);throw new Oe.UnrecognizedArgument(t)}throw new Oe.MustSupplyArgument}Pe.isValidPath=function(t){if(e.isString(t)){const r=Be._getDerivationIndexes(t);return null!==r&&e.every(r,Pe.isValidPath)}return!!e.isNumber(t)&&0<=t&&t<Pe.Hardened},Pe.prototype.derive=function(e,t){return this.deriveChild(e,t)},Pe.prototype.deriveChild=function(t,r){if(e.isNumber(t))return this._deriveWithNumber(t,r);if(e.isString(t))return this._deriveFromString(t);throw new Oe.InvalidDerivationArgument(t)},Pe.prototype._deriveWithNumber=function(e,t){if(e>=Pe.Hardened||t)throw new Oe.InvalidIndexCantDeriveHardened;if(0>e)throw new Oe.InvalidPath(e);const i=k.integerAsBuffer(e),o=k.concat([this.publicKey.toBuffer(),i]),n=w.sha512hmac(o,this._buffers.chainCode),a=r.fromBuffer(n.slice(0,32),{size:32}),s=n.slice(32,64);let u;try{u=M.fromPoint(L.getG().mul(a).add(this.publicKey.point))}catch(t){return this._deriveWithNumber(e+1)}return new Pe({network:this.network,depth:this.depth+1,parentFingerPrint:this.fingerPrint,childIndex:e,chainCode:s,publicKey:u})},Pe.prototype._deriveFromString=function(t){if(e.includes(t,"'"))throw new Oe.InvalidIndexCantDeriveHardened;if(!Pe.isValidPath(t))throw new Oe.InvalidPath(t);return Be._getDerivationIndexes(t).reduce((e,t)=>e._deriveWithNumber(t),this)},Pe.isValidSerialized=function(t,r){return e.isNull(Pe.getSerializedError(t,r))},Pe.getSerializedError=function(t,r){if(!e.isString(t)&&!k.isBuffer(t))return new Oe.UnrecognizedArgument("expected buffer or string");if(!v.validCharacters(t))return new g.InvalidB58Char("(unknown)",t);try{t=O.decode(t)}catch(e){return new g.InvalidB58Checksum(t)}if(t.length!==Pe.DataSize)return new Oe.InvalidLength(t);if(!e.isUndefined(r)){const e=Pe._validateNetwork(t,r);if(e)return e}const i=k.integerFromBuffer(t.slice(0,4));return i===z.livenet.xprivkey||i===z.testnet.xprivkey?new Oe.ArgumentIsPrivateExtended:null},Pe._validateNetwork=function(e,t){const r=z.get(t);if(!r)return new g.InvalidNetworkArgument(t);const i=e.slice(Pe.VersionStart,Pe.VersionEnd);return k.integerFromBuffer(i)===r.xpubkey?null:new g.InvalidNetwork(i)},Pe.prototype._buildFromPrivate=function(t){const i=e.clone(t._buffers),o=L.getG().mul(r.fromBuffer(i.privateKey));return i.publicKey=L.pointToCompressed(o),i.version=k.integerAsBuffer(z.get(k.integerFromBuffer(i.version)).xpubkey),i.privateKey=void 0,i.checksum=void 0,i.xprivkey=void 0,this._buildFromBuffers(i)},Pe.prototype._buildFromObject=function(t){let r=e.isString(t.publicKey)?k.hexToBuffer(t.publicKey):k.isBuffer(t.publicKey)?t.publicKey:t.publicKey.toBuffer();const i={version:t.network?k.integerAsBuffer(z.get(t.network).xpubkey):t.version,depth:e.isNumber(t.depth)?k.integerAsSingleByteBuffer(t.depth):t.depth,parentFingerPrint:e.isNumber(t.parentFingerPrint)?k.integerAsBuffer(t.parentFingerPrint):t.parentFingerPrint,childIndex:e.isNumber(t.childIndex)?k.integerAsBuffer(t.childIndex):t.childIndex,chainCode:e.isString(t.chainCode)?k.hexToBuffer(t.chainCode):t.chainCode,publicKey:r,checksum:e.isNumber(t.checksum)?k.integerAsBuffer(t.checksum):t.checksum};return this._buildFromBuffers(i)},Pe.prototype._buildFromSerialized=function(e){const t=O.decode(e),r={version:t.slice(Pe.VersionStart,Pe.VersionEnd),depth:t.slice(Pe.DepthStart,Pe.DepthEnd),parentFingerPrint:t.slice(Pe.ParentFingerPrintStart,Pe.ParentFingerPrintEnd),childIndex:t.slice(Pe.ChildIndexStart,Pe.ChildIndexEnd),chainCode:t.slice(Pe.ChainCodeStart,Pe.ChainCodeEnd),publicKey:t.slice(Pe.PublicKeyStart,Pe.PublicKeyEnd),checksum:t.slice(Pe.ChecksumStart,Pe.ChecksumEnd),xpubkey:e};return this._buildFromBuffers(r)},Pe.prototype._buildFromBuffers=function(e){Pe._validateBufferArguments(e),S.defineImmutable(this,{_buffers:e});const t=[e.version,e.depth,e.parentFingerPrint,e.childIndex,e.chainCode,e.publicKey],r=k.concat(t),i=O.checksum(r);if(e.checksum&&e.checksum.length){if(e.checksum.toString("hex")!==i.toString("hex"))throw new g.InvalidB58Checksum(r,i)}else e.checksum=i;const o=z.get(k.integerFromBuffer(e.version)),n=O.encode(k.concat(t));e.xpubkey=Buffer.from(n);const a=new M(e.publicKey,{network:o}),s=Pe.ParentFingerPrintSize,u=w.sha256ripemd160(a.toBuffer()).slice(0,s);return S.defineImmutable(this,{xpubkey:n,network:o,depth:k.integerFromSingleByteBuffer(e.depth),publicKey:a,fingerPrint:u}),this},Pe._validateBufferArguments=function(e){const t=function(t,r){const i=e[t];a(k.isBuffer(i),"".concat(t," argument is not a buffer, it's ").concat(typeof i)),a(i.length===r,"".concat(t," size unexpected: found ").concat(i.length,", expected ").concat(r))};t("version",Pe.VersionSize),t("depth",Pe.DepthSize),t("parentFingerPrint",Pe.ParentFingerPrintSize),t("childIndex",Pe.ChildIndexSize),t("chainCode",Pe.ChainCodeSize),t("publicKey",Pe.PublicKeySize),e.checksum&&e.checksum.length&&t("checksum",Pe.CheckSumSize)},Pe.fromString=function(t){return b.checkArgument(e.isString(t),"No valid string was provided"),new Pe(t)},Pe.fromObject=function(t){return b.checkArgument(e.isObject(t),"No valid argument was provided"),new Pe(t)},Pe.prototype.toString=function(){return this.xpubkey},Pe.prototype.inspect=function(){return"<HDPublicKey: ".concat(this.xpubkey,">")},Pe.prototype.toJSON=function(){return{network:z.get(k.integerFromBuffer(this._buffers.version)).name,depth:k.integerFromSingleByteBuffer(this._buffers.depth),fingerPrint:k.integerFromBuffer(this.fingerPrint),parentFingerPrint:k.integerFromBuffer(this._buffers.parentFingerPrint),childIndex:k.integerFromBuffer(this._buffers.childIndex),chainCode:k.bufferToHex(this._buffers.chainCode),publicKey:this.publicKey.toString(),checksum:k.integerFromBuffer(this._buffers.checksum),xpubkey:this.xpubkey}},Pe.prototype.toObject=Pe.prototype.toJSON,Pe.fromBuffer=function(e){return new Pe(e)},Pe.prototype.toBuffer=function(){return k.copy(this._buffers.xpubkey)},Pe.Hardened=2147483648,Pe.RootElementAlias=["m","M"],Pe.VersionSize=4,Pe.DepthSize=1,Pe.ParentFingerPrintSize=4,Pe.ChildIndexSize=4,Pe.ChainCodeSize=32,Pe.PublicKeySize=33,Pe.CheckSumSize=4,Pe.DataSize=78,Pe.SerializedByteSize=82,Pe.VersionStart=0,Pe.VersionEnd=Pe.VersionStart+Pe.VersionSize,Pe.DepthStart=Pe.VersionEnd,Pe.DepthEnd=Pe.DepthStart+Pe.DepthSize,Pe.ParentFingerPrintStart=Pe.DepthEnd,Pe.ParentFingerPrintEnd=Pe.ParentFingerPrintStart+Pe.ParentFingerPrintSize,Pe.ChildIndexStart=Pe.ParentFingerPrintEnd,Pe.ChildIndexEnd=Pe.ChildIndexStart+Pe.ChildIndexSize,Pe.ChainCodeStart=Pe.ChildIndexEnd,Pe.ChainCodeEnd=Pe.ChainCodeStart+Pe.ChainCodeSize,Pe.PublicKeyStart=Pe.ChainCodeEnd,Pe.PublicKeyEnd=Pe.PublicKeyStart+Pe.PublicKeySize,Pe.ChecksumStart=Pe.PublicKeyEnd,Pe.ChecksumEnd=Pe.ChecksumStart+Pe.CheckSumSize,a(Pe.PublicKeyEnd===Pe.DataSize),a(Pe.ChecksumEnd===Pe.SerializedByteSize);const Ee=g.HDPrivateKey;function Be(t){if(t instanceof Be)return t;if(!(this instanceof Be))return new Be(t);if(!t)return this._generateRandomly();if(z.get(t))return this._generateRandomly(t);if(e.isString(t)||k.isBuffer(t))if(Be.isValidSerialized(t))this._buildFromSerialized(t);else if(S.isValidJSON(t))this._buildFromJSON(t);else{if(!k.isBuffer(t)||!Be.isValidSerialized(t.toString()))throw Be.getSerializedError(t);this._buildFromSerialized(t.toString())}else{if(!e.isObject(t))throw new Ee.UnrecognizedArgument(t);this._buildFromObject(t)}}Be.isValidPath=function(t,r){if(e.isString(t)){const r=Be._getDerivationIndexes(t);return null!==r&&e.every(r,Be.isValidPath)}return!!e.isNumber(t)&&(t<Be.Hardened&&!0===r&&(t+=Be.Hardened),0<=t&&t<Be.MaxIndex)},Be._getDerivationIndexes=function(t){const r=t.split("/");if(e.includes(Be.RootElementAlias,t))return[];if(!e.includes(Be.RootElementAlias,r[0]))return null;const i=r.slice(1).map(e=>{const t="'"===e.slice(-1);if(t&&(e=e.slice(0,-1)),!e||"-"===e[0])return NaN;let r=+e;return t&&(r+=Be.Hardened),r});return e.some(i,Number.isNaN)?null:i},Be.prototype.derive=function(e,t){return this.deriveNonCompliantChild(e,t)},Be.prototype.deriveChild=function(t,r){if(e.isNumber(t))return this._deriveWithNumber(t,r);if(e.isString(t))return this._deriveFromString(t);throw new Ee.InvalidDerivationArgument(t)},Be.prototype.deriveNonCompliantChild=function(t,r){if(e.isNumber(t))return this._deriveWithNumber(t,r,!0);if(e.isString(t))return this._deriveFromString(t,!0);throw new Ee.InvalidDerivationArgument(t)},Be.prototype._deriveWithNumber=function(e,t,i){if(!Be.isValidPath(e,t))throw new Ee.InvalidPath(e);t=!!(e>=Be.Hardened)||t,e<Be.Hardened&&!0===t&&(e+=Be.Hardened);const o=k.integerAsBuffer(e);let n;if(t&&i){const e=this.privateKey.bn.toBuffer();n=k.concat([Buffer.from([0]),e,o])}else if(t){const e=this.privateKey.bn.toBuffer({size:32});a(32===e.length,"private key buffer is expected to be 32 bytes"),n=k.concat([Buffer.from([0]),e,o])}else n=k.concat([this.publicKey.toBuffer(),o]);const s=w.sha512hmac(n,this._buffers.chainCode),u=r.fromBuffer(s.slice(0,32),{size:32}),c=s.slice(32,64),l=u.add(this.privateKey.toBigNumber()).umod(L.getN()).toBuffer({size:32});return j.isValid(l)?new Be({network:this.network,depth:this.depth+1,parentFingerPrint:this.fingerPrint,childIndex:e,chainCode:c,privateKey:l}):this._deriveWithNumber(e+1,null,i)},Be.prototype._deriveFromString=function(e,t){if(!Be.isValidPath(e))throw new Ee.InvalidPath(e);return Be._getDerivationIndexes(e).reduce((e,r)=>e._deriveWithNumber(r,null,t),this)},Be.isValidSerialized=function(e,t){return!Be.getSerializedError(e,t)},Be.getSerializedError=function(t,r){if(!e.isString(t)&&!k.isBuffer(t))return new Ee.UnrecognizedArgument("Expected string or buffer");if(!v.validCharacters(t))return new g.InvalidB58Char("(unknown)",t);try{t=O.decode(t)}catch(e){return new g.InvalidB58Checksum(t)}if(t.length!==Be.DataLength)return new Ee.InvalidLength(t);if(!e.isUndefined(r)){const e=Be._validateNetwork(t,r);if(e)return e}return null},Be._validateNetwork=function(e,t){const r=z.get(t);if(!r)return new g.InvalidNetworkArgument(t);const i=e.slice(0,4);return k.integerFromBuffer(i)===r.xprivkey?null:new g.InvalidNetwork(i)},Be.fromString=function(t){return b.checkArgument(e.isString(t),"No valid string was provided"),new Be(t)},Be.fromObject=function(t){return b.checkArgument(e.isObject(t),"No valid argument was provided"),new Be(t)},Be.prototype._buildFromJSON=function(e){return this._buildFromObject(JSON.parse(e))},Be.prototype._buildFromObject=function(t){let r;t.checksum&&(r=t.checksum.length?t.checksum:k.integerAsBuffer(t.checksum));const i={version:t.network?k.integerAsBuffer(z.get(t.network).xprivkey):t.version,depth:e.isNumber(t.depth)?k.integerAsSingleByteBuffer(t.depth):t.depth,parentFingerPrint:e.isNumber(t.parentFingerPrint)?k.integerAsBuffer(t.parentFingerPrint):t.parentFingerPrint,childIndex:e.isNumber(t.childIndex)?k.integerAsBuffer(t.childIndex):t.childIndex,chainCode:e.isString(t.chainCode)?k.hexToBuffer(t.chainCode):t.chainCode,privateKey:e.isString(t.privateKey)&&S.isHexa(t.privateKey)?k.hexToBuffer(t.privateKey):t.privateKey,checksum:r};return this._buildFromBuffers(i)},Be.prototype._buildFromSerialized=function(e){const t=O.decode(e),r={version:t.slice(Be.VersionStart,Be.VersionEnd),depth:t.slice(Be.DepthStart,Be.DepthEnd),parentFingerPrint:t.slice(Be.ParentFingerPrintStart,Be.ParentFingerPrintEnd),childIndex:t.slice(Be.ChildIndexStart,Be.ChildIndexEnd),chainCode:t.slice(Be.ChainCodeStart,Be.ChainCodeEnd),privateKey:t.slice(Be.PrivateKeyStart,Be.PrivateKeyEnd),checksum:t.slice(Be.ChecksumStart,Be.ChecksumEnd),xprivkey:e};return this._buildFromBuffers(r)},Be.prototype._generateRandomly=function(e){return Be.fromSeed(D.getRandomBuffer(64),e)},Be.fromSeed=function(e,t){if(S.isHexaString(e)&&(e=k.hexToBuffer(e)),!Buffer.isBuffer(e))throw new Ee.InvalidEntropyArgument(e);if(e.length<16)throw new Ee.InvalidEntropyArgument.NotEnoughEntropy(e);if(e.length>64)throw new Ee.InvalidEntropyArgument.TooMuchEntropy(e);const r=w.sha512hmac(e,Buffer.from("Bitcoin seed"));return new Be({network:z.get(t)||z.defaultNetwork,depth:0,parentFingerPrint:0,childIndex:0,privateKey:r.slice(0,32),chainCode:r.slice(32,64)})},Be.prototype._calcHDPublicKey=function(){this._hdPublicKey||(this._hdPublicKey=new Pe(this))},Be.prototype._buildFromBuffers=function(e){Be._validateBufferArguments(e),S.defineImmutable(this,{_buffers:e});const t=[e.version,e.depth,e.parentFingerPrint,e.childIndex,e.chainCode,k.emptyBuffer(1),e.privateKey],i=Buffer.concat(t);if(e.checksum&&e.checksum.length){if(e.checksum.toString()!==O.checksum(i).toString())throw new g.InvalidB58Checksum(i)}else e.checksum=O.checksum(i);const o=z.get(k.integerFromBuffer(e.version)),n=O.encode(Buffer.concat(t));e.xprivkey=Buffer.from(n);const a=new j(r.fromBuffer(e.privateKey),o),s=a.toPublicKey(),u=Be.ParentFingerPrintSize,c=w.sha256ripemd160(s.toBuffer()).slice(0,u);return S.defineImmutable(this,{xprivkey:n,network:o,depth:k.integerFromSingleByteBuffer(e.depth),privateKey:a,publicKey:s,fingerPrint:c}),this._hdPublicKey=null,Object.defineProperty(this,"hdPublicKey",{configurable:!1,enumerable:!0,get(){return this._calcHDPublicKey(),this._hdPublicKey}}),Object.defineProperty(this,"xpubkey",{configurable:!1,enumerable:!0,get(){return this._calcHDPublicKey(),this._hdPublicKey.xpubkey}}),this},Be._validateBufferArguments=function(e){const t=function(t,r){const i=e[t];a(k.isBuffer(i),"".concat(t," argument is not a buffer")),a(i.length===r,"".concat(t," size unexpected: found ").concat(i.length,", expected ").concat(r))};t("version",Be.VersionSize),t("depth",Be.DepthSize),t("parentFingerPrint",Be.ParentFingerPrintSize),t("childIndex",Be.ChildIndexSize),t("chainCode",Be.ChainCodeSize),t("privateKey",Be.PrivateKeySize),e.checksum&&e.checksum.length&&t("checksum",Be.CheckSumSize)},Be.prototype.toString=function(){return this.xprivkey},Be.prototype.toJSON=function(){return{network:z.get(k.integerFromBuffer(this._buffers.version),"xprivkey").name,depth:k.integerFromSingleByteBuffer(this._buffers.depth),fingerPrint:k.integerFromBuffer(this.fingerPrint),parentFingerPrint:k.integerFromBuffer(this._buffers.parentFingerPrint),childIndex:k.integerFromBuffer(this._buffers.childIndex),chainCode:k.bufferToHex(this._buffers.chainCode),privateKey:this.privateKey.toBuffer().toString("hex"),checksum:k.integerFromBuffer(this._buffers.checksum),xprivkey:this.xprivkey}},Be.prototype.toObject=Be.prototype.toJSON,Be.fromBuffer=function(e){return new Be(e.toString())},Be.prototype.toBuffer=function(){return k.copy(this._buffers.xprivkey)},Be.DefaultDepth=0,Be.DefaultFingerprint=0,Be.DefaultChildIndex=0,Be.Hardened=2147483648,Be.MaxIndex=2*Be.Hardened,Be.RootElementAlias=["m","M","m'","M'"],Be.VersionSize=4,Be.DepthSize=1,Be.ParentFingerPrintSize=4,Be.ChildIndexSize=4,Be.ChainCodeSize=32,Be.PrivateKeySize=32,Be.CheckSumSize=4,Be.DataLength=78,Be.SerializedByteSize=82,Be.VersionStart=0,Be.VersionEnd=Be.VersionStart+Be.VersionSize,Be.DepthStart=Be.VersionEnd,Be.DepthEnd=Be.DepthStart+Be.DepthSize,Be.ParentFingerPrintStart=Be.DepthEnd,Be.ParentFingerPrintEnd=Be.ParentFingerPrintStart+Be.ParentFingerPrintSize,Be.ChildIndexStart=Be.ParentFingerPrintEnd,Be.ChildIndexEnd=Be.ChildIndexStart+Be.ChildIndexSize,Be.ChainCodeStart=Be.ChildIndexEnd,Be.ChainCodeEnd=Be.ChainCodeStart+Be.ChainCodeSize,Be.PrivateKeyStart=Be.ChainCodeEnd+1,Be.PrivateKeyEnd=Be.PrivateKeyStart+Be.PrivateKeySize,Be.ChecksumStart=Be.PrivateKeyEnd,Be.ChecksumEnd=Be.ChecksumStart+Be.CheckSumSize,a(Be.ChecksumEnd===Be.SerializedByteSize);class Ae{constructor(t){if(!(this instanceof Ae))return new Ae(t);let r={};if(k.isBuffer(t))r=Ae._fromBufferReader(V(t));else{if(!e.isObject(t))throw new TypeError("Unrecognized argument for MerkleBlock");{let e;r={header:e=t.header instanceof $?t.header:$.fromObject(t.header),numTransactions:t.numTransactions,hashes:t.hashes,flags:t.flags}}}return e.extend(this,r),this._flagBitsUsed=0,this._hashesUsed=0,this}static fromBuffer(e){return Ae.fromBufferReader(V(e))}static fromBufferReader(e){return new Ae(Ae._fromBufferReader(e))}toBuffer(){return this.toBufferWriter().concat()}toBufferWriter(e){let t;for(e||(e=new q),e.write(this.header.toBuffer()),e.writeUInt32LE(this.numTransactions),e.writeVarintNum(this.hashes.length),t=0;t<this.hashes.length;t+=1)e.write(Buffer.from(this.hashes[t],"hex"));for(e.writeVarintNum(this.flags.length),t=0;t<this.flags.length;t+=1)e.writeUInt8(this.flags[t]);return e}toJSON(){return{header:this.header.toObject(),numTransactions:this.numTransactions,hashes:this.hashes,flags:this.flags}}toObject(){return this.toJSON()}validMerkleTree(){if(b.checkState(e.isArray(this.flags),"MerkleBlock flags is not an array"),b.checkState(e.isArray(this.hashes),"MerkleBlock hashes is not an array"),this.hashes.length>this.numTransactions)return!1;if(8*this.flags.length<this.hashes.length)return!1;const t=this._calcTreeHeight(),r={hashesUsed:0,flagBitsUsed:0},i=this._traverseMerkleTree(t,0,r);return r.hashesUsed===this.hashes.length&&k.equals(i,this.header.merkleRoot)}_traverseMerkleTree(e,t,r){if((r=r||{}).txs=r.txs||[],r.flagBitsUsed=r.flagBitsUsed||0,r.hashesUsed=r.hashesUsed||0,r.flagBitsUsed>8*this.flags.length)return null;const i=1&this.flags[r.flagBitsUsed>>3]>>>(7&r.flagBitsUsed);if(r.flagBitsUsed+=1,0===e||!i){if(r.hashesUsed>=this.hashes.length)return null;const t=this.hashes[r.hashesUsed];return r.hashesUsed+=1,0===e&&i&&r.txs.push(t),Buffer.from(t,"hex")}const o=this._traverseMerkleTree(e-1,2*t,r);let n=o;return 2*t+1<this._calcTreeWidth(e-1)&&(n=this._traverseMerkleTree(e-1,2*t+1,r)),w.sha256sha256(Buffer.concat([o,n]))}_calcTreeWidth(e){return this.numTransactions+(1<<e)-1>>e}_calcTreeHeight(){let e=0;for(;1<this._calcTreeWidth(e);)e+=1;return e}hasTransaction(t){b.checkArgument(!e.isUndefined(t),"tx cannot be undefined"),b.checkArgument(t instanceof Ie||"string"==typeof t,'Invalid tx given, tx must be a "string" or "Transaction"');let r=t;t instanceof Ie&&(r=k.reverse(Buffer.from(t.id,"hex")).toString("hex"));const i=[],o=this._calcTreeHeight();return this._traverseMerkleTree(o,0,{txs:i}),-1!==i.indexOf(r)}static _fromBufferReader(e){let t;b.checkState(!e.finished(),"No merkleblock data received");const r={header:$.fromBufferReader(e),numTransactions:e.readUInt32LE()},i=e.readVarintNum();for(r.hashes=[],t=0;t<i;t+=1)r.hashes.push(e.read(32).toString("hex"));const o=e.readVarintNum();for(r.flags=[],t=0;t<o;t+=1)r.flags.push(e.readUInt8());return r}static fromObject(e){return new Ae(e)}}class Te{constructor(t){return b.checkArgument(e.isString(t),"First argument should be a string"),this.message=t,this}magicHash(){const e=q.varintBufNum(Te.MAGIC_BYTES.length),t=Buffer.from(this.message),r=q.varintBufNum(t.length),i=Buffer.concat([e,Te.MAGIC_BYTES,r,t]);return w.sha256sha256(i)}_sign(e){b.checkArgument(e instanceof j,"First argument should be a PrivateKey");const t=this.magicHash(),r=new ie;return r.hashbuf=t,r.privkey=e,r.pubkey=e.toPublicKey(),r.signRandomK(),r.calci(),r.sig}sign(e){return this._sign(e).toCompact().toString("base64")}_verify(e,t){b.checkArgument(e instanceof M,"First argument should be a PublicKey"),b.checkArgument(t instanceof Y,"Second argument should be a Signature");const r=this.magicHash(),i=ie.verify(r,t,e);return i||(this.error="The signature was invalid"),i}verify(t,r){b.checkArgument(t),b.checkArgument(r&&e.isString(r)),e.isString(t)&&(t=J.fromString(t));const i=Y.fromCompact(Buffer.from(r,"base64")),o=new ie;o.hashbuf=this.magicHash(),o.sig=i;const n=o.toPublicKey(),a=J.fromPublicKey(n,t.network);return t.toString()===a.toString()?this._verify(n,i):(this.error="The signature did not match the message digest",!1)}static fromString(e){return new Te(e)}static fromJSON(e){return S.isValidJSON(e)&&(e=JSON.parse(e)),new Te(e.message)}toObject(){return{message:this.message}}toJSON(){return JSON.stringify(this.toObject())}toString(){return this.message}inspect(){return"<Message: ".concat(this.toString(),">")}}Te.MAGIC_BYTES=Buffer.from("Bitcoin Signed Message:\n");var xe={CHINESE:["的","一","是","在","不","了","有","和","人","这","中","大","为","上","个","国","我","以","要","他","时","来","用","们","生","到","作","地","于","出","就","分","对","成","会","可","主","发","年","动","同","工","也","能","下","过","子","说","产","种","面","而","方","后","多","定","行","学","法","所","民","得","经","十","三","之","进","着","等","部","度","家","电","力","里","如","水","化","高","自","二","理","起","小","物","现","实","加","量","都","两","体","制","机","当","使","点","从","业","本","去","把","性","好","应","开","它","合","还","因","由","其","些","然","前","外","天","政","四","日","那","社","义","事","平","形","相","全","表","间","样","与","关","各","重","新","线","内","数","正","心","反","你","明","看","原","又","么","利","比","或","但","质","气","第","向","道","命","此","变","条","只","没","结","解","问","意","建","月","公","无","系","军","很","情","者","最","立","代","想","已","通","并","提","直","题","党","程","展","五","果","料","象","员","革","位","入","常","文","总","次","品","式","活","设","及","管","特","件","长","求","老","头","基","资","边","流","路","级","少","图","山","统","接","知","较","将","组","见","计","别","她","手","角","期","根","论","运","农","指","几","九","区","强","放","决","西","被","干","做","必","战","先","回","则","任","取","据","处","队","南","给","色","光","门","即","保","治","北","造","百","规","热","领","七","海","口","东","导","器","压","志","世","金","增","争","济","阶","油","思","术","极","交","受","联","什","认","六","共","权","收","证","改","清","美","再","采","转","更","单","风","切","打","白","教","速","花","带","安","场","身","车","例","真","务","具","万","每","目","至","达","走","积","示","议","声","报","斗","完","类","八","离","华","名","确","才","科","张","信","马","节","话","米","整","空","元","况","今","集","温","传","土","许","步","群","广","石","记","需","段","研","界","拉","林","律","叫","且","究","观","越","织","装","影","算","低","持","音","众","书","布","复","容","儿","须","际","商","非","验","连","断","深","难","近","矿","千","周","委","素","技","备","半","办","青","省","列","习","响","约","支","般","史","感","劳","便","团","往","酸","历","市","克","何","除","消","构","府","称","太","准","精","值","号","率","族","维","划","选","标","写","存","候","毛","亲","快","效","斯","院","查","江","型","眼","王","按","格","养","易","置","派","层","片","始","却","专","状","育","厂","京","识","适","属","圆","包","火","住","调","满","县","局","照","参","红","细","引","听","该","铁","价","严","首","底","液","官","德","随","病","苏","失","尔","死","讲","配","女","黄","推","显","谈","罪","神","艺","呢","席","含","企","望","密","批","营","项","防","举","球","英","氧","势","告","李","台","落","木","帮","轮","破","亚","师","围","注","远","字","材","排","供","河","态","封","另","施","减","树","溶","怎","止","案","言","士","均","武","固","叶","鱼","波","视","仅","费","紧","爱","左","章","早","朝","害","续","轻","服","试","食","充","兵","源","判","护","司","足","某","练","差","致","板","田","降","黑","犯","负","击","范","继","兴","似","余","坚","曲","输","修","故","城","夫","够","送","笔","船","占","右","财","吃","富","春","职","觉","汉","画","功","巴","跟","虽","杂","飞","检","吸","助","升","阳","互","初","创","抗","考","投","坏","策","古","径","换","未","跑","留","钢","曾","端","责","站","简","述","钱","副","尽","帝","射","草","冲","承","独","令","限","阿","宣","环","双","请","超","微","让","控","州","良","轴","找","否","纪","益","依","优","顶","础","载","倒","房","突","坐","粉","敌","略","客","袁","冷","胜","绝","析","块","剂","测","丝","协","诉","念","陈","仍","罗","盐","友","洋","错","苦","夜","刑","移","频","逐","靠","混","母","短","皮","终","聚","汽","村","云","哪","既","距","卫","停","烈","央","察","烧","迅","境","若","印","洲","刻","括","激","孔","搞","甚","室","待","核","校","散","侵","吧","甲","游","久","菜","味","旧","模","湖","货","损","预","阻","毫","普","稳","乙","妈","植","息","扩","银","语","挥","酒","守","拿","序","纸","医","缺","雨","吗","针","刘","啊","急","唱","误","训","愿","审","附","获","茶","鲜","粮","斤","孩","脱","硫","肥","善","龙","演","父","渐","血","欢","械","掌","歌","沙","刚","攻","谓","盾","讨","晚","粒","乱","燃","矛","乎","杀","药","宁","鲁","贵","钟","煤","读","班","伯","香","介","迫","句","丰","培","握","兰","担","弦","蛋","沉","假","穿","执","答","乐","谁","顺","烟","缩","征","脸","喜","松","脚","困","异","免","背","星","福","买","染","井","概","慢","怕","磁","倍","祖","皇","促","静","补","评","翻","肉","践","尼","衣","宽","扬","棉","希","伤","操","垂","秋","宜","氢","套","督","振","架","亮","末","宪","庆","编","牛","触","映","雷","销","诗","座","居","抓","裂","胞","呼","娘","景","威","绿","晶","厚","盟","衡","鸡","孙","延","危","胶","屋","乡","临","陆","顾","掉","呀","灯","岁","措","束","耐","剧","玉","赵","跳","哥","季","课","凯","胡","额","款","绍","卷","齐","伟","蒸","殖","永","宗","苗","川","炉","岩","弱","零","杨","奏","沿","露","杆","探","滑","镇","饭","浓","航","怀","赶","库","夺","伊","灵","税","途","灭","赛","归","召","鼓","播","盘","裁","险","康","唯","录","菌","纯","借","糖","盖","横","符","私","努","堂","域","枪","润","幅","哈","竟","熟","虫","泽","脑","壤","碳","欧","遍","侧","寨","敢","彻","虑","斜","薄","庭","纳","弹","饲","伸","折","麦","湿","暗","荷","瓦","塞","床","筑","恶","户","访","塔","奇","透","梁","刀","旋","迹","卡","氯","遇","份","毒","泥","退","洗","摆","灰","彩","卖","耗","夏","择","忙","铜","献","硬","予","繁","圈","雪","函","亦","抽","篇","阵","阴","丁","尺","追","堆","雄","迎","泛","爸","楼","避","谋","吨","野","猪","旗","累","偏","典","馆","索","秦","脂","潮","爷","豆","忽","托","惊","塑","遗","愈","朱","替","纤","粗","倾","尚","痛","楚","谢","奋","购","磨","君","池","旁","碎","骨","监","捕","弟","暴","割","贯","殊","释","词","亡","壁","顿","宝","午","尘","闻","揭","炮","残","冬","桥","妇","警","综","招","吴","付","浮","遭","徐","您","摇","谷","赞","箱","隔","订","男","吹","园","纷","唐","败","宋","玻","巨","耕","坦","荣","闭","湾","键","凡","驻","锅","救","恩","剥","凝","碱","齿","截","炼","麻","纺","禁","废","盛","版","缓","净","睛","昌","婚","涉","筒","嘴","插","岸","朗","庄","街","藏","姑","贸","腐","奴","啦","惯","乘","伙","恢","匀","纱","扎","辩","耳","彪","臣","亿","璃","抵","脉","秀","萨","俄","网","舞","店","喷","纵","寸","汗","挂","洪","贺","闪","柬","爆","烯","津","稻","墙","软","勇","像","滚","厘","蒙","芳","肯","坡","柱","荡","腿","仪","旅","尾","轧","冰","贡","登","黎","削","钻","勒","逃","障","氨","郭","峰","币","港","伏","轨","亩","毕","擦","莫","刺","浪","秘","援","株","健","售","股","岛","甘","泡","睡","童","铸","汤","阀","休","汇","舍","牧","绕","炸","哲","磷","绩","朋","淡","尖","启","陷","柴","呈","徒","颜","泪","稍","忘","泵","蓝","拖","洞","授","镜","辛","壮","锋","贫","虚","弯","摩","泰","幼","廷","尊","窗","纲","弄","隶","疑","氏","宫","姐","震","瑞","怪","尤","琴","循","描","膜","违","夹","腰","缘","珠","穷","森","枝","竹","沟","催","绳","忆","邦","剩","幸","浆","栏","拥","牙","贮","礼","滤","钠","纹","罢","拍","咱","喊","袖","埃","勤","罚","焦","潜","伍","墨","欲","缝","姓","刊","饱","仿","奖","铝","鬼","丽","跨","默","挖","链","扫","喝","袋","炭","污","幕","诸","弧","励","梅","奶","洁","灾","舟","鉴","苯","讼","抱","毁","懂","寒","智","埔","寄","届","跃","渡","挑","丹","艰","贝","碰","拔","爹","戴","码","梦","芽","熔","赤","渔","哭","敬","颗","奔","铅","仲","虎","稀","妹","乏","珍","申","桌","遵","允","隆","螺","仓","魏","锐","晓","氮","兼","隐","碍","赫","拨","忠","肃","缸","牵","抢","博","巧","壳","兄","杜","讯","诚","碧","祥","柯","页","巡","矩","悲","灌","龄","伦","票","寻","桂","铺","圣","恐","恰","郑","趣","抬","荒","腾","贴","柔","滴","猛","阔","辆","妻","填","撤","储","签","闹","扰","紫","砂","递","戏","吊","陶","伐","喂","疗","瓶","婆","抚","臂","摸","忍","虾","蜡","邻","胸","巩","挤","偶","弃","槽","劲","乳","邓","吉","仁","烂","砖","租","乌","舰","伴","瓜","浅","丙","暂","燥","橡","柳","迷","暖","牌","秧","胆","详","簧","踏","瓷","谱","呆","宾","糊","洛","辉","愤","竞","隙","怒","粘","乃","绪","肩","籍","敏","涂","熙","皆","侦","悬","掘","享","纠","醒","狂","锁","淀","恨","牲","霸","爬","赏","逆","玩","陵","祝","秒","浙","貌","役","彼","悉","鸭","趋","凤","晨","畜","辈","秩","卵","署","梯","炎","滩","棋","驱","筛","峡","冒","啥","寿","译","浸","泉","帽","迟","硅","疆","贷","漏","稿","冠","嫩","胁","芯","牢","叛","蚀","奥","鸣","岭","羊","凭","串","塘","绘","酵","融","盆","锡","庙","筹","冻","辅","摄","袭","筋","拒","僚","旱","钾","鸟","漆","沈","眉","疏","添","棒","穗","硝","韩","逼","扭","侨","凉","挺","碗","栽","炒","杯","患","馏","劝","豪","辽","勃","鸿","旦","吏","拜","狗","埋","辊","掩","饮","搬","骂","辞","勾","扣","估","蒋","绒","雾","丈","朵","姆","拟","宇","辑","陕","雕","偿","蓄","崇","剪","倡","厅","咬","驶","薯","刷","斥","番","赋","奉","佛","浇","漫","曼","扇","钙","桃","扶","仔","返","俗","亏","腔","鞋","棱","覆","框","悄","叔","撞","骗","勘","旺","沸","孤","吐","孟","渠","屈","疾","妙","惜","仰","狠","胀","谐","抛","霉","桑","岗","嘛","衰","盗","渗","脏","赖","涌","甜","曹","阅","肌","哩","厉","烃","纬","毅","昨","伪","症","煮","叹","钉","搭","茎","笼","酷","偷","弓","锥","恒","杰","坑","鼻","翼","纶","叙","狱","逮","罐","络","棚","抑","膨","蔬","寺","骤","穆","冶","枯","册","尸","凸","绅","坯","牺","焰","轰","欣","晋","瘦","御","锭","锦","丧","旬","锻","垄","搜","扑","邀","亭","酯","迈","舒","脆","酶","闲","忧","酚","顽","羽","涨","卸","仗","陪","辟","惩","杭","姚","肚","捉","飘","漂","昆","欺","吾","郎","烷","汁","呵","饰","萧","雅","邮","迁","燕","撒","姻","赴","宴","烦","债","帐","斑","铃","旨","醇","董","饼","雏","姿","拌","傅","腹","妥","揉","贤","拆","歪","葡","胺","丢","浩","徽","昂","垫","挡","览","贪","慰","缴","汪","慌","冯","诺","姜","谊","凶","劣","诬","耀","昏","躺","盈","骑","乔","溪","丛","卢","抹","闷","咨","刮","驾","缆","悟","摘","铒","掷","颇","幻","柄","惠","惨","佳","仇","腊","窝","涤","剑","瞧","堡","泼","葱","罩","霍","捞","胎","苍","滨","俩","捅","湘","砍","霞","邵","萄","疯","淮","遂","熊","粪","烘","宿","档","戈","驳","嫂","裕","徙","箭","捐","肠","撑","晒","辨","殿","莲","摊","搅","酱","屏","疫","哀","蔡","堵","沫","皱","畅","叠","阁","莱","敲","辖","钩","痕","坝","巷","饿","祸","丘","玄","溜","曰","逻","彭","尝","卿","妨","艇","吞","韦","怨","矮","歇"],ENGLISH:["abandon","ability","able","about","above","absent","absorb","abstract","absurd","abuse","access","accident","account","accuse","achieve","acid","acoustic","acquire","across","act","action","actor","actress","actual","adapt","add","addict","address","adjust","admit","adult","advance","advice","aerobic","affair","afford","afraid","again","age","agent","agree","ahead","aim","air","airport","aisle","alarm","album","alcohol","alert","alien","all","alley","allow","almost","alone","alpha","already","also","alter","always","amateur","amazing","among","amount","amused","analyst","anchor","ancient","anger","angle","angry","animal","ankle","announce","annual","another","answer","antenna","antique","anxiety","any","apart","apology","appear","apple","approve","april","arch","arctic","area","arena","argue","arm","armed","armor","army","around","arrange","arrest","arrive","arrow","art","artefact","artist","artwork","ask","aspect","assault","asset","assist","assume","asthma","athlete","atom","attack","attend","attitude","attract","auction","audit","august","aunt","author","auto","autumn","average","avocado","avoid","awake","aware","away","awesome","awful","awkward","axis","baby","bachelor","bacon","badge","bag","balance","balcony","ball","bamboo","banana","banner","bar","barely","bargain","barrel","base","basic","basket","battle","beach","bean","beauty","because","become","beef","before","begin","behave","behind","believe","below","belt","bench","benefit","best","betray","better","between","beyond","bicycle","bid","bike","bind","biology","bird","birth","bitter","black","blade","blame","blanket","blast","bleak","bless","blind","blood","blossom","blouse","blue","blur","blush","board","boat","body","boil","bomb","bone","bonus","book","boost","border","boring","borrow","boss","bottom","bounce","box","boy","bracket","brain","brand","brass","brave","bread","breeze","brick","bridge","brief","bright","bring","brisk","broccoli","broken","bronze","broom","brother","brown","brush","bubble","buddy","budget","buffalo","build","bulb","bulk","bullet","bundle","bunker","burden","burger","burst","bus","business","busy","butter","buyer","buzz","cabbage","cabin","cable","cactus","cage","cake","call","calm","camera","camp","can","canal","cancel","candy","cannon","canoe","canvas","canyon","capable","capital","captain","car","carbon","card","cargo","carpet","carry","cart","case","cash","casino","castle","casual","cat","catalog","catch","category","cattle","caught","cause","caution","cave","ceiling","celery","cement","census","century","cereal","certain","chair","chalk","champion","change","chaos","chapter","charge","chase","chat","cheap","check","cheese","chef","cherry","chest","chicken","chief","child","chimney","choice","choose","chronic","chuckle","chunk","churn","cigar","cinnamon","circle","citizen","city","civil","claim","clap","clarify","claw","clay","clean","clerk","clever","click","client","cliff","climb","clinic","clip","clock","clog","close","cloth","cloud","clown","club","clump","cluster","clutch","coach","coast","coconut","code","coffee","coil","coin","collect","color","column","combine","come","comfort","comic","common","company","concert","conduct","confirm","congress","connect","consider","control","convince","cook","cool","copper","copy","coral","core","corn","correct","cost","cotton","couch","country","couple","course","cousin","cover","coyote","crack","cradle","craft","cram","crane","crash","crater","crawl","crazy","cream","credit","creek","crew","cricket","crime","crisp","critic","crop","cross","crouch","crowd","crucial","cruel","cruise","crumble","crunch","crush","cry","crystal","cube","culture","cup","cupboard","curious","current","curtain","curve","cushion","custom","cute","cycle","dad","damage","damp","dance","danger","daring","dash","daughter","dawn","day","deal","debate","debris","decade","december","decide","decline","decorate","decrease","deer","defense","define","defy","degree","delay","deliver","demand","demise","denial","dentist","deny","depart","depend","deposit","depth","deputy","derive","describe","desert","design","desk","despair","destroy","detail","detect","develop","device","devote","diagram","dial","diamond","diary","dice","diesel","diet","differ","digital","dignity","dilemma","dinner","dinosaur","direct","dirt","disagree","discover","disease","dish","dismiss","disorder","display","distance","divert","divide","divorce","dizzy","doctor","document","dog","doll","dolphin","domain","donate","donkey","donor","door","dose","double","dove","draft","dragon","drama","drastic","draw","dream","dress","drift","drill","drink","drip","drive","drop","drum","dry","duck","dumb","dune","during","dust","dutch","duty","dwarf","dynamic","eager","eagle","early","earn","earth","easily","east","easy","echo","ecology","economy","edge","edit","educate","effort","egg","eight","either","elbow","elder","electric","elegant","element","elephant","elevator","elite","else","embark","embody","embrace","emerge","emotion","employ","empower","empty","enable","enact","end","endless","endorse","enemy","energy","enforce","engage","engine","enhance","enjoy","enlist","enough","enrich","enroll","ensure","enter","entire","entry","envelope","episode","equal","equip","era","erase","erode","erosion","error","erupt","escape","essay","essence","estate","eternal","ethics","evidence","evil","evoke","evolve","exact","example","excess","exchange","excite","exclude","excuse","execute","exercise","exhaust","exhibit","exile","exist","exit","exotic","expand","expect","expire","explain","expose","express","extend","extra","eye","eyebrow","fabric","face","faculty","fade","faint","faith","fall","false","fame","family","famous","fan","fancy","fantasy","farm","fashion","fat","fatal","father","fatigue","fault","favorite","feature","february","federal","fee","feed","feel","female","fence","festival","fetch","fever","few","fiber","fiction","field","figure","file","film","filter","final","find","fine","finger","finish","fire","firm","first","fiscal","fish","fit","fitness","fix","flag","flame","flash","flat","flavor","flee","flight","flip","float","flock","floor","flower","fluid","flush","fly","foam","focus","fog","foil","fold","follow","food","foot","force","forest","forget","fork","fortune","forum","forward","fossil","foster","found","fox","fragile","frame","frequent","fresh","friend","fringe","frog","front","frost","frown","frozen","fruit","fuel","fun","funny","furnace","fury","future","gadget","gain","galaxy","gallery","game","gap","garage","garbage","garden","garlic","garment","gas","gasp","gate","gather","gauge","gaze","general","genius","genre","gentle","genuine","gesture","ghost","giant","gift","giggle","ginger","giraffe","girl","give","glad","glance","glare","glass","glide","glimpse","globe","gloom","glory","glove","glow","glue","goat","goddess","gold","good","goose","gorilla","gospel","gossip","govern","gown","grab","grace","grain","grant","grape","grass","gravity","great","green","grid","grief","grit","grocery","group","grow","grunt","guard","guess","guide","guilt","guitar","gun","gym","habit","hair","half","hammer","hamster","hand","happy","harbor","hard","harsh","harvest","hat","have","hawk","hazard","head","health","heart","heavy","hedgehog","height","hello","helmet","help","hen","hero","hidden","high","hill","hint","hip","hire","history","hobby","hockey","hold","hole","holiday","hollow","home","honey","hood","hope","horn","horror","horse","hospital","host","hotel","hour","hover","hub","huge","human","humble","humor","hundred","hungry","hunt","hurdle","hurry","hurt","husband","hybrid","ice","icon","idea","identify","idle","ignore","ill","illegal","illness","image","imitate","immense","immune","impact","impose","improve","impulse","inch","include","income","increase","index","indicate","indoor","industry","infant","inflict","inform","inhale","inherit","initial","inject","injury","inmate","inner","innocent","input","inquiry","insane","insect","inside","inspire","install","intact","interest","into","invest","invite","involve","iron","island","isolate","issue","item","ivory","jacket","jaguar","jar","jazz","jealous","jeans","jelly","jewel","job","join","joke","journey","joy","judge","juice","jump","jungle","junior","junk","just","kangaroo","keen","keep","ketchup","key","kick","kid","kidney","kind","kingdom","kiss","kit","kitchen","kite","kitten","kiwi","knee","knife","knock","know","lab","label","labor","ladder","lady","lake","lamp","language","laptop","large","later","latin","laugh","laundry","lava","law","lawn","lawsuit","layer","lazy","leader","leaf","learn","leave","lecture","left","leg","legal","legend","leisure","lemon","lend","length","lens","leopard","lesson","letter","level","liar","liberty","library","license","life","lift","light","like","limb","limit","link","lion","liquid","list","little","live","lizard","load","loan","lobster","local","lock","logic","lonely","long","loop","lottery","loud","lounge","love","loyal","lucky","luggage","lumber","lunar","lunch","luxury","lyrics","machine","mad","magic","magnet","maid","mail","main","major","make","mammal","man","manage","mandate","mango","mansion","manual","maple","marble","march","margin","marine","market","marriage","mask","mass","master","match","material","math","matrix","matter","maximum","maze","meadow","mean","measure","meat","mechanic","medal","media","melody","melt","member","memory","mention","menu","mercy","merge","merit","merry","mesh","message","metal","method","middle","midnight","milk","million","mimic","mind","minimum","minor","minute","miracle","mirror","misery","miss","mistake","mix","mixed","mixture","mobile","model","modify","mom","moment","monitor","monkey","monster","month","moon","moral","more","morning","mosquito","mother","motion","motor","mountain","mouse","move","movie","much","muffin","mule","multiply","muscle","museum","mushroom","music","must","mutual","myself","mystery","myth","naive","name","napkin","narrow","nasty","nation","nature","near","neck","need","negative","neglect","neither","nephew","nerve","nest","net","network","neutral","never","news","next","nice","night","noble","noise","nominee","noodle","normal","north","nose","notable","note","nothing","notice","novel","now","nuclear","number","nurse","nut","oak","obey","object","oblige","obscure","observe","obtain","obvious","occur","ocean","october","odor","off","offer","office","often","oil","okay","old","olive","olympic","omit","once","one","onion","online","only","open","opera","opinion","oppose","option","orange","orbit","orchard","order","ordinary","organ","orient","original","orphan","ostrich","other","outdoor","outer","output","outside","oval","oven","over","own","owner","oxygen","oyster","ozone","pact","paddle","page","pair","palace","palm","panda","panel","panic","panther","paper","parade","parent","park","parrot","party","pass","patch","path","patient","patrol","pattern","pause","pave","payment","peace","peanut","pear","peasant","pelican","pen","penalty","pencil","people","pepper","perfect","permit","person","pet","phone","photo","phrase","physical","piano","picnic","picture","piece","pig","pigeon","pill","pilot","pink","pioneer","pipe","pistol","pitch","pizza","place","planet","plastic","plate","play","please","pledge","pluck","plug","plunge","poem","poet","point","polar","pole","police","pond","pony","pool","popular","portion","position","possible","post","potato","pottery","poverty","powder","power","practice","praise","predict","prefer","prepare","present","pretty","prevent","price","pride","primary","print","priority","prison","private","prize","problem","process","produce","profit","program","project","promote","proof","property","prosper","protect","proud","provide","public","pudding","pull","pulp","pulse","pumpkin","punch","pupil","puppy","purchase","purity","purpose","purse","push","put","puzzle","pyramid","quality","quantum","quarter","question","quick","quit","quiz","quote","rabbit","raccoon","race","rack","radar","radio","rail","rain","raise","rally","ramp","ranch","random","range","rapid","rare","rate","rather","raven","raw","razor","ready","real","reason","rebel","rebuild","recall","receive","recipe","record","recycle","reduce","reflect","reform","refuse","region","regret","regular","reject","relax","release","relief","rely","remain","remember","remind","remove","render","renew","rent","reopen","repair","repeat","replace","report","require","rescue","resemble","resist","resource","response","result","retire","retreat","return","reunion","reveal","review","reward","rhythm","rib","ribbon","rice","rich","ride","ridge","rifle","right","rigid","ring","riot","ripple","risk","ritual","rival","river","road","roast","robot","robust","rocket","romance","roof","rookie","room","rose","rotate","rough","round","route","royal","rubber","rude","rug","rule","run","runway","rural","sad","saddle","sadness","safe","sail","salad","salmon","salon","salt","salute","same","sample","sand","satisfy","satoshi","sauce","sausage","save","say","scale","scan","scare","scatter","scene","scheme","school","science","scissors","scorpion","scout","scrap","screen","script","scrub","sea","search","season","seat","second","secret","section","security","seed","seek","segment","select","sell","seminar","senior","sense","sentence","series","service","session","settle","setup","seven","shadow","shaft","shallow","share","shed","shell","sheriff","shield","shift","shine","ship","shiver","shock","shoe","shoot","shop","short","shoulder","shove","shrimp","shrug","shuffle","shy","sibling","sick","side","siege","sight","sign","silent","silk","silly","silver","similar","simple","since","sing","siren","sister","situate","six","size","skate","sketch","ski","skill","skin","skirt","skull","slab","slam","sleep","slender","slice","slide","slight","slim","slogan","slot","slow","slush","small","smart","smile","smoke","smooth","snack","snake","snap","sniff","snow","soap","soccer","social","sock","soda","soft","solar","soldier","solid","solution","solve","someone","song","soon","sorry","sort","soul","sound","soup","source","south","space","spare","spatial","spawn","speak","special","speed","spell","spend","sphere","spice","spider","spike","spin","spirit","split","spoil","sponsor","spoon","sport","spot","spray","spread","spring","spy","square","squeeze","squirrel","stable","stadium","staff","stage","stairs","stamp","stand","start","state","stay","steak","steel","stem","step","stereo","stick","still","sting","stock","stomach","stone","stool","story","stove","strategy","street","strike","strong","struggle","student","stuff","stumble","style","subject","submit","subway","success","such","sudden","suffer","sugar","suggest","suit","summer","sun","sunny","sunset","super","supply","supreme","sure","surface","surge","surprise","surround","survey","suspect","sustain","swallow","swamp","swap","swarm","swear","sweet","swift","swim","swing","switch","sword","symbol","symptom","syrup","system","table","tackle","tag","tail","talent","talk","tank","tape","target","task","taste","tattoo","taxi","teach","team","tell","ten","tenant","tennis","tent","term","test","text","thank","that","theme","then","theory","there","they","thing","this","thought","three","thrive","throw","thumb","thunder","ticket","tide","tiger","tilt","timber","time","tiny","tip","tired","tissue","title","toast","tobacco","today","toddler","toe","together","toilet","token","tomato","tomorrow","tone","tongue","tonight","tool","tooth","top","topic","topple","torch","tornado","tortoise","toss","total","tourist","toward","tower","town","toy","track","trade","traffic","tragic","train","transfer","trap","trash","travel","tray","treat","tree","trend","trial","tribe","trick","trigger","trim","trip","trophy","trouble","truck","true","truly","trumpet","trust","truth","try","tube","tuition","tumble","tuna","tunnel","turkey","turn","turtle","twelve","twenty","twice","twin","twist","two","type","typical","ugly","umbrella","unable","unaware","uncle","uncover","under","undo","unfair","unfold","unhappy","uniform","unique","unit","universe","unknown","unlock","until","unusual","unveil","update","upgrade","uphold","upon","upper","upset","urban","urge","usage","use","used","useful","useless","usual","utility","vacant","vacuum","vague","valid","valley","valve","van","vanish","vapor","various","vast","vault","vehicle","velvet","vendor","venture","venue","verb","verify","version","very","vessel","veteran","viable","vibrant","vicious","victory","video","view","village","vintage","violin","virtual","virus","visa","visit","visual","vital","vivid","vocal","voice","void","volcano","volume","vote","voyage","wage","wagon","wait","walk","wall","walnut","want","warfare","warm","warrior","wash","wasp","waste","water","wave","way","wealth","weapon","wear","weasel","weather","web","wedding","weekend","weird","welcome","west","wet","whale","what","wheat","wheel","when","where","whip","whisper","wide","width","wife","wild","will","win","window","wine","wing","wink","winner","winter","wire","wisdom","wise","wish","witness","wolf","woman","wonder","wood","wool","word","work","world","worry","worth","wrap","wreck","wrestle","wrist","write","wrong","yard","year","yellow","you","young","youth","zebra","zero","zone","zoo"],FRENCH:["abaisser","abandon","abdiquer","abeille","abolir","aborder","aboutir","aboyer","abrasif","abreuver","abriter","abroger","abrupt","absence","absolu","absurde","abusif","abyssal","académie","acajou","acarien","accabler","accepter","acclamer","accolade","accroche","accuser","acerbe","achat","acheter","aciduler","acier","acompte","acquérir","acronyme","acteur","actif","actuel","adepte","adéquat","adhésif","adjectif","adjuger","admettre","admirer","adopter","adorer","adoucir","adresse","adroit","adulte","adverbe","aérer","aéronef","affaire","affecter","affiche","affreux","affubler","agacer","agencer","agile","agiter","agrafer","agréable","agrume","aider","aiguille","ailier","aimable","aisance","ajouter","ajuster","alarmer","alchimie","alerte","algèbre","algue","aliéner","aliment","alléger","alliage","allouer","allumer","alourdir","alpaga","altesse","alvéole","amateur","ambigu","ambre","aménager","amertume","amidon","amiral","amorcer","amour","amovible","amphibie","ampleur","amusant","analyse","anaphore","anarchie","anatomie","ancien","anéantir","angle","angoisse","anguleux","animal","annexer","annonce","annuel","anodin","anomalie","anonyme","anormal","antenne","antidote","anxieux","apaiser","apéritif","aplanir","apologie","appareil","appeler","apporter","appuyer","aquarium","aqueduc","arbitre","arbuste","ardeur","ardoise","argent","arlequin","armature","armement","armoire","armure","arpenter","arracher","arriver","arroser","arsenic","artériel","article","aspect","asphalte","aspirer","assaut","asservir","assiette","associer","assurer","asticot","astre","astuce","atelier","atome","atrium","atroce","attaque","attentif","attirer","attraper","aubaine","auberge","audace","audible","augurer","aurore","automne","autruche","avaler","avancer","avarice","avenir","averse","aveugle","aviateur","avide","avion","aviser","avoine","avouer","avril","axial","axiome","badge","bafouer","bagage","baguette","baignade","balancer","balcon","baleine","balisage","bambin","bancaire","bandage","banlieue","bannière","banquier","barbier","baril","baron","barque","barrage","bassin","bastion","bataille","bateau","batterie","baudrier","bavarder","belette","bélier","belote","bénéfice","berceau","berger","berline","bermuda","besace","besogne","bétail","beurre","biberon","bicycle","bidule","bijou","bilan","bilingue","billard","binaire","biologie","biopsie","biotype","biscuit","bison","bistouri","bitume","bizarre","blafard","blague","blanchir","blessant","blinder","blond","bloquer","blouson","bobard","bobine","boire","boiser","bolide","bonbon","bondir","bonheur","bonifier","bonus","bordure","borne","botte","boucle","boueux","bougie","boulon","bouquin","bourse","boussole","boutique","boxeur","branche","brasier","brave","brebis","brèche","breuvage","bricoler","brigade","brillant","brioche","brique","brochure","broder","bronzer","brousse","broyeur","brume","brusque","brutal","bruyant","buffle","buisson","bulletin","bureau","burin","bustier","butiner","butoir","buvable","buvette","cabanon","cabine","cachette","cadeau","cadre","caféine","caillou","caisson","calculer","calepin","calibre","calmer","calomnie","calvaire","camarade","caméra","camion","campagne","canal","caneton","canon","cantine","canular","capable","caporal","caprice","capsule","capter","capuche","carabine","carbone","caresser","caribou","carnage","carotte","carreau","carton","cascade","casier","casque","cassure","causer","caution","cavalier","caverne","caviar","cédille","ceinture","céleste","cellule","cendrier","censurer","central","cercle","cérébral","cerise","cerner","cerveau","cesser","chagrin","chaise","chaleur","chambre","chance","chapitre","charbon","chasseur","chaton","chausson","chavirer","chemise","chenille","chéquier","chercher","cheval","chien","chiffre","chignon","chimère","chiot","chlorure","chocolat","choisir","chose","chouette","chrome","chute","cigare","cigogne","cimenter","cinéma","cintrer","circuler","cirer","cirque","citerne","citoyen","citron","civil","clairon","clameur","claquer","classe","clavier","client","cligner","climat","clivage","cloche","clonage","cloporte","cobalt","cobra","cocasse","cocotier","coder","codifier","coffre","cogner","cohésion","coiffer","coincer","colère","colibri","colline","colmater","colonel","combat","comédie","commande","compact","concert","conduire","confier","congeler","connoter","consonne","contact","convexe","copain","copie","corail","corbeau","cordage","corniche","corpus","correct","cortège","cosmique","costume","coton","coude","coupure","courage","couteau","couvrir","coyote","crabe","crainte","cravate","crayon","créature","créditer","crémeux","creuser","crevette","cribler","crier","cristal","critère","croire","croquer","crotale","crucial","cruel","crypter","cubique","cueillir","cuillère","cuisine","cuivre","culminer","cultiver","cumuler","cupide","curatif","curseur","cyanure","cycle","cylindre","cynique","daigner","damier","danger","danseur","dauphin","débattre","débiter","déborder","débrider","débutant","décaler","décembre","déchirer","décider","déclarer","décorer","décrire","décupler","dédale","déductif","déesse","défensif","défiler","défrayer","dégager","dégivrer","déglutir","dégrafer","déjeuner","délice","déloger","demander","demeurer","démolir","dénicher","dénouer","dentelle","dénuder","départ","dépenser","déphaser","déplacer","déposer","déranger","dérober","désastre","descente","désert","désigner","désobéir","dessiner","destrier","détacher","détester","détourer","détresse","devancer","devenir","deviner","devoir","diable","dialogue","diamant","dicter","différer","digérer","digital","digne","diluer","dimanche","diminuer","dioxyde","directif","diriger","discuter","disposer","dissiper","distance","divertir","diviser","docile","docteur","dogme","doigt","domaine","domicile","dompter","donateur","donjon","donner","dopamine","dortoir","dorure","dosage","doseur","dossier","dotation","douanier","double","douceur","douter","doyen","dragon","draper","dresser","dribbler","droiture","duperie","duplexe","durable","durcir","dynastie","éblouir","écarter","écharpe","échelle","éclairer","éclipse","éclore","écluse","école","économie","écorce","écouter","écraser","écrémer","écrivain","écrou","écume","écureuil","édifier","éduquer","effacer","effectif","effigie","effort","effrayer","effusion","égaliser","égarer","éjecter","élaborer","élargir","électron","élégant","éléphant","élève","éligible","élitisme","éloge","élucider","éluder","emballer","embellir","embryon","émeraude","émission","emmener","émotion","émouvoir","empereur","employer","emporter","emprise","émulsion","encadrer","enchère","enclave","encoche","endiguer","endosser","endroit","enduire","énergie","enfance","enfermer","enfouir","engager","engin","englober","énigme","enjamber","enjeu","enlever","ennemi","ennuyeux","enrichir","enrobage","enseigne","entasser","entendre","entier","entourer","entraver","énumérer","envahir","enviable","envoyer","enzyme","éolien","épaissir","épargne","épatant","épaule","épicerie","épidémie","épier","épilogue","épine","épisode","épitaphe","époque","épreuve","éprouver","épuisant","équerre","équipe","ériger","érosion","erreur","éruption","escalier","espadon","espèce","espiègle","espoir","esprit","esquiver","essayer","essence","essieu","essorer","estime","estomac","estrade","étagère","étaler","étanche","étatique","éteindre","étendoir","éternel","éthanol","éthique","ethnie","étirer","étoffer","étoile","étonnant","étourdir","étrange","étroit","étude","euphorie","évaluer","évasion","éventail","évidence","éviter","évolutif","évoquer","exact","exagérer","exaucer","exceller","excitant","exclusif","excuse","exécuter","exemple","exercer","exhaler","exhorter","exigence","exiler","exister","exotique","expédier","explorer","exposer","exprimer","exquis","extensif","extraire","exulter","fable","fabuleux","facette","facile","facture","faiblir","falaise","fameux","famille","farceur","farfelu","farine","farouche","fasciner","fatal","fatigue","faucon","fautif","faveur","favori","fébrile","féconder","fédérer","félin","femme","fémur","fendoir","féodal","fermer","féroce","ferveur","festival","feuille","feutre","février","fiasco","ficeler","fictif","fidèle","figure","filature","filetage","filière","filleul","filmer","filou","filtrer","financer","finir","fiole","firme","fissure","fixer","flairer","flamme","flasque","flatteur","fléau","flèche","fleur","flexion","flocon","flore","fluctuer","fluide","fluvial","folie","fonderie","fongible","fontaine","forcer","forgeron","formuler","fortune","fossile","foudre","fougère","fouiller","foulure","fourmi","fragile","fraise","franchir","frapper","frayeur","frégate","freiner","frelon","frémir","frénésie","frère","friable","friction","frisson","frivole","froid","fromage","frontal","frotter","fruit","fugitif","fuite","fureur","furieux","furtif","fusion","futur","gagner","galaxie","galerie","gambader","garantir","gardien","garnir","garrigue","gazelle","gazon","géant","gélatine","gélule","gendarme","général","génie","genou","gentil","géologie","géomètre","géranium","germe","gestuel","geyser","gibier","gicler","girafe","givre","glace","glaive","glisser","globe","gloire","glorieux","golfeur","gomme","gonfler","gorge","gorille","goudron","gouffre","goulot","goupille","gourmand","goutte","graduel","graffiti","graine","grand","grappin","gratuit","gravir","grenat","griffure","griller","grimper","grogner","gronder","grotte","groupe","gruger","grutier","gruyère","guépard","guerrier","guide","guimauve","guitare","gustatif","gymnaste","gyrostat","habitude","hachoir","halte","hameau","hangar","hanneton","haricot","harmonie","harpon","hasard","hélium","hématome","herbe","hérisson","hermine","héron","hésiter","heureux","hiberner","hibou","hilarant","histoire","hiver","homard","hommage","homogène","honneur","honorer","honteux","horde","horizon","horloge","hormone","horrible","houleux","housse","hublot","huileux","humain","humble","humide","humour","hurler","hydromel","hygiène","hymne","hypnose","idylle","ignorer","iguane","illicite","illusion","image","imbiber","imiter","immense","immobile","immuable","impact","impérial","implorer","imposer","imprimer","imputer","incarner","incendie","incident","incliner","incolore","indexer","indice","inductif","inédit","ineptie","inexact","infini","infliger","informer","infusion","ingérer","inhaler","inhiber","injecter","injure","innocent","inoculer","inonder","inscrire","insecte","insigne","insolite","inspirer","instinct","insulter","intact","intense","intime","intrigue","intuitif","inutile","invasion","inventer","inviter","invoquer","ironique","irradier","irréel","irriter","isoler","ivoire","ivresse","jaguar","jaillir","jambe","janvier","jardin","jauger","jaune","javelot","jetable","jeton","jeudi","jeunesse","joindre","joncher","jongler","joueur","jouissif","journal","jovial","joyau","joyeux","jubiler","jugement","junior","jupon","juriste","justice","juteux","juvénile","kayak","kimono","kiosque","label","labial","labourer","lacérer","lactose","lagune","laine","laisser","laitier","lambeau","lamelle","lampe","lanceur","langage","lanterne","lapin","largeur","larme","laurier","lavabo","lavoir","lecture","légal","léger","légume","lessive","lettre","levier","lexique","lézard","liasse","libérer","libre","licence","licorne","liège","lièvre","ligature","ligoter","ligue","limer","limite","limonade","limpide","linéaire","lingot","lionceau","liquide","lisière","lister","lithium","litige","littoral","livreur","logique","lointain","loisir","lombric","loterie","louer","lourd","loutre","louve","loyal","lubie","lucide","lucratif","lueur","lugubre","luisant","lumière","lunaire","lundi","luron","lutter","luxueux","machine","magasin","magenta","magique","maigre","maillon","maintien","mairie","maison","majorer","malaxer","maléfice","malheur","malice","mallette","mammouth","mandater","maniable","manquant","manteau","manuel","marathon","marbre","marchand","mardi","maritime","marqueur","marron","marteler","mascotte","massif","matériel","matière","matraque","maudire","maussade","mauve","maximal","méchant","méconnu","médaille","médecin","méditer","méduse","meilleur","mélange","mélodie","membre","mémoire","menacer","mener","menhir","mensonge","mentor","mercredi","mérite","merle","messager","mesure","métal","météore","méthode","métier","meuble","miauler","microbe","miette","mignon","migrer","milieu","million","mimique","mince","minéral","minimal","minorer","minute","miracle","miroiter","missile","mixte","mobile","moderne","moelleux","mondial","moniteur","monnaie","monotone","monstre","montagne","monument","moqueur","morceau","morsure","mortier","moteur","motif","mouche","moufle","moulin","mousson","mouton","mouvant","multiple","munition","muraille","murène","murmure","muscle","muséum","musicien","mutation","muter","mutuel","myriade","myrtille","mystère","mythique","nageur","nappe","narquois","narrer","natation","nation","nature","naufrage","nautique","navire","nébuleux","nectar","néfaste","négation","négliger","négocier","neige","nerveux","nettoyer","neurone","neutron","neveu","niche","nickel","nitrate","niveau","noble","nocif","nocturne","noirceur","noisette","nomade","nombreux","nommer","normatif","notable","notifier","notoire","nourrir","nouveau","novateur","novembre","novice","nuage","nuancer","nuire","nuisible","numéro","nuptial","nuque","nutritif","obéir","objectif","obliger","obscur","observer","obstacle","obtenir","obturer","occasion","occuper","océan","octobre","octroyer","octupler","oculaire","odeur","odorant","offenser","officier","offrir","ogive","oiseau","oisillon","olfactif","olivier","ombrage","omettre","onctueux","onduler","onéreux","onirique","opale","opaque","opérer","opinion","opportun","opprimer","opter","optique","orageux","orange","orbite","ordonner","oreille","organe","orgueil","orifice","ornement","orque","ortie","osciller","osmose","ossature","otarie","ouragan","ourson","outil","outrager","ouvrage","ovation","oxyde","oxygène","ozone","paisible","palace","palmarès","palourde","palper","panache","panda","pangolin","paniquer","panneau","panorama","pantalon","papaye","papier","papoter","papyrus","paradoxe","parcelle","paresse","parfumer","parler","parole","parrain","parsemer","partager","parure","parvenir","passion","pastèque","paternel","patience","patron","pavillon","pavoiser","payer","paysage","peigne","peintre","pelage","pélican","pelle","pelouse","peluche","pendule","pénétrer","pénible","pensif","pénurie","pépite","péplum","perdrix","perforer","période","permuter","perplexe","persil","perte","peser","pétale","petit","pétrir","peuple","pharaon","phobie","phoque","photon","phrase","physique","piano","pictural","pièce","pierre","pieuvre","pilote","pinceau","pipette","piquer","pirogue","piscine","piston","pivoter","pixel","pizza","placard","plafond","plaisir","planer","plaque","plastron","plateau","pleurer","plexus","pliage","plomb","plonger","pluie","plumage","pochette","poésie","poète","pointe","poirier","poisson","poivre","polaire","policier","pollen","polygone","pommade","pompier","ponctuel","pondérer","poney","portique","position","posséder","posture","potager","poteau","potion","pouce","poulain","poumon","pourpre","poussin","pouvoir","prairie","pratique","précieux","prédire","préfixe","prélude","prénom","présence","prétexte","prévoir","primitif","prince","prison","priver","problème","procéder","prodige","profond","progrès","proie","projeter","prologue","promener","propre","prospère","protéger","prouesse","proverbe","prudence","pruneau","psychose","public","puceron","puiser","pulpe","pulsar","punaise","punitif","pupitre","purifier","puzzle","pyramide","quasar","querelle","question","quiétude","quitter","quotient","racine","raconter","radieux","ragondin","raideur","raisin","ralentir","rallonge","ramasser","rapide","rasage","ratisser","ravager","ravin","rayonner","réactif","réagir","réaliser","réanimer","recevoir","réciter","réclamer","récolter","recruter","reculer","recycler","rédiger","redouter","refaire","réflexe","réformer","refrain","refuge","régalien","région","réglage","régulier","réitérer","rejeter","rejouer","relatif","relever","relief","remarque","remède","remise","remonter","remplir","remuer","renard","renfort","renifler","renoncer","rentrer","renvoi","replier","reporter","reprise","reptile","requin","réserve","résineux","résoudre","respect","rester","résultat","rétablir","retenir","réticule","retomber","retracer","réunion","réussir","revanche","revivre","révolte","révulsif","richesse","rideau","rieur","rigide","rigoler","rincer","riposter","risible","risque","rituel","rival","rivière","rocheux","romance","rompre","ronce","rondin","roseau","rosier","rotatif","rotor","rotule","rouge","rouille","rouleau","routine","royaume","ruban","rubis","ruche","ruelle","rugueux","ruiner","ruisseau","ruser","rustique","rythme","sabler","saboter","sabre","sacoche","safari","sagesse","saisir","salade","salive","salon","saluer","samedi","sanction","sanglier","sarcasme","sardine","saturer","saugrenu","saumon","sauter","sauvage","savant","savonner","scalpel","scandale","scélérat","scénario","sceptre","schéma","science","scinder","score","scrutin","sculpter","séance","sécable","sécher","secouer","sécréter","sédatif","séduire","seigneur","séjour","sélectif","semaine","sembler","semence","séminal","sénateur","sensible","sentence","séparer","séquence","serein","sergent","sérieux","serrure","sérum","service","sésame","sévir","sevrage","sextuple","sidéral","siècle","siéger","siffler","sigle","signal","silence","silicium","simple","sincère","sinistre","siphon","sirop","sismique","situer","skier","social","socle","sodium","soigneux","soldat","soleil","solitude","soluble","sombre","sommeil","somnoler","sonde","songeur","sonnette","sonore","sorcier","sortir","sosie","sottise","soucieux","soudure","souffle","soulever","soupape","source","soutirer","souvenir","spacieux","spatial","spécial","sphère","spiral","stable","station","sternum","stimulus","stipuler","strict","studieux","stupeur","styliste","sublime","substrat","subtil","subvenir","succès","sucre","suffixe","suggérer","suiveur","sulfate","superbe","supplier","surface","suricate","surmener","surprise","sursaut","survie","suspect","syllabe","symbole","symétrie","synapse","syntaxe","système","tabac","tablier","tactile","tailler","talent","talisman","talonner","tambour","tamiser","tangible","tapis","taquiner","tarder","tarif","tartine","tasse","tatami","tatouage","taupe","taureau","taxer","témoin","temporel","tenaille","tendre","teneur","tenir","tension","terminer","terne","terrible","tétine","texte","thème","théorie","thérapie","thorax","tibia","tiède","timide","tirelire","tiroir","tissu","titane","titre","tituber","toboggan","tolérant","tomate","tonique","tonneau","toponyme","torche","tordre","tornade","torpille","torrent","torse","tortue","totem","toucher","tournage","tousser","toxine","traction","trafic","tragique","trahir","train","trancher","travail","trèfle","tremper","trésor","treuil","triage","tribunal","tricoter","trilogie","triomphe","tripler","triturer","trivial","trombone","tronc","tropical","troupeau","tuile","tulipe","tumulte","tunnel","turbine","tuteur","tutoyer","tuyau","tympan","typhon","typique","tyran","ubuesque","ultime","ultrason","unanime","unifier","union","unique","unitaire","univers","uranium","urbain","urticant","usage","usine","usuel","usure","utile","utopie","vacarme","vaccin","vagabond","vague","vaillant","vaincre","vaisseau","valable","valise","vallon","valve","vampire","vanille","vapeur","varier","vaseux","vassal","vaste","vecteur","vedette","végétal","véhicule","veinard","véloce","vendredi","vénérer","venger","venimeux","ventouse","verdure","vérin","vernir","verrou","verser","vertu","veston","vétéran","vétuste","vexant","vexer","viaduc","viande","victoire","vidange","vidéo","vignette","vigueur","vilain","village","vinaigre","violon","vipère","virement","virtuose","virus","visage","viseur","vision","visqueux","visuel","vital","vitesse","viticole","vitrine","vivace","vivipare","vocation","voguer","voile","voisin","voiture","volaille","volcan","voltiger","volume","vorace","vortex","voter","vouloir","voyage","voyelle","wagon","xénon","yacht","zèbre","zénith","zeste","zoologie"],ITALIAN:["abaco","abbaglio","abbinato","abete","abisso","abolire","abrasivo","abrogato","accadere","accenno","accusato","acetone","achille","acido","acqua","acre","acrilico","acrobata","acuto","adagio","addebito","addome","adeguato","aderire","adipe","adottare","adulare","affabile","affetto","affisso","affranto","aforisma","afoso","africano","agave","agente","agevole","aggancio","agire","agitare","agonismo","agricolo","agrumeto","aguzzo","alabarda","alato","albatro","alberato","albo","albume","alce","alcolico","alettone","alfa","algebra","aliante","alibi","alimento","allagato","allegro","allievo","allodola","allusivo","almeno","alogeno","alpaca","alpestre","altalena","alterno","alticcio","altrove","alunno","alveolo","alzare","amalgama","amanita","amarena","ambito","ambrato","ameba","america","ametista","amico","ammasso","ammenda","ammirare","ammonito","amore","ampio","ampliare","amuleto","anacardo","anagrafe","analista","anarchia","anatra","anca","ancella","ancora","andare","andrea","anello","angelo","angolare","angusto","anima","annegare","annidato","anno","annuncio","anonimo","anticipo","anzi","apatico","apertura","apode","apparire","appetito","appoggio","approdo","appunto","aprile","arabica","arachide","aragosta","araldica","arancio","aratura","arazzo","arbitro","archivio","ardito","arenile","argento","argine","arguto","aria","armonia","arnese","arredato","arringa","arrosto","arsenico","arso","artefice","arzillo","asciutto","ascolto","asepsi","asettico","asfalto","asino","asola","aspirato","aspro","assaggio","asse","assoluto","assurdo","asta","astenuto","astice","astratto","atavico","ateismo","atomico","atono","attesa","attivare","attorno","attrito","attuale","ausilio","austria","autista","autonomo","autunno","avanzato","avere","avvenire","avviso","avvolgere","azione","azoto","azzimo","azzurro","babele","baccano","bacino","baco","badessa","badilata","bagnato","baita","balcone","baldo","balena","ballata","balzano","bambino","bandire","baraonda","barbaro","barca","baritono","barlume","barocco","basilico","basso","batosta","battuto","baule","bava","bavosa","becco","beffa","belgio","belva","benda","benevole","benigno","benzina","bere","berlina","beta","bibita","bici","bidone","bifido","biga","bilancia","bimbo","binocolo","biologo","bipede","bipolare","birbante","birra","biscotto","bisesto","bisnonno","bisonte","bisturi","bizzarro","blando","blatta","bollito","bonifico","bordo","bosco","botanico","bottino","bozzolo","braccio","bradipo","brama","branca","bravura","bretella","brevetto","brezza","briglia","brillante","brindare","broccolo","brodo","bronzina","brullo","bruno","bubbone","buca","budino","buffone","buio","bulbo","buono","burlone","burrasca","bussola","busta","cadetto","caduco","calamaro","calcolo","calesse","calibro","calmo","caloria","cambusa","camerata","camicia","cammino","camola","campale","canapa","candela","cane","canino","canotto","cantina","capace","capello","capitolo","capogiro","cappero","capra","capsula","carapace","carcassa","cardo","carisma","carovana","carretto","cartolina","casaccio","cascata","caserma","caso","cassone","castello","casuale","catasta","catena","catrame","cauto","cavillo","cedibile","cedrata","cefalo","celebre","cellulare","cena","cenone","centesimo","ceramica","cercare","certo","cerume","cervello","cesoia","cespo","ceto","chela","chiaro","chicca","chiedere","chimera","china","chirurgo","chitarra","ciao","ciclismo","cifrare","cigno","cilindro","ciottolo","circa","cirrosi","citrico","cittadino","ciuffo","civetta","civile","classico","clinica","cloro","cocco","codardo","codice","coerente","cognome","collare","colmato","colore","colposo","coltivato","colza","coma","cometa","commando","comodo","computer","comune","conciso","condurre","conferma","congelare","coniuge","connesso","conoscere","consumo","continuo","convegno","coperto","copione","coppia","copricapo","corazza","cordata","coricato","cornice","corolla","corpo","corredo","corsia","cortese","cosmico","costante","cottura","covato","cratere","cravatta","creato","credere","cremoso","crescita","creta","criceto","crinale","crisi","critico","croce","cronaca","crostata","cruciale","crusca","cucire","cuculo","cugino","cullato","cupola","curatore","cursore","curvo","cuscino","custode","dado","daino","dalmata","damerino","daniela","dannoso","danzare","datato","davanti","davvero","debutto","decennio","deciso","declino","decollo","decreto","dedicato","definito","deforme","degno","delegare","delfino","delirio","delta","demenza","denotato","dentro","deposito","derapata","derivare","deroga","descritto","deserto","desiderio","desumere","detersivo","devoto","diametro","dicembre","diedro","difeso","diffuso","digerire","digitale","diluvio","dinamico","dinnanzi","dipinto","diploma","dipolo","diradare","dire","dirotto","dirupo","disagio","discreto","disfare","disgelo","disposto","distanza","disumano","dito","divano","divelto","dividere","divorato","doblone","docente","doganale","dogma","dolce","domato","domenica","dominare","dondolo","dono","dormire","dote","dottore","dovuto","dozzina","drago","druido","dubbio","dubitare","ducale","duna","duomo","duplice","duraturo","ebano","eccesso","ecco","eclissi","economia","edera","edicola","edile","editoria","educare","egemonia","egli","egoismo","egregio","elaborato","elargire","elegante","elencato","eletto","elevare","elfico","elica","elmo","elsa","eluso","emanato","emblema","emesso","emiro","emotivo","emozione","empirico","emulo","endemico","enduro","energia","enfasi","enoteca","entrare","enzima","epatite","epilogo","episodio","epocale","eppure","equatore","erario","erba","erboso","erede","eremita","erigere","ermetico","eroe","erosivo","errante","esagono","esame","esanime","esaudire","esca","esempio","esercito","esibito","esigente","esistere","esito","esofago","esortato","esoso","espanso","espresso","essenza","esso","esteso","estimare","estonia","estroso","esultare","etilico","etnico","etrusco","etto","euclideo","europa","evaso","evidenza","evitato","evoluto","evviva","fabbrica","faccenda","fachiro","falco","famiglia","fanale","fanfara","fango","fantasma","fare","farfalla","farinoso","farmaco","fascia","fastoso","fasullo","faticare","fato","favoloso","febbre","fecola","fede","fegato","felpa","feltro","femmina","fendere","fenomeno","fermento","ferro","fertile","fessura","festivo","fetta","feudo","fiaba","fiducia","fifa","figurato","filo","finanza","finestra","finire","fiore","fiscale","fisico","fiume","flacone","flamenco","flebo","flemma","florido","fluente","fluoro","fobico","focaccia","focoso","foderato","foglio","folata","folclore","folgore","fondente","fonetico","fonia","fontana","forbito","forchetta","foresta","formica","fornaio","foro","fortezza","forzare","fosfato","fosso","fracasso","frana","frassino","fratello","freccetta","frenata","fresco","frigo","frollino","fronde","frugale","frutta","fucilata","fucsia","fuggente","fulmine","fulvo","fumante","fumetto","fumoso","fune","funzione","fuoco","furbo","furgone","furore","fuso","futile","gabbiano","gaffe","galateo","gallina","galoppo","gambero","gamma","garanzia","garbo","garofano","garzone","gasdotto","gasolio","gastrico","gatto","gaudio","gazebo","gazzella","geco","gelatina","gelso","gemello","gemmato","gene","genitore","gennaio","genotipo","gergo","ghepardo","ghiaccio","ghisa","giallo","gilda","ginepro","giocare","gioiello","giorno","giove","girato","girone","gittata","giudizio","giurato","giusto","globulo","glutine","gnomo","gobba","golf","gomito","gommone","gonfio","gonna","governo","gracile","grado","grafico","grammo","grande","grattare","gravoso","grazia","greca","gregge","grifone","grigio","grinza","grotta","gruppo","guadagno","guaio","guanto","guardare","gufo","guidare","ibernato","icona","identico","idillio","idolo","idra","idrico","idrogeno","igiene","ignaro","ignorato","ilare","illeso","illogico","illudere","imballo","imbevuto","imbocco","imbuto","immane","immerso","immolato","impacco","impeto","impiego","importo","impronta","inalare","inarcare","inattivo","incanto","incendio","inchino","incisivo","incluso","incontro","incrocio","incubo","indagine","india","indole","inedito","infatti","infilare","inflitto","ingaggio","ingegno","inglese","ingordo","ingrosso","innesco","inodore","inoltrare","inondato","insano","insetto","insieme","insonnia","insulina","intasato","intero","intonaco","intuito","inumidire","invalido","invece","invito","iperbole","ipnotico","ipotesi","ippica","iride","irlanda","ironico","irrigato","irrorare","isolato","isotopo","isterico","istituto","istrice","italia","iterare","labbro","labirinto","lacca","lacerato","lacrima","lacuna","laddove","lago","lampo","lancetta","lanterna","lardoso","larga","laringe","lastra","latenza","latino","lattuga","lavagna","lavoro","legale","leggero","lembo","lentezza","lenza","leone","lepre","lesivo","lessato","lesto","letterale","leva","levigato","libero","lido","lievito","lilla","limatura","limitare","limpido","lineare","lingua","liquido","lira","lirica","lisca","lite","litigio","livrea","locanda","lode","logica","lombare","londra","longevo","loquace","lorenzo","loto","lotteria","luce","lucidato","lumaca","luminoso","lungo","lupo","luppolo","lusinga","lusso","lutto","macabro","macchina","macero","macinato","madama","magico","maglia","magnete","magro","maiolica","malafede","malgrado","malinteso","malsano","malto","malumore","mana","mancia","mandorla","mangiare","manifesto","mannaro","manovra","mansarda","mantide","manubrio","mappa","maratona","marcire","maretta","marmo","marsupio","maschera","massaia","mastino","materasso","matricola","mattone","maturo","mazurca","meandro","meccanico","mecenate","medesimo","meditare","mega","melassa","melis","melodia","meninge","meno","mensola","mercurio","merenda","merlo","meschino","mese","messere","mestolo","metallo","metodo","mettere","miagolare","mica","micelio","michele","microbo","midollo","miele","migliore","milano","milite","mimosa","minerale","mini","minore","mirino","mirtillo","miscela","missiva","misto","misurare","mitezza","mitigare","mitra","mittente","mnemonico","modello","modifica","modulo","mogano","mogio","mole","molosso","monastero","monco","mondina","monetario","monile","monotono","monsone","montato","monviso","mora","mordere","morsicato","mostro","motivato","motosega","motto","movenza","movimento","mozzo","mucca","mucosa","muffa","mughetto","mugnaio","mulatto","mulinello","multiplo","mummia","munto","muovere","murale","musa","muscolo","musica","mutevole","muto","nababbo","nafta","nanometro","narciso","narice","narrato","nascere","nastrare","naturale","nautica","naviglio","nebulosa","necrosi","negativo","negozio","nemmeno","neofita","neretto","nervo","nessuno","nettuno","neutrale","neve","nevrotico","nicchia","ninfa","nitido","nobile","nocivo","nodo","nome","nomina","nordico","normale","norvegese","nostrano","notare","notizia","notturno","novella","nucleo","nulla","numero","nuovo","nutrire","nuvola","nuziale","oasi","obbedire","obbligo","obelisco","oblio","obolo","obsoleto","occasione","occhio","occidente","occorrere","occultare","ocra","oculato","odierno","odorare","offerta","offrire","offuscato","oggetto","oggi","ognuno","olandese","olfatto","oliato","oliva","ologramma","oltre","omaggio","ombelico","ombra","omega","omissione","ondoso","onere","onice","onnivoro","onorevole","onta","operato","opinione","opposto","oracolo","orafo","ordine","orecchino","orefice","orfano","organico","origine","orizzonte","orma","ormeggio","ornativo","orologio","orrendo","orribile","ortensia","ortica","orzata","orzo","osare","oscurare","osmosi","ospedale","ospite","ossa","ossidare","ostacolo","oste","otite","otre","ottagono","ottimo","ottobre","ovale","ovest","ovino","oviparo","ovocito","ovunque","ovviare","ozio","pacchetto","pace","pacifico","padella","padrone","paese","paga","pagina","palazzina","palesare","pallido","palo","palude","pandoro","pannello","paolo","paonazzo","paprica","parabola","parcella","parere","pargolo","pari","parlato","parola","partire","parvenza","parziale","passivo","pasticca","patacca","patologia","pattume","pavone","peccato","pedalare","pedonale","peggio","peloso","penare","pendice","penisola","pennuto","penombra","pensare","pentola","pepe","pepita","perbene","percorso","perdonato","perforare","pergamena","periodo","permesso","perno","perplesso","persuaso","pertugio","pervaso","pesatore","pesista","peso","pestifero","petalo","pettine","petulante","pezzo","piacere","pianta","piattino","piccino","picozza","piega","pietra","piffero","pigiama","pigolio","pigro","pila","pilifero","pillola","pilota","pimpante","pineta","pinna","pinolo","pioggia","piombo","piramide","piretico","pirite","pirolisi","pitone","pizzico","placebo","planare","plasma","platano","plenario","pochezza","poderoso","podismo","poesia","poggiare","polenta","poligono","pollice","polmonite","polpetta","polso","poltrona","polvere","pomice","pomodoro","ponte","popoloso","porfido","poroso","porpora","porre","portata","posa","positivo","possesso","postulato","potassio","potere","pranzo","prassi","pratica","precluso","predica","prefisso","pregiato","prelievo","premere","prenotare","preparato","presenza","pretesto","prevalso","prima","principe","privato","problema","procura","produrre","profumo","progetto","prolunga","promessa","pronome","proposta","proroga","proteso","prova","prudente","prugna","prurito","psiche","pubblico","pudica","pugilato","pugno","pulce","pulito","pulsante","puntare","pupazzo","pupilla","puro","quadro","qualcosa","quasi","querela","quota","raccolto","raddoppio","radicale","radunato","raffica","ragazzo","ragione","ragno","ramarro","ramingo","ramo","randagio","rantolare","rapato","rapina","rappreso","rasatura","raschiato","rasente","rassegna","rastrello","rata","ravveduto","reale","recepire","recinto","recluta","recondito","recupero","reddito","redimere","regalato","registro","regola","regresso","relazione","remare","remoto","renna","replica","reprimere","reputare","resa","residente","responso","restauro","rete","retina","retorica","rettifica","revocato","riassunto","ribadire","ribelle","ribrezzo","ricarica","ricco","ricevere","riciclato","ricordo","ricreduto","ridicolo","ridurre","rifasare","riflesso","riforma","rifugio","rigare","rigettato","righello","rilassato","rilevato","rimanere","rimbalzo","rimedio","rimorchio","rinascita","rincaro","rinforzo","rinnovo","rinomato","rinsavito","rintocco","rinuncia","rinvenire","riparato","ripetuto","ripieno","riportare","ripresa","ripulire","risata","rischio","riserva","risibile","riso","rispetto","ristoro","risultato","risvolto","ritardo","ritegno","ritmico","ritrovo","riunione","riva","riverso","rivincita","rivolto","rizoma","roba","robotico","robusto","roccia","roco","rodaggio","rodere","roditore","rogito","rollio","romantico","rompere","ronzio","rosolare","rospo","rotante","rotondo","rotula","rovescio","rubizzo","rubrica","ruga","rullino","rumine","rumoroso","ruolo","rupe","russare","rustico","sabato","sabbiare","sabotato","sagoma","salasso","saldatura","salgemma","salivare","salmone","salone","saltare","saluto","salvo","sapere","sapido","saporito","saraceno","sarcasmo","sarto","sassoso","satellite","satira","satollo","saturno","savana","savio","saziato","sbadiglio","sbalzo","sbancato","sbarra","sbattere","sbavare","sbendare","sbirciare","sbloccato","sbocciato","sbrinare","sbruffone","sbuffare","scabroso","scadenza","scala","scambiare","scandalo","scapola","scarso","scatenare","scavato","scelto","scenico","scettro","scheda","schiena","sciarpa","scienza","scindere","scippo","sciroppo","scivolo","sclerare","scodella","scolpito","scomparto","sconforto","scoprire","scorta","scossone","scozzese","scriba","scrollare","scrutinio","scuderia","scultore","scuola","scuro","scusare","sdebitare","sdoganare","seccatura","secondo","sedano","seggiola","segnalato","segregato","seguito","selciato","selettivo","sella","selvaggio","semaforo","sembrare","seme","seminato","sempre","senso","sentire","sepolto","sequenza","serata","serbato","sereno","serio","serpente","serraglio","servire","sestina","setola","settimana","sfacelo","sfaldare","sfamato","sfarzoso","sfaticato","sfera","sfida","sfilato","sfinge","sfocato","sfoderare","sfogo","sfoltire","sforzato","sfratto","sfruttato","sfuggito","sfumare","sfuso","sgabello","sgarbato","sgonfiare","sgorbio","sgrassato","sguardo","sibilo","siccome","sierra","sigla","signore","silenzio","sillaba","simbolo","simpatico","simulato","sinfonia","singolo","sinistro","sino","sintesi","sinusoide","sipario","sisma","sistole","situato","slitta","slogatura","sloveno","smarrito","smemorato","smentito","smeraldo","smilzo","smontare","smottato","smussato","snellire","snervato","snodo","sobbalzo","sobrio","soccorso","sociale","sodale","soffitto","sogno","soldato","solenne","solido","sollazzo","solo","solubile","solvente","somatico","somma","sonda","sonetto","sonnifero","sopire","soppeso","sopra","sorgere","sorpasso","sorriso","sorso","sorteggio","sorvolato","sospiro","sosta","sottile","spada","spalla","spargere","spatola","spavento","spazzola","specie","spedire","spegnere","spelatura","speranza","spessore","spettrale","spezzato","spia","spigoloso","spillato","spinoso","spirale","splendido","sportivo","sposo","spranga","sprecare","spronato","spruzzo","spuntino","squillo","sradicare","srotolato","stabile","stacco","staffa","stagnare","stampato","stantio","starnuto","stasera","statuto","stelo","steppa","sterzo","stiletto","stima","stirpe","stivale","stizzoso","stonato","storico","strappo","stregato","stridulo","strozzare","strutto","stuccare","stufo","stupendo","subentro","succoso","sudore","suggerito","sugo","sultano","suonare","superbo","supporto","surgelato","surrogato","sussurro","sutura","svagare","svedese","sveglio","svelare","svenuto","svezia","sviluppo","svista","svizzera","svolta","svuotare","tabacco","tabulato","tacciare","taciturno","tale","talismano","tampone","tannino","tara","tardivo","targato","tariffa","tarpare","tartaruga","tasto","tattico","taverna","tavolata","tazza","teca","tecnico","telefono","temerario","tempo","temuto","tendone","tenero","tensione","tentacolo","teorema","terme","terrazzo","terzetto","tesi","tesserato","testato","tetro","tettoia","tifare","tigella","timbro","tinto","tipico","tipografo","tiraggio","tiro","titanio","titolo","titubante","tizio","tizzone","toccare","tollerare","tolto","tombola","tomo","tonfo","tonsilla","topazio","topologia","toppa","torba","tornare","torrone","tortora","toscano","tossire","tostatura","totano","trabocco","trachea","trafila","tragedia","tralcio","tramonto","transito","trapano","trarre","trasloco","trattato","trave","treccia","tremolio","trespolo","tributo","tricheco","trifoglio","trillo","trincea","trio","tristezza","triturato","trivella","tromba","trono","troppo","trottola","trovare","truccato","tubatura","tuffato","tulipano","tumulto","tunisia","turbare","turchino","tuta","tutela","ubicato","uccello","uccisore","udire","uditivo","uffa","ufficio","uguale","ulisse","ultimato","umano","umile","umorismo","uncinetto","ungere","ungherese","unicorno","unificato","unisono","unitario","unte","uovo","upupa","uragano","urgenza","urlo","usanza","usato","uscito","usignolo","usuraio","utensile","utilizzo","utopia","vacante","vaccinato","vagabondo","vagliato","valanga","valgo","valico","valletta","valoroso","valutare","valvola","vampata","vangare","vanitoso","vano","vantaggio","vanvera","vapore","varano","varcato","variante","vasca","vedetta","vedova","veduto","vegetale","veicolo","velcro","velina","velluto","veloce","venato","vendemmia","vento","verace","verbale","vergogna","verifica","vero","verruca","verticale","vescica","vessillo","vestale","veterano","vetrina","vetusto","viandante","vibrante","vicenda","vichingo","vicinanza","vidimare","vigilia","vigneto","vigore","vile","villano","vimini","vincitore","viola","vipera","virgola","virologo","virulento","viscoso","visione","vispo","vissuto","visura","vita","vitello","vittima","vivanda","vivido","viziare","voce","voga","volatile","volere","volpe","voragine","vulcano","zampogna","zanna","zappato","zattera","zavorra","zefiro","zelante","zelo","zenzero","zerbino","zibetto","zinco","zircone","zitto","zolla","zotico","zucchero","zufolo","zulu","zuppa"],JAPANESE:["あいこくしん","あいさつ","あいだ","あおぞら","あかちゃん","あきる","あけがた","あける","あこがれる","あさい","あさひ","あしあと","あじわう","あずかる","あずき","あそぶ","あたえる","あたためる","あたりまえ","あたる","あつい","あつかう","あっしゅく","あつまり","あつめる","あてな","あてはまる","あひる","あぶら","あぶる","あふれる","あまい","あまど","あまやかす","あまり","あみもの","あめりか","あやまる","あゆむ","あらいぐま","あらし","あらすじ","あらためる","あらゆる","あらわす","ありがとう","あわせる","あわてる","あんい","あんがい","あんこ","あんぜん","あんてい","あんない","あんまり","いいだす","いおん","いがい","いがく","いきおい","いきなり","いきもの","いきる","いくじ","いくぶん","いけばな","いけん","いこう","いこく","いこつ","いさましい","いさん","いしき","いじゅう","いじょう","いじわる","いずみ","いずれ","いせい","いせえび","いせかい","いせき","いぜん","いそうろう","いそがしい","いだい","いだく","いたずら","いたみ","いたりあ","いちおう","いちじ","いちど","いちば","いちぶ","いちりゅう","いつか","いっしゅん","いっせい","いっそう","いったん","いっち","いってい","いっぽう","いてざ","いてん","いどう","いとこ","いない","いなか","いねむり","いのち","いのる","いはつ","いばる","いはん","いびき","いひん","いふく","いへん","いほう","いみん","いもうと","いもたれ","いもり","いやがる","いやす","いよかん","いよく","いらい","いらすと","いりぐち","いりょう","いれい","いれもの","いれる","いろえんぴつ","いわい","いわう","いわかん","いわば","いわゆる","いんげんまめ","いんさつ","いんしょう","いんよう","うえき","うえる","うおざ","うがい","うかぶ","うかべる","うきわ","うくらいな","うくれれ","うけたまわる","うけつけ","うけとる","うけもつ","うける","うごかす","うごく","うこん","うさぎ","うしなう","うしろがみ","うすい","うすぎ","うすぐらい","うすめる","うせつ","うちあわせ","うちがわ","うちき","うちゅう","うっかり","うつくしい","うったえる","うつる","うどん","うなぎ","うなじ","うなずく","うなる","うねる","うのう","うぶげ","うぶごえ","うまれる","うめる","うもう","うやまう","うよく","うらがえす","うらぐち","うらない","うりあげ","うりきれ","うるさい","うれしい","うれゆき","うれる","うろこ","うわき","うわさ","うんこう","うんちん","うんてん","うんどう","えいえん","えいが","えいきょう","えいご","えいせい","えいぶん","えいよう","えいわ","えおり","えがお","えがく","えきたい","えくせる","えしゃく","えすて","えつらん","えのぐ","えほうまき","えほん","えまき","えもじ","えもの","えらい","えらぶ","えりあ","えんえん","えんかい","えんぎ","えんげき","えんしゅう","えんぜつ","えんそく","えんちょう","えんとつ","おいかける","おいこす","おいしい","おいつく","おうえん","おうさま","おうじ","おうせつ","おうたい","おうふく","おうべい","おうよう","おえる","おおい","おおう","おおどおり","おおや","おおよそ","おかえり","おかず","おがむ","おかわり","おぎなう","おきる","おくさま","おくじょう","おくりがな","おくる","おくれる","おこす","おこなう","おこる","おさえる","おさない","おさめる","おしいれ","おしえる","おじぎ","おじさん","おしゃれ","おそらく","おそわる","おたがい","おたく","おだやか","おちつく","おっと","おつり","おでかけ","おとしもの","おとなしい","おどり","おどろかす","おばさん","おまいり","おめでとう","おもいで","おもう","おもたい","おもちゃ","おやつ","おやゆび","およぼす","おらんだ","おろす","おんがく","おんけい","おんしゃ","おんせん","おんだん","おんちゅう","おんどけい","かあつ","かいが","がいき","がいけん","がいこう","かいさつ","かいしゃ","かいすいよく","かいぜん","かいぞうど","かいつう","かいてん","かいとう","かいふく","がいへき","かいほう","かいよう","がいらい","かいわ","かえる","かおり","かかえる","かがく","かがし","かがみ","かくご","かくとく","かざる","がぞう","かたい","かたち","がちょう","がっきゅう","がっこう","がっさん","がっしょう","かなざわし","かのう","がはく","かぶか","かほう","かほご","かまう","かまぼこ","かめれおん","かゆい","かようび","からい","かるい","かろう","かわく","かわら","がんか","かんけい","かんこう","かんしゃ","かんそう","かんたん","かんち","がんばる","きあい","きあつ","きいろ","ぎいん","きうい","きうん","きえる","きおう","きおく","きおち","きおん","きかい","きかく","きかんしゃ","ききて","きくばり","きくらげ","きけんせい","きこう","きこえる","きこく","きさい","きさく","きさま","きさらぎ","ぎじかがく","ぎしき","ぎじたいけん","ぎじにってい","ぎじゅつしゃ","きすう","きせい","きせき","きせつ","きそう","きぞく","きぞん","きたえる","きちょう","きつえん","ぎっちり","きつつき","きつね","きてい","きどう","きどく","きない","きなが","きなこ","きぬごし","きねん","きのう","きのした","きはく","きびしい","きひん","きふく","きぶん","きぼう","きほん","きまる","きみつ","きむずかしい","きめる","きもだめし","きもち","きもの","きゃく","きやく","ぎゅうにく","きよう","きょうりゅう","きらい","きらく","きりん","きれい","きれつ","きろく","ぎろん","きわめる","ぎんいろ","きんかくじ","きんじょ","きんようび","ぐあい","くいず","くうかん","くうき","くうぐん","くうこう","ぐうせい","くうそう","ぐうたら","くうふく","くうぼ","くかん","くきょう","くげん","ぐこう","くさい","くさき","くさばな","くさる","くしゃみ","くしょう","くすのき","くすりゆび","くせげ","くせん","ぐたいてき","くださる","くたびれる","くちこみ","くちさき","くつした","ぐっすり","くつろぐ","くとうてん","くどく","くなん","くねくね","くのう","くふう","くみあわせ","くみたてる","くめる","くやくしょ","くらす","くらべる","くるま","くれる","くろう","くわしい","ぐんかん","ぐんしょく","ぐんたい","ぐんて","けあな","けいかく","けいけん","けいこ","けいさつ","げいじゅつ","けいたい","げいのうじん","けいれき","けいろ","けおとす","けおりもの","げきか","げきげん","げきだん","げきちん","げきとつ","げきは","げきやく","げこう","げこくじょう","げざい","けさき","げざん","けしき","けしごむ","けしょう","げすと","けたば","けちゃっぷ","けちらす","けつあつ","けつい","けつえき","けっこん","けつじょ","けっせき","けってい","けつまつ","げつようび","げつれい","けつろん","げどく","けとばす","けとる","けなげ","けなす","けなみ","けぬき","げねつ","けねん","けはい","げひん","けぶかい","げぼく","けまり","けみかる","けむし","けむり","けもの","けらい","けろけろ","けわしい","けんい","けんえつ","けんお","けんか","げんき","けんげん","けんこう","けんさく","けんしゅう","けんすう","げんそう","けんちく","けんてい","けんとう","けんない","けんにん","げんぶつ","けんま","けんみん","けんめい","けんらん","けんり","こあくま","こいぬ","こいびと","ごうい","こうえん","こうおん","こうかん","ごうきゅう","ごうけい","こうこう","こうさい","こうじ","こうすい","ごうせい","こうそく","こうたい","こうちゃ","こうつう","こうてい","こうどう","こうない","こうはい","ごうほう","ごうまん","こうもく","こうりつ","こえる","こおり","ごかい","ごがつ","ごかん","こくご","こくさい","こくとう","こくない","こくはく","こぐま","こけい","こける","ここのか","こころ","こさめ","こしつ","こすう","こせい","こせき","こぜん","こそだて","こたい","こたえる","こたつ","こちょう","こっか","こつこつ","こつばん","こつぶ","こてい","こてん","ことがら","ことし","ことば","ことり","こなごな","こねこね","このまま","このみ","このよ","ごはん","こひつじ","こふう","こふん","こぼれる","ごまあぶら","こまかい","ごますり","こまつな","こまる","こむぎこ","こもじ","こもち","こもの","こもん","こやく","こやま","こゆう","こゆび","こよい","こよう","こりる","これくしょん","ころっけ","こわもて","こわれる","こんいん","こんかい","こんき","こんしゅう","こんすい","こんだて","こんとん","こんなん","こんびに","こんぽん","こんまけ","こんや","こんれい","こんわく","ざいえき","さいかい","さいきん","ざいげん","ざいこ","さいしょ","さいせい","ざいたく","ざいちゅう","さいてき","ざいりょう","さうな","さかいし","さがす","さかな","さかみち","さがる","さぎょう","さくし","さくひん","さくら","さこく","さこつ","さずかる","ざせき","さたん","さつえい","ざつおん","ざっか","ざつがく","さっきょく","ざっし","さつじん","ざっそう","さつたば","さつまいも","さてい","さといも","さとう","さとおや","さとし","さとる","さのう","さばく","さびしい","さべつ","さほう","さほど","さます","さみしい","さみだれ","さむけ","さめる","さやえんどう","さゆう","さよう","さよく","さらだ","ざるそば","さわやか","さわる","さんいん","さんか","さんきゃく","さんこう","さんさい","ざんしょ","さんすう","さんせい","さんそ","さんち","さんま","さんみ","さんらん","しあい","しあげ","しあさって","しあわせ","しいく","しいん","しうち","しえい","しおけ","しかい","しかく","じかん","しごと","しすう","じだい","したうけ","したぎ","したて","したみ","しちょう","しちりん","しっかり","しつじ","しつもん","してい","してき","してつ","じてん","じどう","しなぎれ","しなもの","しなん","しねま","しねん","しのぐ","しのぶ","しはい","しばかり","しはつ","しはらい","しはん","しひょう","しふく","じぶん","しへい","しほう","しほん","しまう","しまる","しみん","しむける","じむしょ","しめい","しめる","しもん","しゃいん","しゃうん","しゃおん","じゃがいも","しやくしょ","しゃくほう","しゃけん","しゃこ","しゃざい","しゃしん","しゃせん","しゃそう","しゃたい","しゃちょう","しゃっきん","じゃま","しゃりん","しゃれい","じゆう","じゅうしょ","しゅくはく","じゅしん","しゅっせき","しゅみ","しゅらば","じゅんばん","しょうかい","しょくたく","しょっけん","しょどう","しょもつ","しらせる","しらべる","しんか","しんこう","じんじゃ","しんせいじ","しんちく","しんりん","すあげ","すあし","すあな","ずあん","すいえい","すいか","すいとう","ずいぶん","すいようび","すうがく","すうじつ","すうせん","すおどり","すきま","すくう","すくない","すける","すごい","すこし","ずさん","すずしい","すすむ","すすめる","すっかり","ずっしり","ずっと","すてき","すてる","すねる","すのこ","すはだ","すばらしい","ずひょう","ずぶぬれ","すぶり","すふれ","すべて","すべる","ずほう","すぼん","すまい","すめし","すもう","すやき","すらすら","するめ","すれちがう","すろっと","すわる","すんぜん","すんぽう","せあぶら","せいかつ","せいげん","せいじ","せいよう","せおう","せかいかん","せきにん","せきむ","せきゆ","せきらんうん","せけん","せこう","せすじ","せたい","せたけ","せっかく","せっきゃく","ぜっく","せっけん","せっこつ","せっさたくま","せつぞく","せつだん","せつでん","せっぱん","せつび","せつぶん","せつめい","せつりつ","せなか","せのび","せはば","せびろ","せぼね","せまい","せまる","せめる","せもたれ","せりふ","ぜんあく","せんい","せんえい","せんか","せんきょ","せんく","せんげん","ぜんご","せんさい","せんしゅ","せんすい","せんせい","せんぞ","せんたく","せんちょう","せんてい","せんとう","せんぬき","せんねん","せんぱい","ぜんぶ","ぜんぽう","せんむ","せんめんじょ","せんもん","せんやく","せんゆう","せんよう","ぜんら","ぜんりゃく","せんれい","せんろ","そあく","そいとげる","そいね","そうがんきょう","そうき","そうご","そうしん","そうだん","そうなん","そうび","そうめん","そうり","そえもの","そえん","そがい","そげき","そこう","そこそこ","そざい","そしな","そせい","そせん","そそぐ","そだてる","そつう","そつえん","そっかん","そつぎょう","そっけつ","そっこう","そっせん","そっと","そとがわ","そとづら","そなえる","そなた","そふぼ","そぼく","そぼろ","そまつ","そまる","そむく","そむりえ","そめる","そもそも","そよかぜ","そらまめ","そろう","そんかい","そんけい","そんざい","そんしつ","そんぞく","そんちょう","ぞんび","ぞんぶん","そんみん","たあい","たいいん","たいうん","たいえき","たいおう","だいがく","たいき","たいぐう","たいけん","たいこ","たいざい","だいじょうぶ","だいすき","たいせつ","たいそう","だいたい","たいちょう","たいてい","だいどころ","たいない","たいねつ","たいのう","たいはん","だいひょう","たいふう","たいへん","たいほ","たいまつばな","たいみんぐ","たいむ","たいめん","たいやき","たいよう","たいら","たいりょく","たいる","たいわん","たうえ","たえる","たおす","たおる","たおれる","たかい","たかね","たきび","たくさん","たこく","たこやき","たさい","たしざん","だじゃれ","たすける","たずさわる","たそがれ","たたかう","たたく","ただしい","たたみ","たちばな","だっかい","だっきゃく","だっこ","だっしゅつ","だったい","たてる","たとえる","たなばた","たにん","たぬき","たのしみ","たはつ","たぶん","たべる","たぼう","たまご","たまる","だむる","ためいき","ためす","ためる","たもつ","たやすい","たよる","たらす","たりきほんがん","たりょう","たりる","たると","たれる","たれんと","たろっと","たわむれる","だんあつ","たんい","たんおん","たんか","たんき","たんけん","たんご","たんさん","たんじょうび","だんせい","たんそく","たんたい","だんち","たんてい","たんとう","だんな","たんにん","だんねつ","たんのう","たんぴん","だんぼう","たんまつ","たんめい","だんれつ","だんろ","だんわ","ちあい","ちあん","ちいき","ちいさい","ちえん","ちかい","ちから","ちきゅう","ちきん","ちけいず","ちけん","ちこく","ちさい","ちしき","ちしりょう","ちせい","ちそう","ちたい","ちたん","ちちおや","ちつじょ","ちてき","ちてん","ちぬき","ちぬり","ちのう","ちひょう","ちへいせん","ちほう","ちまた","ちみつ","ちみどろ","ちめいど","ちゃんこなべ","ちゅうい","ちゆりょく","ちょうし","ちょさくけん","ちらし","ちらみ","ちりがみ","ちりょう","ちるど","ちわわ","ちんたい","ちんもく","ついか","ついたち","つうか","つうじょう","つうはん","つうわ","つかう","つかれる","つくね","つくる","つけね","つける","つごう","つたえる","つづく","つつじ","つつむ","つとめる","つながる","つなみ","つねづね","つのる","つぶす","つまらない","つまる","つみき","つめたい","つもり","つもる","つよい","つるぼ","つるみく","つわもの","つわり","てあし","てあて","てあみ","ていおん","ていか","ていき","ていけい","ていこく","ていさつ","ていし","ていせい","ていたい","ていど","ていねい","ていひょう","ていへん","ていぼう","てうち","ておくれ","てきとう","てくび","でこぼこ","てさぎょう","てさげ","てすり","てそう","てちがい","てちょう","てつがく","てつづき","でっぱ","てつぼう","てつや","でぬかえ","てぬき","てぬぐい","てのひら","てはい","てぶくろ","てふだ","てほどき","てほん","てまえ","てまきずし","てみじか","てみやげ","てらす","てれび","てわけ","てわたし","でんあつ","てんいん","てんかい","てんき","てんぐ","てんけん","てんごく","てんさい","てんし","てんすう","でんち","てんてき","てんとう","てんない","てんぷら","てんぼうだい","てんめつ","てんらんかい","でんりょく","でんわ","どあい","といれ","どうかん","とうきゅう","どうぐ","とうし","とうむぎ","とおい","とおか","とおく","とおす","とおる","とかい","とかす","ときおり","ときどき","とくい","とくしゅう","とくてん","とくに","とくべつ","とけい","とける","とこや","とさか","としょかん","とそう","とたん","とちゅう","とっきゅう","とっくん","とつぜん","とつにゅう","とどける","ととのえる","とない","となえる","となり","とのさま","とばす","どぶがわ","とほう","とまる","とめる","ともだち","ともる","どようび","とらえる","とんかつ","どんぶり","ないかく","ないこう","ないしょ","ないす","ないせん","ないそう","なおす","ながい","なくす","なげる","なこうど","なさけ","なたでここ","なっとう","なつやすみ","ななおし","なにごと","なにもの","なにわ","なのか","なふだ","なまいき","なまえ","なまみ","なみだ","なめらか","なめる","なやむ","ならう","ならび","ならぶ","なれる","なわとび","なわばり","にあう","にいがた","にうけ","におい","にかい","にがて","にきび","にくしみ","にくまん","にげる","にさんかたんそ","にしき","にせもの","にちじょう","にちようび","にっか","にっき","にっけい","にっこう","にっさん","にっしょく","にっすう","にっせき","にってい","になう","にほん","にまめ","にもつ","にやり","にゅういん","にりんしゃ","にわとり","にんい","にんか","にんき","にんげん","にんしき","にんずう","にんそう","にんたい","にんち","にんてい","にんにく","にんぷ","にんまり","にんむ","にんめい","にんよう","ぬいくぎ","ぬかす","ぬぐいとる","ぬぐう","ぬくもり","ぬすむ","ぬまえび","ぬめり","ぬらす","ぬんちゃく","ねあげ","ねいき","ねいる","ねいろ","ねぐせ","ねくたい","ねくら","ねこぜ","ねこむ","ねさげ","ねすごす","ねそべる","ねだん","ねつい","ねっしん","ねつぞう","ねったいぎょ","ねぶそく","ねふだ","ねぼう","ねほりはほり","ねまき","ねまわし","ねみみ","ねむい","ねむたい","ねもと","ねらう","ねわざ","ねんいり","ねんおし","ねんかん","ねんきん","ねんぐ","ねんざ","ねんし","ねんちゃく","ねんど","ねんぴ","ねんぶつ","ねんまつ","ねんりょう","ねんれい","のいず","のおづま","のがす","のきなみ","のこぎり","のこす","のこる","のせる","のぞく","のぞむ","のたまう","のちほど","のっく","のばす","のはら","のべる","のぼる","のみもの","のやま","のらいぬ","のらねこ","のりもの","のりゆき","のれん","のんき","ばあい","はあく","ばあさん","ばいか","ばいく","はいけん","はいご","はいしん","はいすい","はいせん","はいそう","はいち","ばいばい","はいれつ","はえる","はおる","はかい","ばかり","はかる","はくしゅ","はけん","はこぶ","はさみ","はさん","はしご","ばしょ","はしる","はせる","ぱそこん","はそん","はたん","はちみつ","はつおん","はっかく","はづき","はっきり","はっくつ","はっけん","はっこう","はっさん","はっしん","はったつ","はっちゅう","はってん","はっぴょう","はっぽう","はなす","はなび","はにかむ","はぶらし","はみがき","はむかう","はめつ","はやい","はやし","はらう","はろうぃん","はわい","はんい","はんえい","はんおん","はんかく","はんきょう","ばんぐみ","はんこ","はんしゃ","はんすう","はんだん","ぱんち","ぱんつ","はんてい","はんとし","はんのう","はんぱ","はんぶん","はんぺん","はんぼうき","はんめい","はんらん","はんろん","ひいき","ひうん","ひえる","ひかく","ひかり","ひかる","ひかん","ひくい","ひけつ","ひこうき","ひこく","ひさい","ひさしぶり","ひさん","びじゅつかん","ひしょ","ひそか","ひそむ","ひたむき","ひだり","ひたる","ひつぎ","ひっこし","ひっし","ひつじゅひん","ひっす","ひつぜん","ぴったり","ぴっちり","ひつよう","ひてい","ひとごみ","ひなまつり","ひなん","ひねる","ひはん","ひびく","ひひょう","ひほう","ひまわり","ひまん","ひみつ","ひめい","ひめじし","ひやけ","ひやす","ひよう","びょうき","ひらがな","ひらく","ひりつ","ひりょう","ひるま","ひるやすみ","ひれい","ひろい","ひろう","ひろき","ひろゆき","ひんかく","ひんけつ","ひんこん","ひんしゅ","ひんそう","ぴんち","ひんぱん","びんぼう","ふあん","ふいうち","ふうけい","ふうせん","ぷうたろう","ふうとう","ふうふ","ふえる","ふおん","ふかい","ふきん","ふくざつ","ふくぶくろ","ふこう","ふさい","ふしぎ","ふじみ","ふすま","ふせい","ふせぐ","ふそく","ぶたにく","ふたん","ふちょう","ふつう","ふつか","ふっかつ","ふっき","ふっこく","ぶどう","ふとる","ふとん","ふのう","ふはい","ふひょう","ふへん","ふまん","ふみん","ふめつ","ふめん","ふよう","ふりこ","ふりる","ふるい","ふんいき","ぶんがく","ぶんぐ","ふんしつ","ぶんせき","ふんそう","ぶんぽう","へいあん","へいおん","へいがい","へいき","へいげん","へいこう","へいさ","へいしゃ","へいせつ","へいそ","へいたく","へいてん","へいねつ","へいわ","へきが","へこむ","べにいろ","べにしょうが","へらす","へんかん","べんきょう","べんごし","へんさい","へんたい","べんり","ほあん","ほいく","ぼうぎょ","ほうこく","ほうそう","ほうほう","ほうもん","ほうりつ","ほえる","ほおん","ほかん","ほきょう","ぼきん","ほくろ","ほけつ","ほけん","ほこう","ほこる","ほしい","ほしつ","ほしゅ","ほしょう","ほせい","ほそい","ほそく","ほたて","ほたる","ぽちぶくろ","ほっきょく","ほっさ","ほったん","ほとんど","ほめる","ほんい","ほんき","ほんけ","ほんしつ","ほんやく","まいにち","まかい","まかせる","まがる","まける","まこと","まさつ","まじめ","ますく","まぜる","まつり","まとめ","まなぶ","まぬけ","まねく","まほう","まもる","まゆげ","まよう","まろやか","まわす","まわり","まわる","まんが","まんきつ","まんぞく","まんなか","みいら","みうち","みえる","みがく","みかた","みかん","みけん","みこん","みじかい","みすい","みすえる","みせる","みっか","みつかる","みつける","みてい","みとめる","みなと","みなみかさい","みねらる","みのう","みのがす","みほん","みもと","みやげ","みらい","みりょく","みわく","みんか","みんぞく","むいか","むえき","むえん","むかい","むかう","むかえ","むかし","むぎちゃ","むける","むげん","むさぼる","むしあつい","むしば","むじゅん","むしろ","むすう","むすこ","むすぶ","むすめ","むせる","むせん","むちゅう","むなしい","むのう","むやみ","むよう","むらさき","むりょう","むろん","めいあん","めいうん","めいえん","めいかく","めいきょく","めいさい","めいし","めいそう","めいぶつ","めいれい","めいわく","めぐまれる","めざす","めした","めずらしい","めだつ","めまい","めやす","めんきょ","めんせき","めんどう","もうしあげる","もうどうけん","もえる","もくし","もくてき","もくようび","もちろん","もどる","もらう","もんく","もんだい","やおや","やける","やさい","やさしい","やすい","やすたろう","やすみ","やせる","やそう","やたい","やちん","やっと","やっぱり","やぶる","やめる","ややこしい","やよい","やわらかい","ゆうき","ゆうびんきょく","ゆうべ","ゆうめい","ゆけつ","ゆしゅつ","ゆせん","ゆそう","ゆたか","ゆちゃく","ゆでる","ゆにゅう","ゆびわ","ゆらい","ゆれる","ようい","ようか","ようきゅう","ようじ","ようす","ようちえん","よかぜ","よかん","よきん","よくせい","よくぼう","よけい","よごれる","よさん","よしゅう","よそう","よそく","よっか","よてい","よどがわく","よねつ","よやく","よゆう","よろこぶ","よろしい","らいう","らくがき","らくご","らくさつ","らくだ","らしんばん","らせん","らぞく","らたい","らっか","られつ","りえき","りかい","りきさく","りきせつ","りくぐん","りくつ","りけん","りこう","りせい","りそう","りそく","りてん","りねん","りゆう","りゅうがく","りよう","りょうり","りょかん","りょくちゃ","りょこう","りりく","りれき","りろん","りんご","るいけい","るいさい","るいじ","るいせき","るすばん","るりがわら","れいかん","れいぎ","れいせい","れいぞうこ","れいとう","れいぼう","れきし","れきだい","れんあい","れんけい","れんこん","れんさい","れんしゅう","れんぞく","れんらく","ろうか","ろうご","ろうじん","ろうそく","ろくが","ろこつ","ろじうら","ろしゅつ","ろせん","ろてん","ろめん","ろれつ","ろんぎ","ろんぱ","ろんぶん","ろんり","わかす","わかめ","わかやま","わかれる","わしつ","わじまし","わすれもの","わらう","われる"],SPANISH:["ábaco","abdomen","abeja","abierto","abogado","abono","aborto","abrazo","abrir","abuelo","abuso","acabar","academia","acceso","acción","aceite","acelga","acento","aceptar","ácido","aclarar","acné","acoger","acoso","activo","acto","actriz","actuar","acudir","acuerdo","acusar","adicto","admitir","adoptar","adorno","aduana","adulto","aéreo","afectar","afición","afinar","afirmar","ágil","agitar","agonía","agosto","agotar","agregar","agrio","agua","agudo","águila","aguja","ahogo","ahorro","aire","aislar","ajedrez","ajeno","ajuste","alacrán","alambre","alarma","alba","álbum","alcalde","aldea","alegre","alejar","alerta","aleta","alfiler","alga","algodón","aliado","aliento","alivio","alma","almeja","almíbar","altar","alteza","altivo","alto","altura","alumno","alzar","amable","amante","amapola","amargo","amasar","ámbar","ámbito","ameno","amigo","amistad","amor","amparo","amplio","ancho","anciano","ancla","andar","andén","anemia","ángulo","anillo","ánimo","anís","anotar","antena","antiguo","antojo","anual","anular","anuncio","añadir","añejo","año","apagar","aparato","apetito","apio","aplicar","apodo","aporte","apoyo","aprender","aprobar","apuesta","apuro","arado","araña","arar","árbitro","árbol","arbusto","archivo","arco","arder","ardilla","arduo","área","árido","aries","armonía","arnés","aroma","arpa","arpón","arreglo","arroz","arruga","arte","artista","asa","asado","asalto","ascenso","asegurar","aseo","asesor","asiento","asilo","asistir","asno","asombro","áspero","astilla","astro","astuto","asumir","asunto","atajo","ataque","atar","atento","ateo","ático","atleta","átomo","atraer","atroz","atún","audaz","audio","auge","aula","aumento","ausente","autor","aval","avance","avaro","ave","avellana","avena","avestruz","avión","aviso","ayer","ayuda","ayuno","azafrán","azar","azote","azúcar","azufre","azul","baba","babor","bache","bahía","baile","bajar","balanza","balcón","balde","bambú","banco","banda","baño","barba","barco","barniz","barro","báscula","bastón","basura","batalla","batería","batir","batuta","baúl","bazar","bebé","bebida","bello","besar","beso","bestia","bicho","bien","bingo","blanco","bloque","blusa","boa","bobina","bobo","boca","bocina","boda","bodega","boina","bola","bolero","bolsa","bomba","bondad","bonito","bono","bonsái","borde","borrar","bosque","bote","botín","bóveda","bozal","bravo","brazo","brecha","breve","brillo","brinco","brisa","broca","broma","bronce","brote","bruja","brusco","bruto","buceo","bucle","bueno","buey","bufanda","bufón","búho","buitre","bulto","burbuja","burla","burro","buscar","butaca","buzón","caballo","cabeza","cabina","cabra","cacao","cadáver","cadena","caer","café","caída","caimán","caja","cajón","cal","calamar","calcio","caldo","calidad","calle","calma","calor","calvo","cama","cambio","camello","camino","campo","cáncer","candil","canela","canguro","canica","canto","caña","cañón","caoba","caos","capaz","capitán","capote","captar","capucha","cara","carbón","cárcel","careta","carga","cariño","carne","carpeta","carro","carta","casa","casco","casero","caspa","castor","catorce","catre","caudal","causa","cazo","cebolla","ceder","cedro","celda","célebre","celoso","célula","cemento","ceniza","centro","cerca","cerdo","cereza","cero","cerrar","certeza","césped","cetro","chacal","chaleco","champú","chancla","chapa","charla","chico","chiste","chivo","choque","choza","chuleta","chupar","ciclón","ciego","cielo","cien","cierto","cifra","cigarro","cima","cinco","cine","cinta","ciprés","circo","ciruela","cisne","cita","ciudad","clamor","clan","claro","clase","clave","cliente","clima","clínica","cobre","cocción","cochino","cocina","coco","código","codo","cofre","coger","cohete","cojín","cojo","cola","colcha","colegio","colgar","colina","collar","colmo","columna","combate","comer","comida","cómodo","compra","conde","conejo","conga","conocer","consejo","contar","copa","copia","corazón","corbata","corcho","cordón","corona","correr","coser","cosmos","costa","cráneo","cráter","crear","crecer","creído","crema","cría","crimen","cripta","crisis","cromo","crónica","croqueta","crudo","cruz","cuadro","cuarto","cuatro","cubo","cubrir","cuchara","cuello","cuento","cuerda","cuesta","cueva","cuidar","culebra","culpa","culto","cumbre","cumplir","cuna","cuneta","cuota","cupón","cúpula","curar","curioso","curso","curva","cutis","dama","danza","dar","dardo","dátil","deber","débil","década","decir","dedo","defensa","definir","dejar","delfín","delgado","delito","demora","denso","dental","deporte","derecho","derrota","desayuno","deseo","desfile","desnudo","destino","desvío","detalle","detener","deuda","día","diablo","diadema","diamante","diana","diario","dibujo","dictar","diente","dieta","diez","difícil","digno","dilema","diluir","dinero","directo","dirigir","disco","diseño","disfraz","diva","divino","doble","doce","dolor","domingo","don","donar","dorado","dormir","dorso","dos","dosis","dragón","droga","ducha","duda","duelo","dueño","dulce","dúo","duque","durar","dureza","duro","ébano","ebrio","echar","eco","ecuador","edad","edición","edificio","editor","educar","efecto","eficaz","eje","ejemplo","elefante","elegir","elemento","elevar","elipse","élite","elixir","elogio","eludir","embudo","emitir","emoción","empate","empeño","empleo","empresa","enano","encargo","enchufe","encía","enemigo","enero","enfado","enfermo","engaño","enigma","enlace","enorme","enredo","ensayo","enseñar","entero","entrar","envase","envío","época","equipo","erizo","escala","escena","escolar","escribir","escudo","esencia","esfera","esfuerzo","espada","espejo","espía","esposa","espuma","esquí","estar","este","estilo","estufa","etapa","eterno","ética","etnia","evadir","evaluar","evento","evitar","exacto","examen","exceso","excusa","exento","exigir","exilio","existir","éxito","experto","explicar","exponer","extremo","fábrica","fábula","fachada","fácil","factor","faena","faja","falda","fallo","falso","faltar","fama","familia","famoso","faraón","farmacia","farol","farsa","fase","fatiga","fauna","favor","fax","febrero","fecha","feliz","feo","feria","feroz","fértil","fervor","festín","fiable","fianza","fiar","fibra","ficción","ficha","fideo","fiebre","fiel","fiera","fiesta","figura","fijar","fijo","fila","filete","filial","filtro","fin","finca","fingir","finito","firma","flaco","flauta","flecha","flor","flota","fluir","flujo","flúor","fobia","foca","fogata","fogón","folio","folleto","fondo","forma","forro","fortuna","forzar","fosa","foto","fracaso","frágil","franja","frase","fraude","freír","freno","fresa","frío","frito","fruta","fuego","fuente","fuerza","fuga","fumar","función","funda","furgón","furia","fusil","fútbol","futuro","gacela","gafas","gaita","gajo","gala","galería","gallo","gamba","ganar","gancho","ganga","ganso","garaje","garza","gasolina","gastar","gato","gavilán","gemelo","gemir","gen","género","genio","gente","geranio","gerente","germen","gesto","gigante","gimnasio","girar","giro","glaciar","globo","gloria","gol","golfo","goloso","golpe","goma","gordo","gorila","gorra","gota","goteo","gozar","grada","gráfico","grano","grasa","gratis","grave","grieta","grillo","gripe","gris","grito","grosor","grúa","grueso","grumo","grupo","guante","guapo","guardia","guerra","guía","guiño","guion","guiso","guitarra","gusano","gustar","haber","hábil","hablar","hacer","hacha","hada","hallar","hamaca","harina","haz","hazaña","hebilla","hebra","hecho","helado","helio","hembra","herir","hermano","héroe","hervir","hielo","hierro","hígado","higiene","hijo","himno","historia","hocico","hogar","hoguera","hoja","hombre","hongo","honor","honra","hora","hormiga","horno","hostil","hoyo","hueco","huelga","huerta","hueso","huevo","huida","huir","humano","húmedo","humilde","humo","hundir","huracán","hurto","icono","ideal","idioma","ídolo","iglesia","iglú","igual","ilegal","ilusión","imagen","imán","imitar","impar","imperio","imponer","impulso","incapaz","índice","inerte","infiel","informe","ingenio","inicio","inmenso","inmune","innato","insecto","instante","interés","íntimo","intuir","inútil","invierno","ira","iris","ironía","isla","islote","jabalí","jabón","jamón","jarabe","jardín","jarra","jaula","jazmín","jefe","jeringa","jinete","jornada","joroba","joven","joya","juerga","jueves","juez","jugador","jugo","juguete","juicio","junco","jungla","junio","juntar","júpiter","jurar","justo","juvenil","juzgar","kilo","koala","labio","lacio","lacra","lado","ladrón","lagarto","lágrima","laguna","laico","lamer","lámina","lámpara","lana","lancha","langosta","lanza","lápiz","largo","larva","lástima","lata","látex","latir","laurel","lavar","lazo","leal","lección","leche","lector","leer","legión","legumbre","lejano","lengua","lento","leña","león","leopardo","lesión","letal","letra","leve","leyenda","libertad","libro","licor","líder","lidiar","lienzo","liga","ligero","lima","límite","limón","limpio","lince","lindo","línea","lingote","lino","linterna","líquido","liso","lista","litera","litio","litro","llaga","llama","llanto","llave","llegar","llenar","llevar","llorar","llover","lluvia","lobo","loción","loco","locura","lógica","logro","lombriz","lomo","lonja","lote","lucha","lucir","lugar","lujo","luna","lunes","lupa","lustro","luto","luz","maceta","macho","madera","madre","maduro","maestro","mafia","magia","mago","maíz","maldad","maleta","malla","malo","mamá","mambo","mamut","manco","mando","manejar","manga","maniquí","manjar","mano","manso","manta","mañana","mapa","máquina","mar","marco","marea","marfil","margen","marido","mármol","marrón","martes","marzo","masa","máscara","masivo","matar","materia","matiz","matriz","máximo","mayor","mazorca","mecha","medalla","medio","médula","mejilla","mejor","melena","melón","memoria","menor","mensaje","mente","menú","mercado","merengue","mérito","mes","mesón","meta","meter","método","metro","mezcla","miedo","miel","miembro","miga","mil","milagro","militar","millón","mimo","mina","minero","mínimo","minuto","miope","mirar","misa","miseria","misil","mismo","mitad","mito","mochila","moción","moda","modelo","moho","mojar","molde","moler","molino","momento","momia","monarca","moneda","monja","monto","moño","morada","morder","moreno","morir","morro","morsa","mortal","mosca","mostrar","motivo","mover","móvil","mozo","mucho","mudar","mueble","muela","muerte","muestra","mugre","mujer","mula","muleta","multa","mundo","muñeca","mural","muro","músculo","museo","musgo","música","muslo","nácar","nación","nadar","naipe","naranja","nariz","narrar","nasal","natal","nativo","natural","náusea","naval","nave","navidad","necio","néctar","negar","negocio","negro","neón","nervio","neto","neutro","nevar","nevera","nicho","nido","niebla","nieto","niñez","niño","nítido","nivel","nobleza","noche","nómina","noria","norma","norte","nota","noticia","novato","novela","novio","nube","nuca","núcleo","nudillo","nudo","nuera","nueve","nuez","nulo","número","nutria","oasis","obeso","obispo","objeto","obra","obrero","observar","obtener","obvio","oca","ocaso","océano","ochenta","ocho","ocio","ocre","octavo","octubre","oculto","ocupar","ocurrir","odiar","odio","odisea","oeste","ofensa","oferta","oficio","ofrecer","ogro","oído","oír","ojo","ola","oleada","olfato","olivo","olla","olmo","olor","olvido","ombligo","onda","onza","opaco","opción","ópera","opinar","oponer","optar","óptica","opuesto","oración","orador","oral","órbita","orca","orden","oreja","órgano","orgía","orgullo","oriente","origen","orilla","oro","orquesta","oruga","osadía","oscuro","osezno","oso","ostra","otoño","otro","oveja","óvulo","óxido","oxígeno","oyente","ozono","pacto","padre","paella","página","pago","país","pájaro","palabra","palco","paleta","pálido","palma","paloma","palpar","pan","panal","pánico","pantera","pañuelo","papá","papel","papilla","paquete","parar","parcela","pared","parir","paro","párpado","parque","párrafo","parte","pasar","paseo","pasión","paso","pasta","pata","patio","patria","pausa","pauta","pavo","payaso","peatón","pecado","pecera","pecho","pedal","pedir","pegar","peine","pelar","peldaño","pelea","peligro","pellejo","pelo","peluca","pena","pensar","peñón","peón","peor","pepino","pequeño","pera","percha","perder","pereza","perfil","perico","perla","permiso","perro","persona","pesa","pesca","pésimo","pestaña","pétalo","petróleo","pez","pezuña","picar","pichón","pie","piedra","pierna","pieza","pijama","pilar","piloto","pimienta","pino","pintor","pinza","piña","piojo","pipa","pirata","pisar","piscina","piso","pista","pitón","pizca","placa","plan","plata","playa","plaza","pleito","pleno","plomo","pluma","plural","pobre","poco","poder","podio","poema","poesía","poeta","polen","policía","pollo","polvo","pomada","pomelo","pomo","pompa","poner","porción","portal","posada","poseer","posible","poste","potencia","potro","pozo","prado","precoz","pregunta","premio","prensa","preso","previo","primo","príncipe","prisión","privar","proa","probar","proceso","producto","proeza","profesor","programa","prole","promesa","pronto","propio","próximo","prueba","público","puchero","pudor","pueblo","puerta","puesto","pulga","pulir","pulmón","pulpo","pulso","puma","punto","puñal","puño","pupa","pupila","puré","quedar","queja","quemar","querer","queso","quieto","química","quince","quitar","rábano","rabia","rabo","ración","radical","raíz","rama","rampa","rancho","rango","rapaz","rápido","rapto","rasgo","raspa","rato","rayo","raza","razón","reacción","realidad","rebaño","rebote","recaer","receta","rechazo","recoger","recreo","recto","recurso","red","redondo","reducir","reflejo","reforma","refrán","refugio","regalo","regir","regla","regreso","rehén","reino","reír","reja","relato","relevo","relieve","relleno","reloj","remar","remedio","remo","rencor","rendir","renta","reparto","repetir","reposo","reptil","res","rescate","resina","respeto","resto","resumen","retiro","retorno","retrato","reunir","revés","revista","rey","rezar","rico","riego","rienda","riesgo","rifa","rígido","rigor","rincón","riñón","río","riqueza","risa","ritmo","rito","rizo","roble","roce","rociar","rodar","rodeo","rodilla","roer","rojizo","rojo","romero","romper","ron","ronco","ronda","ropa","ropero","rosa","rosca","rostro","rotar","rubí","rubor","rudo","rueda","rugir","ruido","ruina","ruleta","rulo","rumbo","rumor","ruptura","ruta","rutina","sábado","saber","sabio","sable","sacar","sagaz","sagrado","sala","saldo","salero","salir","salmón","salón","salsa","salto","salud","salvar","samba","sanción","sandía","sanear","sangre","sanidad","sano","santo","sapo","saque","sardina","sartén","sastre","satán","sauna","saxofón","sección","seco","secreto","secta","sed","seguir","seis","sello","selva","semana","semilla","senda","sensor","señal","señor","separar","sepia","sequía","ser","serie","sermón","servir","sesenta","sesión","seta","setenta","severo","sexo","sexto","sidra","siesta","siete","siglo","signo","sílaba","silbar","silencio","silla","símbolo","simio","sirena","sistema","sitio","situar","sobre","socio","sodio","sol","solapa","soldado","soledad","sólido","soltar","solución","sombra","sondeo","sonido","sonoro","sonrisa","sopa","soplar","soporte","sordo","sorpresa","sorteo","sostén","sótano","suave","subir","suceso","sudor","suegra","suelo","sueño","suerte","sufrir","sujeto","sultán","sumar","superar","suplir","suponer","supremo","sur","surco","sureño","surgir","susto","sutil","tabaco","tabique","tabla","tabú","taco","tacto","tajo","talar","talco","talento","talla","talón","tamaño","tambor","tango","tanque","tapa","tapete","tapia","tapón","taquilla","tarde","tarea","tarifa","tarjeta","tarot","tarro","tarta","tatuaje","tauro","taza","tazón","teatro","techo","tecla","técnica","tejado","tejer","tejido","tela","teléfono","tema","temor","templo","tenaz","tender","tener","tenis","tenso","teoría","terapia","terco","término","ternura","terror","tesis","tesoro","testigo","tetera","texto","tez","tibio","tiburón","tiempo","tienda","tierra","tieso","tigre","tijera","tilde","timbre","tímido","timo","tinta","tío","típico","tipo","tira","tirón","titán","títere","título","tiza","toalla","tobillo","tocar","tocino","todo","toga","toldo","tomar","tono","tonto","topar","tope","toque","tórax","torero","tormenta","torneo","toro","torpedo","torre","torso","tortuga","tos","tosco","toser","tóxico","trabajo","tractor","traer","tráfico","trago","traje","tramo","trance","trato","trauma","trazar","trébol","tregua","treinta","tren","trepar","tres","tribu","trigo","tripa","triste","triunfo","trofeo","trompa","tronco","tropa","trote","trozo","truco","trueno","trufa","tubería","tubo","tuerto","tumba","tumor","túnel","túnica","turbina","turismo","turno","tutor","ubicar","úlcera","umbral","unidad","unir","universo","uno","untar","uña","urbano","urbe","urgente","urna","usar","usuario","útil","utopía","uva","vaca","vacío","vacuna","vagar","vago","vaina","vajilla","vale","válido","valle","valor","válvula","vampiro","vara","variar","varón","vaso","vecino","vector","vehículo","veinte","vejez","vela","velero","veloz","vena","vencer","venda","veneno","vengar","venir","venta","venus","ver","verano","verbo","verde","vereda","verja","verso","verter","vía","viaje","vibrar","vicio","víctima","vida","vídeo","vidrio","viejo","viernes","vigor","vil","villa","vinagre","vino","viñedo","violín","viral","virgo","virtud","visor","víspera","vista","vitamina","viudo","vivaz","vivero","vivir","vivo","volcán","volumen","volver","voraz","votar","voto","voz","vuelo","vulgar","yacer","yate","yegua","yema","yerno","yeso","yodo","yoga","yogur","zafiro","zanja","zapato","zarza","zona","zorro","zumo","zurdo"]};const Ne=function(t,r){if(!(this instanceof Ne))return new Ne(t,r);let i,o,n;if(e.isArray(t)&&(r=t,t=null),Buffer.isBuffer(t))n=t;else if(e.isString(t))o=c.nfkd(t);else if(e.isNumber(t))i=t;else if(t)throw new g.InvalidArgument("data","Must be a Buffer, a string or an integer");if(i=i||128,r=r||Ne._getDictionary(o),o&&!r)throw new g.UnknownWordlist(o);if(r=r||Ne.Words.ENGLISH,n&&(o=Ne._entropy2mnemonic(n,r)),o&&!Ne.isValid(o,r))throw new g.InvalidMnemonic(o);if(0!=i%32||128>i)throw new g.InvalidArgument("ENT","Values must be ENT > 128 and ENT % 32 == 0");o=o||Ne._mnemonic(i,r),Object.defineProperty(this,"wordlist",{configurable:!1,value:r}),Object.defineProperty(this,"phrase",{configurable:!1,value:o})};Ne.Words=xe,Ne.isValid=function(e,t){let r;if(e=c.nfkd(e),!(t=t||Ne._getDictionary(e)))return!1;const i=e.split(" ");let o="";for(r=0;r<i.length;r+=1){const e=t.indexOf(i[r]);if(0>e)return!1;o+="00000000000".concat(e.toString(2)).slice(-11)}const n=o.length/33,a=o.slice(-n),s=o.slice(0,o.length-n),u=Buffer.alloc(s.length/8);for(r=0;r<s.length/8;r+=1)u.writeUInt8(parseInt(o.slice(8*r,8*(r+1)),2),r);return Ne._entropyChecksum(u)===a},Ne._belongsToWordlist=function(e,t){const r=c.nfkd(e).split(" ");for(let e=0;e<r.length;e+=1){if(0>t.indexOf(r[e]))return!1}return!0},Ne._getDictionary=function(e){if(!e)return null;const t=Object.keys(Ne.Words);for(let r=0;r<t.length;r+=1){const i=t[r];if(Ne._belongsToWordlist(e,Ne.Words[i]))return Ne.Words[i]}return null},Ne.prototype.toSeed=function(e){return e=e||"",Ne.pbkdf2(c.nfkd(this.phrase),c.nfkd("mnemonic".concat(e)),2048,64)},Ne.fromSeed=function(t,r){return b.checkArgument(Buffer.isBuffer(t),"seed must be a Buffer."),b.checkArgument(e.isArray(r)||e.isString(r),"wordlist must be a string or an array."),new Ne(t,r)},Ne.prototype.toHDPrivateKey=function(e,t){const r=this.toSeed(e);return Be.fromSeed(r,t)},Ne.prototype.toString=function(){return this.phrase},Ne.prototype.inspect=function(){return"<Mnemonic: ".concat(this.toString()," >")},Ne._mnemonic=function(e,t){const r=D.getRandomBuffer(e/8);return Ne._entropy2mnemonic(r,t)},Ne._entropy2mnemonic=function(e,t){let r,i="";for(r=0;r<e.length;r+=1)i+="00000000".concat(e[r].toString(2)).slice(-8);if(0!=(i+=Ne._entropyChecksum(e)).length%11)throw new g.InvalidEntropy(i);const o=[];for(r=0;r<i.length/11;r+=1){const e=parseInt(i.slice(11*r,11*(r+1)),2);o.push(t[e])}let n;return n=t===Ne.Words.JAPANESE?o.join("　"):o.join(" ")},Ne._entropyChecksum=function(e){const t=w.sha256(e),i=8*e.length;let o=new r(t.toString("hex"),16).toString(2);for(;0!=o.length%256;)o="0".concat(o);return o.slice(0,i/32)},Ne.pbkdf2=function(e,t,r,i){if(i>274877906880)throw Error("Requested key length too long");if("string"!=typeof e&&!Buffer.isBuffer(e))throw new TypeError("key must a string or Buffer");if("string"!=typeof t&&!Buffer.isBuffer(t))throw new TypeError("salt must a string or Buffer");"string"==typeof e&&(e=Buffer.from(e)),"string"==typeof t&&(t=Buffer.from(t));const o=Buffer.alloc(i);let a=Buffer.alloc(64);const s=Buffer.alloc(64),u=Buffer.alloc(t.length+4),c=Math.ceil(i/64);t.copy(u,0,0,t.length);for(let l=1;l<=c;l+=1){u[t.length+0]=255&l>>24,u[t.length+1]=255&l>>16,u[t.length+2]=255&l>>8,u[t.length+3]=255&l>>0;const h=n.hmac(n.sha512,e).update(u).digest();(a=Buffer.from(h)).copy(s,0,0,64);for(let t=1;t<r;t+=1){const t=n.hmac(n.sha512,e).update(a).digest();a=Buffer.from(t);for(let e=0;e<64;e+=1)s[e]^=a[e]}const f=64*(l-1),p=l===c?i-64*(c-1):64;s.copy(o,f,0,p)}return o};var Re="0.1.16";const Ce=function e(t){return this instanceof e?void(t?(this.initialize(),this.set(t)):this.initialize()):new e(t)};Ce.prototype.verify=function(t,r,i,o,n){let a;if(e.isUndefined(i)&&(i=new Ie),e.isUndefined(o)&&(o=0),e.isUndefined(n)&&(n=0),this.set({script:t,tx:i,nin:o,flags:n}),0!=(n&Ce.SCRIPT_VERIFY_SIGPUSHONLY)&&!t.isPushOnly())return this.errstr="SCRIPT_ERR_SIG_PUSHONLY",!1;if(!this.evaluate())return!1;n&Ce.SCRIPT_VERIFY_P2SH&&(a=this.stack.slice());const s=this.stack;if(this.initialize(),this.set({script:r,stack:s,tx:i,nin:o,flags:n}),!this.evaluate())return!1;if(0===this.stack.length)return this.errstr="SCRIPT_ERR_EVAL_FALSE_NO_RESULT",!1;const u=this.stack[this.stack.length-1];if(!Ce.castToBool(u))return this.errstr="SCRIPT_ERR_EVAL_FALSE_IN_STACK",!1;if(n&Ce.SCRIPT_VERIFY_P2SH&&r.isScriptHashOut()){if(!t.isPushOnly())return this.errstr="SCRIPT_ERR_SIG_PUSHONLY",!1;if(0===a.length)throw new Error("internal error - stack copy empty");const e=a[a.length-1],r=W.fromBuffer(e);return a.pop(),this.initialize(),this.set({script:r,stack:a,tx:i,nin:o,flags:n}),!(!this.evaluate()||(0===a.length?(this.errstr="SCRIPT_ERR_EVAL_FALSE_NO_P2SH_STACK",1):!Ce.castToBool(a[a.length-1])&&(this.errstr="SCRIPT_ERR_EVAL_FALSE_IN_P2SH_STACK",1)))}return!0},Ce.prototype.initialize=function(){this.stack=[],this.altstack=[],this.pc=0,this.pbegincodehash=0,this.nOpCount=0,this.vfExec=[],this.errstr="",this.flags=0},Ce.prototype.set=function(e){this.script=e.script||this.script,this.tx=e.tx||this.tx,this.nin=void 0===e.nin?this.nin:e.nin,this.stack=e.stack||this.stack,this.altstack=e.altstack||this.altstack,this.pc=void 0===e.pc?this.pc:e.pc,this.pbegincodehash=void 0===e.pbegincodehash?this.pbegincodehash:e.pbegincodehash,this.nOpCount=void 0===e.nOpCount?this.nOpCount:e.nOpCount,this.vfExec=e.vfExec||this.vfExec,this.errstr=e.errstr||this.errstr,this.flags=void 0===e.flags?this.flags:e.flags},Ce.true=Buffer.from([1]),Ce.false=Buffer.from([]),Ce.MAX_SCRIPT_ELEMENT_SIZE=520,Ce.LOCKTIME_THRESHOLD_BN=new r(Ce.LOCKTIME_THRESHOLD=5e8),Ce.SCRIPT_VERIFY_NONE=0,Ce.SCRIPT_VERIFY_P2SH=1,Ce.SCRIPT_VERIFY_STRICTENC=2,Ce.SCRIPT_VERIFY_DERSIG=4,Ce.SCRIPT_VERIFY_LOW_S=8,Ce.SCRIPT_VERIFY_NULLDUMMY=16,Ce.SCRIPT_VERIFY_SIGPUSHONLY=32,Ce.SCRIPT_VERIFY_MINIMALDATA=64,Ce.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS=128,Ce.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY=512,Ce.castToBool=function(e){for(let t=0;t<e.length;t+=1)if(0!==e[t])return t!=e.length-1||128!==e[t];return!1},Ce.prototype.checkSignatureEncoding=function(e){let t;if(0!=(this.flags&(Ce.SCRIPT_VERIFY_DERSIG|Ce.SCRIPT_VERIFY_LOW_S|Ce.SCRIPT_VERIFY_STRICTENC))&&!Y.isTxDER(e))return this.errstr="SCRIPT_ERR_SIG_DER_INVALID_FORMAT",!1;if(0!=(this.flags&Ce.SCRIPT_VERIFY_LOW_S)){if(!(t=Y.fromTxFormat(e)).hasLowS())return this.errstr="SCRIPT_ERR_SIG_DER_HIGH_S",!1}else if(0!=(this.flags&Ce.SCRIPT_VERIFY_STRICTENC)&&!(t=Y.fromTxFormat(e)).hasDefinedHashtype())return this.errstr="SCRIPT_ERR_SIG_HASHTYPE",!1;return!0},Ce.prototype.checkPubkeyEncoding=function(e){return!(0!=(this.flags&Ce.SCRIPT_VERIFY_STRICTENC)&&!M.isValid(e)&&(this.errstr="SCRIPT_ERR_PUBKEYTYPE",1))},Ce.prototype.evaluate=function(){if(1e4<this.script.toBuffer().length)return this.errstr="SCRIPT_ERR_SCRIPT_SIZE",!1;try{for(;this.pc<this.script.chunks.length;){if(!this.step())return!1}if(1e3<this.stack.length+this.altstack.length)return this.errstr="SCRIPT_ERR_STACK_SIZE",!1}catch(e){return this.errstr="SCRIPT_ERR_UNKNOWN_ERROR: ".concat(e),!1}return!(0<this.vfExec.length&&(this.errstr="SCRIPT_ERR_UNBALANCED_CONDITIONAL",1))},Ce.prototype.checkLockTime=function(e){return!!(this.tx.nLockTime<Ce.LOCKTIME_THRESHOLD&&e.lt(Ce.LOCKTIME_THRESHOLD_BN)||this.tx.nLockTime>=Ce.LOCKTIME_THRESHOLD&&e.gte(Ce.LOCKTIME_THRESHOLD_BN))&&!e.gt(new r(this.tx.nLockTime))&&!!this.tx.inputs[this.nin].isFinal()},Ce.prototype.step=function(){const t=0!=(this.flags&Ce.SCRIPT_VERIFY_MINIMALDATA),i=-1===this.vfExec.indexOf(!1);let o,n,a,s,u,c,l,h,f,p,d,m,g,b,y,v,_;const S=this.script.chunks[this.pc];this.pc+=1;const I=S.opcodenum;if(e.isUndefined(I))return this.errstr="SCRIPT_ERR_UNDEFINED_OPCODE",!1;if(S.buf&&S.buf.length>Ce.MAX_SCRIPT_ELEMENT_SIZE)return this.errstr="SCRIPT_ERR_PUSH_SIZE",!1;if(I>G.OP_16&&(this.nOpCount+=1,201<this.nOpCount))return this.errstr="SCRIPT_ERR_OP_COUNT",!1;if(I===G.OP_CAT||I===G.OP_SUBSTR||I===G.OP_LEFT||I===G.OP_RIGHT||I===G.OP_INVERT||I===G.OP_AND||I===G.OP_OR||I===G.OP_XOR||I===G.OP_2MUL||I===G.OP_2DIV||I===G.OP_MUL||I===G.OP_DIV||I===G.OP_MOD||I===G.OP_LSHIFT||I===G.OP_RSHIFT)return this.errstr="SCRIPT_ERR_DISABLED_OPCODE",!1;if(i&&0<=I&&I<=G.OP_PUSHDATA4){if(t&&!this.script.checkMinimalPush(this.pc-1))return this.errstr="SCRIPT_ERR_MINIMALDATA",!1;if(S.buf){if(S.len!==S.buf.length)throw new Error("Length of push value not equal to length of data");this.stack.push(S.buf)}else this.stack.push(Ce.false)}else if(i||G.OP_IF<=I&&I<=G.OP_ENDIF)switch(I){case G.OP_1NEGATE:case G.OP_1:case G.OP_2:case G.OP_3:case G.OP_4:case G.OP_5:case G.OP_6:case G.OP_7:case G.OP_8:case G.OP_9:case G.OP_10:case G.OP_11:case G.OP_12:case G.OP_13:case G.OP_14:case G.OP_15:case G.OP_16:u=I-(G.OP_1-1),o=new r(u).toScriptNumBuffer(),this.stack.push(o);break;case G.OP_NOP:break;case G.OP_NOP2:case G.OP_CHECKLOCKTIMEVERIFY:{if(!(this.flags&Ce.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY)){if(this.flags&Ce.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS)return this.errstr="SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS",!1;break}if(1>this.stack.length)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;const e=r.fromScriptNumBuffer(this.stack[this.stack.length-1],t,5);if(e.lt(new r(0)))return this.errstr="SCRIPT_ERR_NEGATIVE_LOCKTIME",!1;if(!this.checkLockTime(e))return this.errstr="SCRIPT_ERR_UNSATISFIED_LOCKTIME",!1;break}case G.OP_NOP1:case G.OP_NOP3:case G.OP_NOP4:case G.OP_NOP5:case G.OP_NOP6:case G.OP_NOP7:case G.OP_NOP8:case G.OP_NOP9:case G.OP_NOP10:if(this.flags&Ce.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS)return this.errstr="SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS",!1;break;case G.OP_IF:case G.OP_NOTIF:if(v=!1,i){if(1>this.stack.length)return this.errstr="SCRIPT_ERR_UNBALANCED_CONDITIONAL",!1;o=this.stack.pop(),v=Ce.castToBool(o),I===G.OP_NOTIF&&(v=!v)}this.vfExec.push(v);break;case G.OP_ELSE:if(0===this.vfExec.length)return this.errstr="SCRIPT_ERR_UNBALANCED_CONDITIONAL",!1;this.vfExec[this.vfExec.length-1]=!this.vfExec[this.vfExec.length-1];break;case G.OP_ENDIF:if(0===this.vfExec.length)return this.errstr="SCRIPT_ERR_UNBALANCED_CONDITIONAL",!1;this.vfExec.pop();break;case G.OP_VERIFY:if(1>this.stack.length)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;if(o=this.stack[this.stack.length-1],!(v=Ce.castToBool(o)))return this.errstr="SCRIPT_ERR_VERIFY",!1;this.stack.pop();break;case G.OP_RETURN:return this.errstr="SCRIPT_ERR_OP_RETURN",!1;case G.OP_TOALTSTACK:if(1>this.stack.length)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;this.altstack.push(this.stack.pop());break;case G.OP_FROMALTSTACK:if(1>this.altstack.length)return this.errstr="SCRIPT_ERR_INVALID_ALTSTACK_OPERATION",!1;this.stack.push(this.altstack.pop());break;case G.OP_2DROP:if(2>this.stack.length)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;this.stack.pop(),this.stack.pop();break;case G.OP_2DUP:if(2>this.stack.length)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;n=this.stack[this.stack.length-2],a=this.stack[this.stack.length-1],this.stack.push(n),this.stack.push(a);break;case G.OP_3DUP:{if(3>this.stack.length)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;n=this.stack[this.stack.length-3],a=this.stack[this.stack.length-2];const e=this.stack[this.stack.length-1];this.stack.push(n),this.stack.push(a),this.stack.push(e)}break;case G.OP_2OVER:if(4>this.stack.length)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;n=this.stack[this.stack.length-4],a=this.stack[this.stack.length-3],this.stack.push(n),this.stack.push(a);break;case G.OP_2ROT:if(6>this.stack.length)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;s=this.stack.splice(this.stack.length-6,2),this.stack.push(s[0]),this.stack.push(s[1]);break;case G.OP_2SWAP:if(4>this.stack.length)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;s=this.stack.splice(this.stack.length-4,2),this.stack.push(s[0]),this.stack.push(s[1]);break;case G.OP_IFDUP:if(1>this.stack.length)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;o=this.stack[this.stack.length-1],(v=Ce.castToBool(o))&&this.stack.push(o);break;case G.OP_DEPTH:o=new r(this.stack.length).toScriptNumBuffer(),this.stack.push(o);break;case G.OP_DROP:if(1>this.stack.length)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;this.stack.pop();break;case G.OP_DUP:if(1>this.stack.length)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;this.stack.push(this.stack[this.stack.length-1]);break;case G.OP_NIP:if(2>this.stack.length)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;this.stack.splice(this.stack.length-2,1);break;case G.OP_OVER:if(2>this.stack.length)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;this.stack.push(this.stack[this.stack.length-2]);break;case G.OP_PICK:case G.OP_ROLL:if(2>this.stack.length)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;if(o=this.stack[this.stack.length-1],u=(h=r.fromScriptNumBuffer(o,t)).toNumber(),this.stack.pop(),0>u||u>=this.stack.length)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;o=this.stack[this.stack.length-u-1],I===G.OP_ROLL&&this.stack.splice(this.stack.length-u-1,1),this.stack.push(o);break;case G.OP_ROT:{if(3>this.stack.length)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;c=this.stack[this.stack.length-3],l=this.stack[this.stack.length-2];const e=this.stack[this.stack.length-1];this.stack[this.stack.length-3]=l,this.stack[this.stack.length-2]=e,this.stack[this.stack.length-1]=c}break;case G.OP_SWAP:if(2>this.stack.length)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;c=this.stack[this.stack.length-2],l=this.stack[this.stack.length-1],this.stack[this.stack.length-2]=l,this.stack[this.stack.length-1]=c;break;case G.OP_TUCK:if(2>this.stack.length)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;this.stack.splice(this.stack.length-2,0,this.stack[this.stack.length-1]);break;case G.OP_SIZE:if(1>this.stack.length)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;h=new r(this.stack[this.stack.length-1].length),this.stack.push(h.toScriptNumBuffer());break;case G.OP_EQUAL:case G.OP_EQUALVERIFY:{if(2>this.stack.length)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;n=this.stack[this.stack.length-2],a=this.stack[this.stack.length-1];const e=n.toString("hex")===a.toString("hex");if(this.stack.pop(),this.stack.pop(),this.stack.push(e?Ce.true:Ce.false),I===G.OP_EQUALVERIFY){if(!e)return this.errstr="SCRIPT_ERR_EQUALVERIFY",!1;this.stack.pop()}}break;case G.OP_1ADD:case G.OP_1SUB:case G.OP_NEGATE:case G.OP_ABS:case G.OP_NOT:case G.OP_0NOTEQUAL:if(1>this.stack.length)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;switch(o=this.stack[this.stack.length-1],h=r.fromScriptNumBuffer(o,t),I){case G.OP_1ADD:h=h.add(r.One);break;case G.OP_1SUB:h=h.sub(r.One);break;case G.OP_NEGATE:h=h.neg();break;case G.OP_ABS:0>h.cmp(r.Zero)&&(h=h.neg());break;case G.OP_NOT:h=new r((0===h.cmp(r.Zero))+0);break;case G.OP_0NOTEQUAL:h=new r((0!==h.cmp(r.Zero))+0);break;default:throw new Error("Ended up in a default switch statement that should never be executed.")}this.stack.pop(),this.stack.push(h.toScriptNumBuffer());break;case G.OP_ADD:case G.OP_SUB:case G.OP_BOOLAND:case G.OP_BOOLOR:case G.OP_NUMEQUAL:case G.OP_NUMEQUALVERIFY:case G.OP_NUMNOTEQUAL:case G.OP_LESSTHAN:case G.OP_GREATERTHAN:case G.OP_LESSTHANOREQUAL:case G.OP_GREATERTHANOREQUAL:case G.OP_MIN:case G.OP_MAX:if(2>this.stack.length)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;switch(f=r.fromScriptNumBuffer(this.stack[this.stack.length-2],t),p=r.fromScriptNumBuffer(this.stack[this.stack.length-1],t),h=new r(0),I){case G.OP_ADD:h=f.add(p);break;case G.OP_SUB:h=f.sub(p);break;case G.OP_BOOLAND:h=new r((0!==f.cmp(r.Zero)&&0!==p.cmp(r.Zero))+0);break;case G.OP_BOOLOR:h=new r((0!==f.cmp(r.Zero)||0!==p.cmp(r.Zero))+0);break;case G.OP_NUMEQUAL:case G.OP_NUMEQUALVERIFY:h=new r((0===f.cmp(p))+0);break;case G.OP_NUMNOTEQUAL:h=new r((0!==f.cmp(p))+0);break;case G.OP_LESSTHAN:h=new r((0>f.cmp(p))+0);break;case G.OP_GREATERTHAN:h=new r((0<f.cmp(p))+0);break;case G.OP_LESSTHANOREQUAL:h=new r((0>=f.cmp(p))+0);break;case G.OP_GREATERTHANOREQUAL:h=new r((0<=f.cmp(p))+0);break;case G.OP_MIN:h=0>f.cmp(p)?f:p;break;case G.OP_MAX:h=0<f.cmp(p)?f:p;break;default:throw new Error("Ended up in a default switch statement that should never be executed.")}if(this.stack.pop(),this.stack.pop(),this.stack.push(h.toScriptNumBuffer()),I===G.OP_NUMEQUALVERIFY){if(!Ce.castToBool(this.stack[this.stack.length-1]))return this.errstr="SCRIPT_ERR_NUMEQUALVERIFY",!1;this.stack.pop()}break;case G.OP_WITHIN:{if(3>this.stack.length)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;f=r.fromScriptNumBuffer(this.stack[this.stack.length-3],t),p=r.fromScriptNumBuffer(this.stack[this.stack.length-2],t);const e=r.fromScriptNumBuffer(this.stack[this.stack.length-1],t);v=0>=p.cmp(f)&&0>f.cmp(e),this.stack.pop(),this.stack.pop(),this.stack.pop(),this.stack.push(v?Ce.true:Ce.false)}break;case G.OP_RIPEMD160:case G.OP_SHA1:case G.OP_SHA256:case G.OP_HASH160:case G.OP_HASH256:{if(1>this.stack.length)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;let e;o=this.stack[this.stack.length-1],I===G.OP_RIPEMD160?e=w.ripemd160(o):I===G.OP_SHA1?e=w.sha1(o):I===G.OP_SHA256?e=w.sha256(o):I===G.OP_HASH160?e=w.sha256ripemd160(o):I===G.OP_HASH256&&(e=w.sha256sha256(o)),this.stack.pop(),this.stack.push(e)}break;case G.OP_CODESEPARATOR:this.pbegincodehash=this.pc;break;case G.OP_CHECKSIG:case G.OP_CHECKSIGVERIFY:{if(2>this.stack.length)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;d=this.stack[this.stack.length-2],m=this.stack[this.stack.length-1],g=(new W).set({chunks:this.script.chunks.slice(this.pbegincodehash)});const e=(new W).add(d);if(g.findAndDelete(e),!this.checkSignatureEncoding(d)||!this.checkPubkeyEncoding(m))return!1;try{b=Y.fromTxFormat(d),y=M.fromBuffer(m,!1),_=this.tx.verifySignature(b,y,this.nin,g)}catch(e){_=!1}if(this.stack.pop(),this.stack.pop(),this.stack.push(_?Ce.true:Ce.false),I===G.OP_CHECKSIGVERIFY){if(!_)return this.errstr="SCRIPT_ERR_CHECKSIGVERIFY",!1;this.stack.pop()}}break;case G.OP_CHECKMULTISIG:case G.OP_CHECKMULTISIGVERIFY:{let e=1;if(this.stack.length<e)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;let i=r.fromScriptNumBuffer(this.stack[this.stack.length-e],t).toNumber();if(0>i||20<i)return this.errstr="SCRIPT_ERR_PUBKEY_COUNT",!1;if(this.nOpCount+=i,201<this.nOpCount)return this.errstr="SCRIPT_ERR_OP_COUNT",!1;let o=e+=1;if(e+=i,this.stack.length<e)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;let n=r.fromScriptNumBuffer(this.stack[this.stack.length-e],t).toNumber();if(0>n||n>i)return this.errstr="SCRIPT_ERR_SIG_COUNT",!1;let a=e+=1;if(e+=n,this.stack.length<e)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;g=(new W).set({chunks:this.script.chunks.slice(this.pbegincodehash)});for(let e=0;e<n;e+=1)d=this.stack[this.stack.length-a-e],g.findAndDelete((new W).add(d));for(_=!0;_&&0<n;){if(d=this.stack[this.stack.length-a],m=this.stack[this.stack.length-o],!this.checkSignatureEncoding(d)||!this.checkPubkeyEncoding(m))return!1;let e;try{b=Y.fromTxFormat(d),y=M.fromBuffer(m,!1),e=this.tx.verifySignature(b,y,this.nin,g)}catch(t){e=!1}e&&(a+=1,n-=1),o+=1,n>(i-=1)&&(_=!1)}for(;1<e;)e-=1,this.stack.pop();if(1>this.stack.length)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;if(this.flags&Ce.SCRIPT_VERIFY_NULLDUMMY&&this.stack[this.stack.length-1].length)return this.errstr="SCRIPT_ERR_SIG_NULLDUMMY",!1;if(this.stack.pop(),this.stack.push(_?Ce.true:Ce.false),I===G.OP_CHECKMULTISIGVERIFY){if(!_)return this.errstr="SCRIPT_ERR_CHECKMULTISIGVERIFY",!1;this.stack.pop()}}break;default:return this.errstr="SCRIPT_ERR_BAD_OPCODE",!1}return!0};class ze extends ce{constructor(e,t,r){super(e,t,r);const i=this;this.publicKeys=t||e.publicKeys,this.threshold=1,this.redeemScript=r,b.checkState(W.buildScriptHashOut(this.redeemScript).equals(this.output.script),"Provided redeemScript doesn't hash to the provided output"),this.publicKeyIndex={},this.publicKeys.forEach((e,t)=>{i.publicKeyIndex[e.toString()]=t}),this.signatures=Array(this.publicKeys.length)}toObject(){for(var e=arguments.length,t=Array(e),r=0;r<e;r++)t[r]=arguments[r];const i=ce.prototype.toObject.apply(this,t);return i.threshold=this.threshold,i.publicKeys=this.publicKeys.map(e=>e.toString()),i.signatures=this._serializeSignatures(),i}_deserializeSignatures(e){return e.map(e=>e?new le(e):void 0)}_serializeSignatures(){return this.signatures.map(e=>e?e.toObject():void 0)}getSignatures(e,t,r,i){return b.checkState(this.output instanceof re,"Malformed output found when signing transaction"),i=i||Y.SIGHASH_ALL|Y.SIGHASH_FORKID,this.publicKeys.filter(e=>e.toString()===t.publicKey.toString()).map(o=>new le({publicKey:o,prevTxId:this.prevTxId,outputIndex:this.outputIndex,inputIndex:r,signature:se.sign(e,t,i,r,this.output.script,this.output.satoshisBN),sigtype:i}))}addSignature(e,t){return b.checkState(!this.isFullySigned(),"All needed signatures have already been added"),b.checkArgument(void 0!==this.publicKeyIndex[t.publicKey.toString()],"Signature has no matching public key"),b.checkState(this.isValidSignature(e,t)),this.signatures[this.publicKeyIndex[t.publicKey.toString()]]=t,this._updateScript(),this}_updateScript(){return this.setScript(W.buildP2SHMultisigIn(this.publicKeys,this.threshold,this._createSignatures(),{cachedMultisig:this.redeemScript})),this}_createSignatures(){return this.signatures.filter(e=>void 0!==e).map(e=>k.concat([e.signature.toDER(),k.integerAsSingleByteBuffer(e.sigtype)]))}clearSignatures(){this.signatures=Array(this.publicKeys.length),this._updateScript()}isFullySigned(){return this.countSignatures()===this.threshold}countMissingSignatures(){return this.threshold-this.countSignatures()}countSignatures(){return this.signatures.reduce((e,t)=>e+!!t,0)}publicKeysWithoutSignature(){const e=this;return this.publicKeys.filter(t=>!e.signatures[e.publicKeyIndex[t.toString()]])}isValidSignature(e,t){return t.signature.nhashtype=t.sigtype,se.verify(e,t.signature,t.publicKey,t.inputIndex,this.redeemScript,this.output.satoshisBN)}_estimateSize(){return ze.OPCODES_SIZE+this.threshold*ze.SIGNATURE_SIZE+this.publicKeys.length*ze.PUBKEY_SIZE}}ze.OPCODES_SIZE=7,ze.SIGNATURE_SIZE=74,ze.PUBKEY_SIZE=34;const Ue=/[0-9A-Fa-f]{64}/;class He{constructor(e,t){if(!Ue.test(e))throw new Error("txId not in a valid hex format: ".concat(e));if(0>t||4294967295<t||Number.isNaN(t))throw new Error("outputIndex out of range: ".concat(t));this.txId=e,this.outputIndex=t}toString(){return"".concat(this.txId,":").concat(this.outputIndex)}static fromString(e){const t=e.split(":");if(2!==t.length)throw new Error("Invalid string format");return new He(t[0],parseInt(t[1],10))}get txid(){return this.txId}get vout(){return this.outputIndex}equals(e){return this.outputIndex===e.outputIndex&&this.txId.toLowerCase()===e.txId.toLowerCase()}}const Ke=function(e,t){if(!(this instanceof Ke))return new Ke(e,t);if(this.extras={},this.knownParams=t||[],this.address=null,this.network=null,this.amount=null,this.message=null,"string"==typeof e){const t=Ke.parse(e);t.amount&&(t.amount=this._parseAmount(t.amount)),this._fromObject(t)}else{if("object"!=typeof e)throw new TypeError("Unrecognized data format.");this._fromObject(e)}};Ke.fromString=function(e){if("string"!=typeof e)throw new TypeError("Expected a string");return new Ke(e)},Ke.fromObject=function(e){return new Ke(e)},Ke.isValid=function(e,t){try{new Ke(e,t)}catch(e){return!1}return!0},Ke.parse=function(e){const t=l.parse(e,!0);if("bitcoincash:"!==t.protocol)throw new TypeError("Invalid bitcoin cash URI");const r=/[^:]*:\/?\/?([^?]*)/.exec(e);return t.query.address=r&&r[1]||void 0,t.query},Ke.Members=["address","amount","message","label","r"],Ke.prototype._fromObject=function(e){if(!J.isValid(e.address))throw new TypeError("Invalid bitcoin address");this.address=new J(e.address),this.network=this.address.network,this.amount=e.amount,Object.keys(e).forEach(t=>{if("address"!==t&&"amount"!==t){if(/^req-/.exec(t)&&-1===this.knownParams.indexOf(t))throw Error("Unknown required argument ".concat(t));(-1<Ke.Members.indexOf(t)?this:this.extras)[t]=e[t]}})},Ke.prototype._parseAmount=function(e){if(e=+e,Number.isNaN(e))throw new TypeError("Invalid amount");return ge.fromBTC(e).toSatoshis()},Ke.prototype.toJSON=function(){const t={};for(let e=0;e<Ke.Members.length;e+=1){const r=Ke.Members[e];1!==Object.keys(this).findIndex(e=>e===r)&&void 0!==this[r]&&(t[r]=this[r].toString())}return e.extend(t,this.extras),t},Ke.prototype.toObject=Ke.prototype.toJSON,Ke.prototype.toString=function(){const t={};return this.amount&&(t.amount=ge.fromSatoshis(this.amount).toBTC()),this.message&&(t.message=this.message),this.label&&(t.label=this.label),this.r&&(t.r=this.r),e.extend(t,this.extras),l.format({protocol:"bitcoincash:",host:this.address,query:t})},Ke.prototype.inspect=function(){return"<URI: ".concat(this.toString(),">")};const Fe=function e(t){if(!(this instanceof e))return new e(t);Buffer.isBuffer(t)?this.buf=t:"number"==typeof t?this.fromNumber(t):t instanceof r?this.fromBN(t):t&&this.set(t)};Fe.prototype.set=function(e){return this.buf=e.buf||this.buf,this},Fe.prototype.fromString=function(e){return this.set({buf:Buffer.from(e,"hex")}),this},Fe.prototype.toString=function(){return this.buf.toString("hex")},Fe.prototype.fromBuffer=function(e){return this.buf=e,this},Fe.prototype.fromBufferReader=function(e){return this.buf=e.readVarintBuf(),this},Fe.prototype.fromBN=function(e){return this.buf=q().writeVarintBN(e).concat(),this},Fe.prototype.fromNumber=function(e){return this.buf=q().writeVarintNum(e).concat(),this},Fe.prototype.toBuffer=function(){return this.buf},Fe.prototype.toBN=function(){return V(this.buf).readVarintBN()},Fe.prototype.toNumber=function(){return V(this.buf).readVarintNum()};const Le={};Le.version="v".concat(Re),Le.versionGuard=function(){},Le.versionGuard(global._bitcoin),global._bitcoin=Le.version,Le.crypto={},Le.crypto.BN=r,Le.crypto.ECDSA=ie,Le.crypto.Hash=w,Le.crypto.Random=D,Le.crypto.Point=L,Le.crypto.Signature=Y,Le.encoding={},Le.encoding.Base58=v,Le.encoding.Base58Check=O,Le.encoding.BufferReader=V,Le.encoding.BufferWriter=q,Le.encoding.Varint=Fe,Le.util={},Le.util.buffer=k,Le.util.js=S,Le.util.preconditions=b,Le.errors=g,Le.Address=J,Le.Block=ke,Le.Block.BlockHeader=$,Le.Block.MerkleBlock=Ae,Le.BlockHeader=$,Le.HDPrivateKey=Be,Le.HDPublicKey=Pe,Le.MerkleBlock=Ae,Le.Message=Te,Le.Mnemonic=Ne,Le.Networks=z,Le.Opcode=G,Le.PrivateKey=j,Le.PublicKey=M,Le.Script=W,Le.Script.Interpreter=Ce,Le.Transaction=Ie,Le.Transaction.Input=ce,Le.Transaction.Input.MultiSig=fe,Le.Transaction.Input.MultiSigScriptHash=he,Le.Transaction.Input.PublicKey=pe,Le.Transaction.Input.PublicKeyHash=de,Le.Transaction.Input.ScriptHash=ze,Le.Transaction.Output=re,Le.Transaction.OutputId=He,Le.Transaction.Sighash=se,Le.Transaction.Signature=le,Le.Transaction.UnspentOutput=be,Le.Unit=ge,Le.URI=Ke,Le.deps={},Le.deps.bnjs=r,Le.deps.bs58=i,Le.deps.Buffer=Buffer,Le.deps.elliptic=t,Le.deps._=e;export default Le;